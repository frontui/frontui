{"version":3,"sources":["Ui.js","accordion.js","ui.js","alert.js","checkAll.js","dropdown.js","modal.js","notify.js","pagination.js","placeholder.js","slider.js","smoothscroll.js","switcher.js","tab.js","tooltips.js","transition.js"],"names":["root","factory","define","amd","exports","module","require","Ui","jQuery","this","$","fn","accordion","option","defaults","item","target","active","except","extend","switcher","each","$items","find","on","e","$this","relatedTarget","has","hasClass","$actived","$target","slideUp","stop","stopPropagation","preventDefault","Plugin","data","Alert","call","dismiss","closeBtn","el","callback","that","$close","close","VERSION","TRANSITION_DURATION","prototype","removeElement","ev","Event","$parent","detach","remove","trigger","selector","attr","replace","length","closest","isDefaultPrevented","removeClass","support","transition","one","emulateTransitionEnd","fadeOut","alert","Constructor","document","is","CheckAll","toggle","element","$el","isReverse","proxy","reverse","activate","isCheck","prop","map","checked","checkAll","dropMenus","always","getParent","isActive","undefined","clearMenus","underfined","addClass","auto","$input","isAuto","autoFill","list","show","hideAllMenus","input","$vLi","$Li","getList","isMatch","txt","value","trim","val","filter","text","eq","chkMatch","placeholder","hide","indexOf","parent","scrollTop","i","top","position","args","slice","arguments","Dropdown","apply","wrap","toggleBtn","toggleIBtn","ul","test","tagName","selected","keydown","which","currentItem","index","isInput","inputText","$list","focusIn","dropdown","$wrap","_relatedTarget","fnName","title","content","mid","Modal","CreateModal","options","DEFAULTS","setTitle","setContent","$body","body","$dialog","$backdrop","isShown","originalBodyPad","scrollbarWidth","remote","load","$element","backdrop","keyboard","TEMPLATE","join","match","key","html","appendTo","checkScrollbar","setScrollbar","escape","resize","adjustDialog","offsetWidth","enforceFocus","fadeIn","off","hideModal","id","resetAdjustments","resetScrollbar","handleUpdate","css","paddingLeft","paddingRight","fullWindowWidth","window","innerWidth","documentElementRect","documentElement","getBoundingClientRect","right","Math","abs","left","bodyIsOverflowing","clientWidth","measureScrollbar","bodyPad","parseInt","style","scrollDiv","createElement","className","append","removeChild","$content","$title","modal","showLoading","template","hideLoading","modalLayer","opt","icon","buttons","href","ok","noop","$that","btnHtml","btns","push","splice","obj","isFunction","Handler","initModal","successModalLayer","config","location","confirmModalLayer","alertModalLayer","closeModalLayer","dialogApi","next","dialog","get","showModal","$dom","originalUrl","url","init","$iframe","src","width","height","allowtransparency","frameborder","scrolling","adjustHeight","empty","setProp","setUrl","h","contentWindow","frameElement","contents","api","iframe","modalList","ifr","iframeModal","isPlainObject","message","Notify","containers","messages","notify","status","closeAll","group","instantly","timeout","currentStatus","uuid","random","toString","substr","pos","opacity","onClose","prepend","marginbottom","margin-top","outerHeight","margin-bottom","animate","closefn","setTimeout","hover","clearTimeout","instanly","finalize","children","container","Pagination","pageStr","_init","pageSize","items","itemsOnPage","pages","displayedPages","edges","currentPage","showSizeChanger","lblPrev","lblNext","onSelectPage","inited","_setOption","current","ceil","halfDisplayed","_render","_renderPageSize","selectPage","pageIndex","render","o","interval","_getInterval","prevAll","_append","start","end","min","begin","max","renderPageStr","select","after","oPageStr","matches","before","opts","islb","pagination","Placeholder","isSupport","$placeholder","focus","blur","f","s","me","instance","Unslider","sizes","speed","delay","complete","keys","dots","fluid","prev","arrows","_","outerWidth","calculate","setup","initEvent","overflow","first","round","prevText","nextText","event","swipe","move","cb","moveEvent","curIndex","siblings","setInterval","clearInterval","37","39","27","slider","emit","elem","scrollToElement","targetElement","SmoothScroll","offset","docH","winH","duration","promise","done","easing","easeOutExpo","x","t","b","c","d","pow","scroll","hash","smoothScroll","Switcher","keep","toggleClass","Tab","tab","$ul","$previous","hideEvent","showEvent","type","$active","clickHandler","Tooltips","$tooltip","tooltipdelay","checkdelay","animation","cls","removeAttr","mouseenter","mouseleave","visibility","offsetHeight","tmppos","split","tcss","display","variants","bottom","boundary","checkBoundary","activeElement","axis","scrollLeft","tooltips","handler","transitionEnd","transEndEventNames","WebkitTransition","MozTransition","OTransition","name","called","special","uiTransitionEnd","bindType","delegateType","handle","handleObj"],"mappings":"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","file":"ui.js","sourcesContent":["// entry\r\nfunction Ui() {}\r\n","//     accordion 手风琴\r\n//     依赖于 ui/switcher.js\r\n//     tommyshao <jinhong.shao@frontpay.cn>\r\n\r\n// API:\r\n// -----\r\n+(function($) {\r\n\r\n    'use strict';\r\n\r\n    $.fn.accordion = function(option){\r\n        var defaults = {\r\n            item: 'li',\r\n            target: '>div',\r\n            active: 'active',\r\n            except: false\r\n        };\r\n\r\n        option = $.extend({}, defaults, option);\r\n\r\n        // 直接调用\r\n        $(this).switcher(option);\r\n\r\n        // 事件监听\r\n        return $(this).each(function(){\r\n            var $items = $(this).find(option.item);\r\n            $(this).on('select.ui.switcher', function(e){\r\n                var $this = $(e.relatedTarget), has = $this.hasClass(option.active), $actived = $items.find(option.target), $target = $this.find(option.target);\r\n                !!!(option.except) && $actived.slideUp();\r\n                $target.stop()[!has ? 'slideUp': 'slideDown']();\r\n\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n            });\r\n        });\r\n    };\r\n\r\n})(jQuery);\r\n\r\n",";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['jquery'], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('jquery'));\n  } else {\n    root.Ui = factory(root.jQuery);\n  }\n}(this, function($) {\n// entry\r\nfunction Ui() {}\r\n\n//     accordion 手风琴\r\n//     依赖于 ui/switcher.js\r\n//     tommyshao <jinhong.shao@frontpay.cn>\r\n\r\n// API:\r\n// -----\r\n+(function($) {\r\n\r\n    'use strict';\r\n\r\n    $.fn.accordion = function(option){\r\n        var defaults = {\r\n            item: 'li',\r\n            target: '>div',\r\n            active: 'active',\r\n            except: false\r\n        };\r\n\r\n        option = $.extend({}, defaults, option);\r\n\r\n        // 直接调用\r\n        $(this).switcher(option);\r\n\r\n        // 事件监听\r\n        return $(this).each(function(){\r\n            var $items = $(this).find(option.item);\r\n            $(this).on('select.ui.switcher', function(e){\r\n                var $this = $(e.relatedTarget), has = $this.hasClass(option.active), $actived = $items.find(option.target), $target = $this.find(option.target);\r\n                !!!(option.except) && $actived.slideUp();\r\n                $target.stop()[!has ? 'slideUp': 'slideDown']();\r\n\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n            });\r\n        });\r\n    };\r\n\r\n})(jQuery);\r\n\r\n\n//     警告框\r\n//     tommyshao <jinhong.shao@frontpay.cn>\r\n//     Reference bootstrap.alert.js\r\n//     API:\r\n//     $(element).on('closed.ui.alert', function(e, obj){});\r\n\r\n+(function($) {\r\n    'use strict';\r\n\r\n    var dismiss = '[data-dismiss=\"alert\"]';\r\n    var closeBtn = 'em';\r\n\r\n    // 构造函数\r\n    // ------\r\n    var Alert = function (el, callback) {\r\n        var that = this;\r\n        if (typeof callback === 'function') {\r\n            $(el).on('click', closeBtn, function () {\r\n                var $close = $(this);\r\n                callback(function () {\r\n                    that.close.call($close)\r\n                });\r\n            });\r\n        } else {\r\n            $(el).on('click', closeBtn, this.close);\r\n        }\r\n    };\r\n\r\n    Alert.VERSION = '1.0.0';\r\n\r\n    // 动画过渡时间\r\n    Alert.TRANSITION_DURATION = 150;\r\n\r\n    // 关闭\r\n    // -----\r\n    Alert.prototype.close = function (e) {\r\n        var $this = $(this);\r\n        var selector = $(this).attr('data-target');\r\n\r\n        if (!selector) { // a[href=#test]关闭 id为test的alert\r\n            selector = $this.attr('href');\r\n            selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, ''); // strip for ie7\r\n        }\r\n\r\n        var $parent = $(selector);\r\n\r\n        if (e) e.preventDefault();\r\n\r\n        if (!$parent.length) {\r\n            $parent = $this.closest('.alert');\r\n        }\r\n\r\n        $parent.trigger(e = $.Event('close.ui.alert'));\r\n\r\n        if (e.isDefaultPrevented()) return;\r\n\r\n        $parent.removeClass('in');\r\n\r\n        function removeElement() {\r\n            var ev = $.Event('closed.ui.alert', {relatedTarget: $parent});\r\n            $parent.detach().remove();\r\n            $this.trigger(ev);\r\n        }\r\n\r\n        if ($.support.transition && $parent.hasClass('fade')) { // css3\r\n            $parent.one('uiTransitionEnd', removeElement)\r\n                .emulateTransitionEnd(Alert.TRANSITION_DURATION)\r\n        } else {\r\n            $parent.fadeOut(Alert.TRANSITION_DURATION, removeElement)\r\n        }\r\n    };\r\n\r\n\r\n    // 插件定义\r\n    // -------\r\n    function Plugin(option) {\r\n        return $(this).each(function () {\r\n            var $this = $(this);\r\n            var data = $this.data('ui.alert');\r\n\r\n            if (!data) $this.data('ui.alert', (data = new Alert(this, option)));\r\n            if (typeof option == 'string') data[option].call($(this));\r\n        })\r\n    }\r\n\r\n\r\n    // jQuery 插件扩展\r\n    // --------------\r\n    $.fn.alert = Plugin;\r\n    $.fn.alert.Constructor = Alert;\r\n\r\n    // 元素插件绑定\r\n    // -----------\r\n    $(function () {\r\n        $(document).on('click.ui.alert', function (e) {\r\n            var that = e.target;\r\n            $(that).is(dismiss) && Alert.prototype.close.call(that, e);\r\n        })\r\n    })\r\n})(jQuery);\r\n\n//     @appName: checkAll 全选\r\n//     @version: v1.0.0\r\n//     @author: TommyShao\r\n//     @Created 2015/12/22\r\n//     @description:\r\n//     @useage:\r\n\r\n// **用法**\r\n// ```\r\n//      <input type=\"checkbox\" data-toggle=\"checkAll\" data-target=\"selector\" />\r\n//      $(element).on('checked.ui.checkAll', function(e){ e.relatedTarget; });\r\n//      $(element).on('reversed.ui.checkAll', function(e){ e.relatedTarget; });\r\n// ```\r\n\r\n+(function($) {\r\n    'use strict';\r\n\r\n    // 全局绑定选择器\r\n    var toggle = '[data-toggle=\"checkAll\"]';\r\n\r\n    // 构造函数\r\n    // -------\r\n    // * `element` dom元素对象\r\n\r\n    var CheckAll = function (element) {\r\n        var $this = this;\r\n        $this.$el = $(element);\r\n        $this.$target = $($this.$el.data('target'));\r\n        $this.isReverse = $this.$el.data('reverse');\r\n\r\n        // 监听 `click` 点击事件\r\n        // 直接执行实例方法\r\n        // * `reverse` 反选功能\r\n        // * `activate` 全选\r\n        $this.$el.on('click', $.proxy($this.isReverse ? this.reverse : this.activate, this));\r\n    };\r\n\r\n    // 插件版本号\r\n    // --------\r\n    // 1.0.0\r\n    CheckAll.VERSION = '1.0.0';\r\n\r\n    // 全选功能\r\n    // --------\r\n    // Function activate\r\n    CheckAll.prototype.activate = function () {\r\n        // 当前dom元素是否勾选\r\n        var isCheck = this.$el.is(':checked');\r\n        // 创建选中事件\r\n        // `relatedTarget` 绑定为当前dom元素\r\n        var e = $.Event('checked.ui.checkAll', {relatedTarget: this.$el});\r\n        // 设置所有目标元素属性为选中\r\n        this.$target.prop('checked', isCheck);\r\n        // 触发用户自定义选中事件\r\n        this.$el.trigger(e);\r\n    };\r\n\r\n    // 反选功能\r\n    // -------\r\n    CheckAll.prototype.reverse = function () {\r\n        // 定义反选事件类型\r\n        var e = $.Event('reversed.ui.checkAll', {relatedTarget: this.$el});\r\n        // 遍历所有目标元素，将他们选中属性反转\r\n        this.$target.map(function () {\r\n            return $(this).prop('checked', !this.checked)\r\n        });\r\n        // 触发反选事件api\r\n        this.$el.trigger(e);\r\n    };\r\n\r\n\r\n    // 插件定义\r\n    // -------\r\n    function Plugin(option) {\r\n        return $(this).each(function () {\r\n            var $this = $(this);\r\n            var data = $this.data('ui.checkAll');\r\n\r\n            if (!data) $this.data('ui.checkAll', (data = new CheckAll(this)));\r\n            if (typeof option == 'string') data[option]();\r\n        })\r\n    }\r\n\r\n\r\n    // jQuery 插件扩展\r\n    // -------------\r\n    $.fn.checkAll = Plugin;\r\n    $.fn.checkAll.Constructor = CheckAll;\r\n\r\n    // 全局绑定插件\r\n    // -------------\r\n    $(function () {\r\n        $(toggle).checkAll()\r\n    });\r\n})(jQuery);\r\n\n//     菜单下拉|select\r\n//     tommyshao <jinhong.shao@frontpay.cn>\r\n//     Reference bootstrap.dropdown.js\r\n\r\n// API\r\n// -----\r\n// $(element).on('selected.ui.dropdown', function(e, obj){});\r\n\r\n+(function($) {\r\n    'use strict';\r\n\r\n    // 默认高亮类\r\n    var active = 'active';\r\n    // 绑定默认选择器\r\n    var wrap = '.form-control-dropdown';\r\n    var toggle = '[data-toggle=\"dropdown\"],.form-control-dropdown-value';\r\n    var toggleBtn = '.form-control-dropdown-btn, [data-toggle=\"dropdown-btn\"]';\r\n    var toggleIBtn = '.form-control-dropdown-btn > i, [data-toggle=\"dropdown-btn\"] > i';\r\n    var ul = '.form-control-dropdown-menu';\r\n    var list = '.form-control-dropdown-menu li, [role=\"list\"] li';\r\n\r\n    // 构造函数\r\n    // -------\r\n    var Dropdown = function (el) {\r\n        $(el).on('click.ui.dropdown', this.toggle);\r\n\r\n        if (/input/i.test(el.tagName)) {\r\n            $(el).on('keyup.ui.dropFilter', this.filter)\r\n\r\n            //.on('focusin.ui.dropFilter', this.focusIn)\r\n        }\r\n\r\n\r\n        var $target = getParent(el);\r\n        $target.on('click.ui.dropSelect', list, this.selected($target))\r\n    };\r\n\r\n    // 版本\r\n    // ----------\r\n    // 1.0.0\r\n\r\n    Dropdown.VERSION = '1.0.0';\r\n\r\n    // 鼠标点击\r\n    // ---------\r\n    Dropdown.prototype.toggle = function (e) {\r\n        var $this = $(this);\r\n\r\n        if ($this.is('.disabled,:disabled')) return;\r\n\r\n        dropMenus($this);\r\n\r\n        return false\r\n    };\r\n\r\n    // 键盘按键 focus\r\n    // -------------\r\n    //Dropdown.prototype.CURRENT_ITEM = -1;\r\n    Dropdown.prototype.keydown = function (e) {\r\n        //console.log(e.which)\r\n        if (e.which === 27) { // esc\r\n            clearMenus(e);\r\n            return;\r\n        }\r\n        if (!/(38|40|27|32|13|46|8)/.test(e.which)) return;\r\n\r\n        var $this = $(this);\r\n        var currentItem = $this.data('currentItem') === undefined ? -1 : $this.data('currentItem');\r\n\r\n        //e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        if ($this.is('.disabled, :disabled')) return;\r\n\r\n        var $target = getParent($this);\r\n        active = $this.data('active') || active;\r\n\r\n        var isActive = $target.hasClass(active);\r\n\r\n        //console.log(e.which)\r\n        if ((!isActive && e.which != 27) || (isActive && e.which == 27)) {\r\n            //console.log(e.which);\r\n            if (e.which == 27) $target.find(toggle).trigger('focus');\r\n            return $this.trigger('click');\r\n        }\r\n\r\n        var $items = $target.find(list).filter(':visible');\r\n\r\n        if (!$items.length) return;\r\n\r\n        if (e.which == 13 && $items.filter('.hover').length) { // enter\r\n            $items.filter('.hover').trigger('click.ui.dropSelect');\r\n            return;\r\n        }\r\n\r\n        var index = $items.index(e.target) > -1 ? $items.index(e.target) : currentItem;\r\n\r\n\r\n        if (e.which == 38 && index >= 0)  index--;  // up\r\n        if (e.which == 40 && index < $items.length) index++; // down\r\n        //if (!~index) index = 0;\r\n        //console.log(index);\r\n        if (index < 0) index = $items.length - 1;\r\n        if (index >= $items.length) index = 0;\r\n\r\n        scrollTop($items, index);\r\n\r\n        $this.data('currentItem', index);\r\n\r\n        $items.removeClass('hover').eq(index).addClass('hover').trigger('focus')\r\n    };\r\n\r\n    // 下拉菜单选中\r\n    // ---------\r\n    Dropdown.prototype.selected = function (el) {\r\n        var $target = el.find(toggle);\r\n        return function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            var isInput = /input/i.test($target[0].tagName);\r\n            var option = $.trim($(this)[isInput ? 'text' : 'html']());\r\n            $target[isInput ? 'val' : 'html'](option).trigger('selected.ui.dropdown', this).trigger('blur');\r\n            clearMenus();\r\n            return false;\r\n        }\r\n    };\r\n\r\n    // input输入过滤\r\n    // -----------\r\n    Dropdown.prototype.filter = function (e) {\r\n        if (!/input/i.test(e.target.tagName)) return;\r\n\r\n        var $this = $(this);\r\n        var inputText = $.trim($this.val());\r\n        var $list = getList($this);\r\n        if (inputText === '') {\r\n            $list.show();\r\n            return;\r\n        }\r\n\r\n        if ($list.length) {\r\n            $list.map(function () {\r\n                var text = $(this).text();\r\n                if (text.indexOf(inputText) > -1) {\r\n                    return $(this).show();\r\n                } else {\r\n                    return $(this).hide();\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    Dropdown.prototype.focusIn = function (e) {\r\n        var $this = $(this);\r\n        dropMenus($this, true)\r\n        //Dropdown.prototype.filter.call(this, e);\r\n    };\r\n\r\n    // 显示当前展开dropdown\r\n    // -------------------\r\n\r\n    function dropMenus($this, always) {\r\n        var $target = getParent($this);\r\n        active = $this.data('active') || active;\r\n\r\n        var isActive = $target.hasClass(active);\r\n\r\n        always === undefined && clearMenus(underfined,1);\r\n\r\n        if (!isActive) {\r\n            $target.addClass(active);\r\n            $this.attr('aria-expanded', true).trigger('show.ui.dropdown', this)\r\n        }\r\n    }\r\n\r\n    // 清除页面所有dropdown\r\n    // ------------------\r\n    function clearMenus(e, auto) {\r\n        $(toggle).each(function () {\r\n            var $this = $(this);\r\n            var $target = getParent($this);\r\n            var $input = $target.find(toggle);\r\n            var isAuto = $this.attr('data-auto');\r\n            active = $this.data('active') || active;\r\n\r\n            if (!$target.hasClass(active)) return;\r\n            if (e && e.isDefaultPrevented()) return;\r\n\r\n            // 隐藏之前自动赋值\r\n            // console.log(isAuto)\r\n            auto && isAuto && autoFill($this, $input);\r\n\r\n            $target.removeClass(active).find(list).removeClass('hover').show();\r\n            $this.attr('aria-expanded', 'false').trigger('hide.ui.dropdown', this).data('currentItem', -1);\r\n\r\n            $input.length && $input.trigger('blur');\r\n\r\n        })\r\n    }\r\n\r\n    function hideAllMenus(e) {\r\n        clearMenus(e, 1)\r\n    }\r\n\r\n    // 默认选中\r\n    // -----------\r\n    function autoFill(element, input) {\r\n        var $Li = getList(element), $vLi, isMatch = 0, txt = '', value = $.trim(input.val());\r\n\r\n        $vLi = $Li.filter(function () {\r\n            if ($(this).is(':visible')) {\r\n                if (isMatch === 0) {\r\n                    txt = $.trim($(this).text());\r\n                    isMatch = txt == value ? 1 : 0;\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n\r\n        if (!isMatch) {\r\n            if ($vLi.length === 0) {\r\n                $Li.eq(0).trigger('click')\r\n            } else {\r\n                $vLi.eq(0).trigger('click.ui.dropSelect')\r\n            }\r\n        }\r\n    }\r\n\r\n    // 匹配\r\n    // -----------\r\n    function chkMatch() {\r\n        var $this = $(this),\r\n            placeholder = $this.attr('placeholder'),\r\n            value = $.trim($this.val()),\r\n            $items = getList($this);\r\n\r\n        if (value === '' || value === placeholder) {\r\n            return;\r\n        }\r\n\r\n        $items.hide()\r\n            .filter(function () {\r\n                var txt = $.trim($(this).text()) || '';\r\n\r\n                if (txt == value) {\r\n                    $(this).addClass('hover');\r\n                }\r\n\r\n                return txt.indexOf(value) > -1;\r\n            })\r\n            .show();\r\n    }\r\n\r\n\r\n    // 获取响应的元素\r\n    // --------------\r\n    function getParent(el) {\r\n        var $parent = $(el).data('target') || $(el).parent();\r\n        return $parent;\r\n    }\r\n\r\n    // 获取列表项\r\n    // -----------\r\n    function getList(el) {\r\n        var $parent = getParent(el);\r\n        return $parent.find(list);\r\n    }\r\n\r\n    // 滚动条自动跳到某位置\r\n    // -----------------\r\n    function scrollTop(el, i) {\r\n        var $parent = el.parent();\r\n        var top = el.eq(i).position().top;\r\n        $parent.scrollTop(top);\r\n    }\r\n\r\n    // 插件定义\r\n    // ------------\r\n    function Plugin(option) {\r\n        var args = [].slice.call(arguments, 1);\r\n        return $(this).each(function () {\r\n            var $this = $(this);\r\n            var data = $this.data('ui.dropdown');\r\n\r\n            if (!data) $this.data('ui.dropdown', (data = new Dropdown(this)));\r\n            if (typeof option == 'string') data[option].apply(this, args);\r\n        })\r\n    }\r\n\r\n    // jQuery 插件扩展\r\n    // --------------\r\n    $.fn.dropdown = Plugin;\r\n    $.fn.dropdown.Constructor = Dropdown;\r\n\r\n    // 元素插件绑定\r\n    // --------------\r\n    $(function () {\r\n        $(toggle).dropdown();\r\n        $(document)\r\n        // 点击页面其他地方收起\r\n            .on('click.ui.dropdown', hideAllMenus)\r\n            // 按钮触发\r\n            .on('click.ui.dropdown-btn', function (e) {\r\n                var that = e.target;\r\n                if ($(that).is(toggleBtn) || $(that).is(toggleIBtn)) {\r\n                    var $wrap = $(that).closest(wrap);\r\n                    var $target = $wrap.find(toggle);\r\n                    //console.log($wrap);\r\n                    //$target.length && $target.dropdown('toggle');\r\n                    dropMenus($target)\r\n                    //console.log($target);\r\n                    //$target.dropdown('selected', $target[0]);\r\n                    //$target.trigger('toggle')\r\n                    //Dropdown.prototype.selected($target)();\r\n                    return false;\r\n                }\r\n\r\n            })\r\n            // .on('click.ui.dropdown', ul, function(e){\r\n            .on('click.ui.dropdown', function (e) {\r\n                var that = e.target;\r\n                if ($(that).is(ul)) {\r\n                    e.stopPropagation();\r\n                    return false;\r\n                }\r\n\r\n            })\r\n            // .on('click.ui.dropdown', list, function(e){\r\n            //     var $toggle = $(e.target).closest(wrap);\r\n            //     console.log($toggle);\r\n            //     var $target = getParent($toggle.find(ul));\r\n            //     $target.trigger('click.ui.dropSelect');\r\n            //     e.stopPropagation();\r\n            //     return false;\r\n            // })\r\n            // focus\r\n            // .on('focus.ui.dropdown', toggle, chkMatch)\r\n            .on('focus.ui.dropdown', function (e) {\r\n                var that = e.target;\r\n                $(that).is(toggle) && chkMatch(that, e);\r\n            })\r\n            // .on('keydown.ui.dropdown', toggle, Dropdown.prototype.keydown);\r\n            .on('keydown.ui.dropdown', function (e) {\r\n                var that = e.target;\r\n                $(that).is(toggle) && Dropdown.prototype.keydown.call(that, e);\r\n            });\r\n    })\r\n})(jQuery);\r\n\n/*!\r\n * 弹层\r\n * tommyshao <jinhong.shao@frontpay.cn>\r\n * Reference bootstrap.modal.js\r\n * API:\r\n *      // 监听打开\r\n *      $(element).on('show.ui.modal', function(e, obj){});\r\n *      $(element).on('shown.ui.modal', function(e, obj){});\r\n *\r\n *      // 监听关闭\r\n *      $(element).on('hide.ui.modal', function(){});\r\n *      $(element).on('hidden.ui.modal', function(){});\r\n\r\n        // 绑定一个弹窗\r\n *      $(element).modal();\r\n *\r\n *      // 自定义弹窗\r\n *      $(id).modal({title: '提示', content: 'abc'});\r\n        $(id).modal('setContent', 'cdfg');\r\n\r\n        // loading\r\n */\r\n\r\n/**\r\n * log:\r\n * 1. 加属性`tabindex=-1`解决聚焦问题\r\n * 2. 增加方法\r\n *   $.successModalLayer({id:string, title: string, content: string, link: string, callback: function})\r\n     $.confirmModalLayer({id: string, title: string, content: string, callback: function})\r\n     $.alertModalLayer({id: string, icon: string, title: string, content: string})\r\n     $.closeModalLayer(id)\r\n * 3. 增加支持 iframe\r\n */\r\n\r\n+(function($) {\r\n    'use strict';\r\n\r\n    // 构造函数\r\n    // --------\r\n    var Modal = function (element, options) {\r\n        this.$el = $(element);\r\n        this.options = options;\r\n        this.$body = $(document.body);\r\n        //this.$container = this.$el.parents('.modal-background');\r\n        this.$dialog = this.$el.find('.modal-wrap');\r\n        this.$backdrop = null;\r\n        this.isShown = null;\r\n        this.originalBodyPad = null;\r\n        this.scrollbarWidth = 0;\r\n\r\n        if (this.options.remote) {\r\n            this.$el\r\n                .find('.modal-body')\r\n                .load(this.options.remote, $.proxy(function () {\r\n                    this.$element.trigger('loaded.ui.modal');\r\n                }, this))\r\n        }\r\n    };\r\n\r\n    Modal.VERSION = '1.0.0';\r\n\r\n    // 动画过渡时间\r\n    Modal.TRANSITION_DURATION = 150;\r\n\r\n    Modal.DEFAULTS = {\r\n        backdrop: true,\r\n        keyboard: true,\r\n        show: true\r\n    };\r\n\r\n    // 自定义弹框模板\r\n    Modal.TEMPLATE = [\r\n        '<div class=\"modal-background fade\" id=\"{{mid}}\">',\r\n        '<div class=\"modal-layer\">',\r\n        '<div class=\"modal-position\">',\r\n        '<div class=\"modal-wrap\">',\r\n        '<div class=\"modal-head\">',\r\n        '<span class=\"modal-title\">{{title}}</span>',\r\n        '<button class=\"modal-close\">',\r\n        '<i></i>',\r\n        '</button>',\r\n        '</div>',\r\n        '<div class=\"modal-body\">',\r\n        '{{content}}',\r\n        '</div>',\r\n        '</div>',\r\n        '</div>',\r\n        '</div>',\r\n        '</div>'\r\n    ].join('');\r\n\r\n    Modal.CreateModal = function (option) {\r\n        var $body = $(document.body), element;\r\n        if (option && typeof option == \"object\") {\r\n            element = Modal.TEMPLATE.replace(/{{(\\w*)}}/gi, function (match, key) {\r\n                if (option[key] && typeof option[key] == \"string\") return /^(\\.|#)\\w*/gi.test(option[key]) ? $(option[key]).html() : option[key];\r\n                // dom元素\r\n                if (option[key] && option[key].length && option.length > 0) return option[key].html();\r\n            });\r\n\r\n            element = $(element).hide().appendTo($body)\r\n        }\r\n        return element;\r\n    };\r\n\r\n    // 打开\r\n    Modal.prototype.toggle = function (_relatedTarget) {\r\n        return this.isShown ? this.hide() : this.show(_relatedTarget);\r\n    };\r\n\r\n\r\n    // 显示\r\n    Modal.prototype.show = function (_relatedTarget) {\r\n        var that = this;\r\n        var e = $.Event('show.ui.modal', {relatedTarget: _relatedTarget});\r\n\r\n        //this.$el.trigger(e);\r\n\r\n        if (this.isShown || e.isDefaultPrevented()) return;\r\n\r\n        this.isShown = true;\r\n        this.checkScrollbar();\r\n        this.setScrollbar();\r\n        this.$body.addClass('modal-open');\r\n\r\n        this.escape();\r\n        this.resize();\r\n\r\n        this.$el.on('click.dismiss.ui.modal', '[data-dismiss=\"modal\"],.modal-close', $.proxy(this.hide, this));\r\n\r\n\r\n        var transition = $.support.transition && that.$el.hasClass('fade');\r\n        that.$el.show().scrollTop(0).attr('tabindex', -1);\r\n\r\n        that.adjustDialog();\r\n\r\n        if (transition) {\r\n            that.$el[0].offsetWidth;\r\n        }\r\n\r\n        that.enforceFocus();\r\n\r\n        //var e = $.Event('shown.ui.modal', {relatedTarget: _relatedTarget});\r\n\r\n        if (transition) {\r\n            that.$el.addClass('in').attr('aria-hidden', false);\r\n            that.$dialog.one('uiTransitionEnd', function () {\r\n                that.$el.trigger('focus').trigger(e)\r\n            }).emulateTransitionEnd(Modal.TRANSITION_DURATION)\r\n        } else {\r\n            that.$el.hide().addClass('in').attr('aria-hidden', false).fadeIn(Modal.TRANSITION_DURATION, function () {\r\n                $(this).trigger('focus').trigger(e);\r\n            }).attr('aria-hidden', false);\r\n        }\r\n    };\r\n\r\n    // 隐藏\r\n    Modal.prototype.hide = function (e) {\r\n        if (e) e.preventDefault();\r\n\r\n        var $this = this;\r\n\r\n        if (!this.$el.is(':visible') && !this.isShown) return;\r\n\r\n        this.isShown = false;\r\n\r\n        this.escape();\r\n        this.resize();\r\n\r\n        $(document).off('focusin.ui.modal').off('keydown.ui.modal');\r\n\r\n        this.$el.removeClass('in').attr('aria-hidden', true).off('click.dismiss.ui.modal').off('mouseup.dismiss.ui.modal');\r\n\r\n        this.$dialog.off('mousedown.dismiss.ui.modal');\r\n\r\n        $.support.transition && this.$el.hasClass('fade') ?\r\n            this.$el.one('uiTransitionEnd', $.proxy(this.hideModal, this)).emulateTransitionEnd(Modal.TRANSITION_DURATION)\r\n            : (function () {\r\n            $this.$el.fadeOut(Modal.TRANSITION_DURATION, function () {\r\n                $this.hideModal()\r\n            })\r\n        })();\r\n    };\r\n\r\n    Modal.prototype.close = function (id) {\r\n        $(id).data('ui.modal').hide();\r\n    };\r\n\r\n    // esc关闭\r\n    Modal.prototype.escape = function () {\r\n        if (this.isShown && this.options.keyboard) {\r\n            this.$el.on('keydown.dismiss.ui.modal', $.proxy(function (e) {\r\n                e.which == 27 && this.hide()\r\n            }, this))\r\n        } else if (!this.isShown) {\r\n            this.$el.off('keydown.dismiss.ui.modal');\r\n        }\r\n    };\r\n\r\n    Modal.prototype.hideModal = function () {\r\n        var that = this;\r\n        var e = $.Event('hide.ui.modal', {relatedTarget: that.$el});\r\n        that.$el.hide();\r\n        that.$body.removeClass('modal-open');\r\n        that.resetAdjustments();\r\n        that.resetScrollbar();\r\n        that.$el.trigger(e);\r\n    };\r\n    // 重新缩放\r\n    Modal.prototype.resize = function () {\r\n    };\r\n    // 调整弹框位置\r\n    Modal.prototype.handleUpdate = function () {\r\n        this.adjustDialog();\r\n    };\r\n    Modal.prototype.adjustDialog = function () {\r\n        return;\r\n        var modalIsOverflowing = this.$el[0].scrollHeight > document.documentElement.clientHeight;\r\n\r\n        this.$el.css({\r\n            paddingLeft: !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\r\n            paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\r\n        })\r\n    };\r\n    Modal.prototype.resetAdjustments = function () {\r\n        this.$el.css({\r\n            paddingLeft: '',\r\n            paddingRight: ''\r\n        })\r\n    };\r\n    // 获取焦点\r\n    Modal.prototype.enforceFocus = function () {\r\n        $(document)\r\n            .off('focusin.ui.modal')\r\n            .on('focusin.ui.modal', $.proxy(function (e) {\r\n                if (this.$el[0] !== e.target && !this.$el.has(e.target).length) {\r\n                    this.$el.trigger('focus');\r\n                }\r\n            }, this))\r\n    };\r\n\r\n    // 滚动条\r\n    Modal.prototype.checkScrollbar = function () {\r\n        var fullWindowWidth = window.innerWidth; //$(window).width();\r\n        if (!fullWindowWidth) {\r\n            var documentElementRect = document.documentElement.getBoundingClientRect();\r\n            fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\r\n        }\r\n\r\n        this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;\r\n        this.scrollbarWidth = this.measureScrollbar();\r\n    };\r\n\r\n    Modal.prototype.setScrollbar = function () {\r\n        var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10);\r\n        this.originalBodyPad = document.body.style.paddingRight || '';\r\n        if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth);\r\n    };\r\n\r\n    Modal.prototype.resetScrollbar = function () {\r\n        this.$body.css('padding-right', this.originalBodyPad);\r\n    };\r\n\r\n    Modal.prototype.measureScrollbar = function () {\r\n        var scrollDiv = document.createElement('div');\r\n        scrollDiv.className = 'modal-scrollbar-measure';\r\n        this.$body.append(scrollDiv);\r\n        var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\r\n        this.$body[0].removeChild(scrollDiv);\r\n        return scrollbarWidth;\r\n    };\r\n\r\n    // 扩展方法\r\n    Modal.prototype.setContent = function (content) {\r\n        var $content = this.$el.find('.modal-body');\r\n        $content.length && $content.html(content || '');\r\n    };\r\n\r\n    // 设置标题\r\n    Modal.prototype.setTitle = function (title) {\r\n        var $title = this.$el.find('.modal-title');\r\n        $title.length && $title.html(title || '')\r\n    };\r\n\r\n    // 设置对话框title\r\n    /*Modal.prototype.layerUpdate = function(option){\r\n     var $el = this.$el, $obj;\r\n     for(var o in option) {\r\n     if ( o != 'buttons') {\r\n     $obj = $el.find('[role=\"'+ o +'\"]');\r\n     if(o == 'icon') {\r\n     $obj.attr('class', 'notice-wrap '+ option[o] +' in-modal');\r\n     } else {\r\n     $el.find('[role=\"'+ o +'\"]').html(option[o])\r\n     }\r\n     }\r\n     }\r\n     }*/\r\n\r\n\r\n    // 插件定义\r\n    //======================\r\n    function Plugin(option, _relatedTarget) {\r\n        if (!$(this).length && option && /^#(\\w*)/gi.test($(this).selector)) { // js创建\r\n            var data, fnName; //option = typeof option === 'string' ? {title: '\\u6807\\u9898', content: ''} : option;  //, uid = Math.random().toString(36).substring(2);\r\n            //option.id = 'modal-'+uid;\r\n            if (typeof option === 'string') {\r\n                fnName = option;\r\n                option = {title: '\\u6807\\u9898', content: ''};\r\n            }\r\n            option.mid = $(this).selector.replace(/^#/g, '');\r\n            var $this = Modal.CreateModal(option);\r\n            $this.data('mid', option.mid);\r\n            var options = $.extend({}, Modal.DEFAULTS, typeof option == 'object' && option);\r\n            $this.data('ui.modal', (data = new Modal($this, options)));\r\n\r\n            if (fnName && typeof data[fnName] === 'function') {\r\n                data[fnName](_relatedTarget);\r\n            }\r\n\r\n            if (option['callback']) option['callback'].call($this);\r\n\r\n            //return data.show(_relatedTarget);\r\n            data.show(_relatedTarget);\r\n            return $(this);\r\n        } else { // 模板\r\n            return $(this).each(function () {\r\n                var $this = $(this);\r\n                var data = $this.data('ui.modal');\r\n                var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option);\r\n                if (!data) $this.data('ui.modal', (data = new Modal(this, options)));\r\n                if (typeof option == 'string') {\r\n                    data[option](_relatedTarget);\r\n                } else if (options.show) {\r\n                    // 重新设置标题\r\n                    if (options.title) data.setTitle(options.title);\r\n                    // 重新设置内容\r\n                    if (options.content) data.setContent(options.content);\r\n\r\n                    data.show(_relatedTarget);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    // jQuery 插件扩展\r\n    jQuery.fn.modal = Plugin;\r\n    jQuery.fn.modal.Constructor = Modal;\r\n\r\n    //-------------------------\r\n    //--- 扩展 ----------------\r\n    //-------------------------\r\n    // ajaxLoading\r\n    jQuery.fn.showLoading = function (title, content) {\r\n        var $this, title = title || '处理中...', content = content || '请不要关闭浏览器，系统正在处理';\r\n        if ($(this).length) {\r\n            if (title) $(this).find('.modal-body h3').html(title);\r\n            if (content) $(this).find('.loading-content').html(content);\r\n\r\n            return $(this).modal('show');\r\n        } else {\r\n            var template = ['<div class=\"notice-wrap waiting in-modal\">',\r\n                '<div class=\"notice-box\">',\r\n                '<span class=\"notice-img\"></span>',\r\n                '<h3>' + title + '</h3>',\r\n                '<div class=\"loading-content\">' + content + '</div>',\r\n                '</div>',\r\n                '</div>'].join('');\r\n            return $(this).modal({\r\n                title: '提示', content: template, callback: function () {\r\n                    $(this).find('.modal-close').hide();\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    jQuery.fn.hideLoading = function () {\r\n        return $(this).length && $(this).modal('hide');\r\n    }\r\n\r\n    jQuery.showLoading = function (title, content) {\r\n        var id = '#ui-loading';\r\n        return $(id).showLoading(title, content);\r\n    }\r\n    jQuery.hideLoading = function () {\r\n        var id = '#ui-loading';\r\n        return $(id).hideLoading();\r\n    }\r\n\r\n\r\n    // --------\r\n    // 自定义弹层\r\n    // --------\r\n\r\n    // alert,error,success\r\n    jQuery.fn.modalLayer = function (option) {\r\n        var defaults = {\r\n            icon: 'success',\r\n            title: '成功',\r\n            content: '',\r\n            close: true, // 默认 true 可以关闭，false -不显示 x 关闭按钮 function关闭函数\r\n            buttons: [\r\n                {\r\n                    text: '确定',\r\n                    href: false,\r\n                    style: 'btn primary',\r\n                    target: false,\r\n                    ok: $.noop\r\n                }\r\n            ]\r\n        };\r\n\r\n\r\n        var $that = $(this), opt;\r\n\r\n        /*if($that.length) {\r\n         var Instance = $that.data('ui.modal'), dfOption = $that.data('options');\r\n         opt = $.extend(defaults, dfOption, option)\r\n         // 重新设置title，content，icon\r\n         Instance && typeof opt === \"object\" && Instance.layerUpdate(opt);\r\n         $that.modal('show');\r\n         } else { */\r\n        /*\r\n         * log: 隐藏即关闭\r\n         * 2015-10-16\r\n         */\r\n        // 初始化\r\n        opt = $.extend({}, defaults, option);\r\n        var template = ['<div class=\"notice-wrap ' + opt.icon + ' in-modal\" role=\"icon\">',\r\n            '<div class=\"modalLayer notice-box\">',\r\n            '<span class=\"notice-img\"></span>',\r\n            '<h3 role=\"title\" class=\"modalLayer-title ' + ($.trim(opt.content) == '' ? 'fn-mt-20' : '') + '\">' + opt.title + '</h3>',\r\n            '<div class=\"modalLayer-content\" role=\"content\">' + opt.content + '</div>',\r\n            '</div>',\r\n            '</div>',\r\n            '<div class=\"in-modal-btns text-align-center\">',\r\n            '</div>'];\r\n        // 拼接按钮html结构\r\n        var btnHtml = [], btns = opt.buttons;\r\n        for (var i = 0; i < btns.length; i++) {\r\n            if (btns[i].href) {\r\n                btnHtml.push('<a href=\"' + btns[i].href + '\" ' + (btns[i].target ? 'target=\"' + btns[i].target + '\"' : '') + ' class=\"' + (btns[i].style || 'btn primary') + '\" data-index=\"' + i + '\">' + btns[i].text + '</a>');\r\n            } else {\r\n                btnHtml.push('<button type=\"button\" class=\"' + (btns[i].style || 'btn primary') + '\" data-index=\"' + i + '\">' + btns[i].text + '</button>');\r\n            }\r\n        }\r\n\r\n        // 添加自定义按钮html\r\n        template.splice(-1, 0, btnHtml.join(''));\r\n\r\n        // 自定义对话弹层实例\r\n        $that = $(this).modal({\r\n            title: '提示', content: template.join(''), callback: function (obj) {\r\n                // 按钮点击触发配置回调函数，没有配置则默认关闭层\r\n                $(this).on('click', '.in-modal-btns .btn', function () {\r\n                        // 获取当前按钮位置, e 获取用户决定按钮是否可以关闭层，回调函数return false则不关闭层\r\n                        var index = $(this).data('index'), e = true;\r\n                        // 监测用户是否配置回调函数\r\n                        if (opt.buttons.length && opt.buttons[index] && opt.buttons[index]['ok']) {\r\n                            // ok为函数才执行\r\n                            if (opt.buttons[index]['ok'] && typeof  opt.buttons[index]['ok'] === \"function\") {\r\n                                // 获取用户是否关闭层指令，默认关闭\r\n                                e = opt.buttons[index]['ok'].call(null, $(this), index) === false ? false : true;\r\n                            }\r\n                        }\r\n\r\n                        $($that.selector).data('options', opt);\r\n                        // 指令为true时关闭层\r\n                        e && $($that.selector).modal('hide')\r\n                    })\r\n                    .on('hide.ui.modal', function () {  // 调用隐藏的时候删除dom\r\n                        $(this).remove();\r\n                    });\r\n\r\n                // 不显示关闭\r\n                if (!opt.close) $($that.selector).find('.modal-close').hide();\r\n                // 关闭回调\r\n                if ($.isFunction(opt.close)) {\r\n                    $(this).on('hide.ui.modal', opt.close)\r\n                }\r\n            }\r\n        });\r\n        /*  } */\r\n    };\r\n\r\n\r\n    // 元素插件绑定\r\n    // ====================\r\n    var Handler = function () {\r\n        var $this = $(this);\r\n        var href = $(this).attr('href');\r\n        var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, '')));\r\n        var option = $target.data('ui.modal') ? 'toggle' : $.extend({remote: !/#/.test(href) && href}, $target.data(), $this.data());\r\n\r\n        // 实例化\r\n        Plugin.call($target, option, this);\r\n    };\r\n    var initModal = function () {\r\n        $(document).on('click.ui.modal', '[data-toggle=\"modal\"]', function (e) {\r\n            var that = e.target;\r\n            $(that).is('[data-toggle=\"modal\"]') && Handler.call(that, e);\r\n        });\r\n\r\n        // 全局绑定，默认不显示\r\n        //$('.modal-background:not(\".display-none\")').modal();\r\n    };\r\n\r\n    $(initModal);\r\n\r\n\r\n    // --------\r\n    // 扩展成功失败弹窗\r\n    /**\r\n     * 依赖 /js/ui/modal.js\r\n     * @param {string} icon 图标样式\r\n     * @param {string} title 提示标题\r\n     * @param {string|html} 提示内容\r\n     * @param {array} buttons 按钮定义\r\n     */\r\n    // 成功弹层\r\n    var successModalLayer = (function () {\r\n        return function (config) {\r\n            var id = config['id'] ? config['id'] : '#j-modal-status';\r\n            // 使用modalLayer api\r\n            $(id).modalLayer({\r\n                icon: 'success',\r\n                title: (config['title'] || ''),\r\n                content: (config['content'] || ''),\r\n                buttons: [\r\n                    {\r\n                        text: '确认',\r\n                        ok: function () {\r\n                            if (config && typeof config['link'] == 'string') {\r\n                                location.href = config['link'];\r\n                            }\r\n                            if (config && typeof config['callback'] == 'function') {\r\n                                config['callback']();\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    })();\r\n\r\n    // 确认询问弹层\r\n    var confirmModalLayer = (function () {\r\n        return function (config) {\r\n            var id = config['id'] ? config['id'] : '#confirmModalLayer';\r\n            $(id).modalLayer({\r\n                icon: 'info',\r\n                title: (config['title'] || ''),\r\n                content: (config['content'] || ''),\r\n                buttons: [\r\n                    {\r\n                        text: '确定',\r\n                        ok: config['callback']\r\n                    },\r\n                    {\r\n                        text: '取消',\r\n                        href: 'javascript:void(0);',\r\n                        style: 'btn links fn-ml-10'\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    })();\r\n\r\n    // 警告弹层\r\n    var alertModalLayer = (function () {\r\n        return function (config) {\r\n            var id = config['id'] ? config['id'] : '#alertModalLayer';\r\n            $(id).modalLayer({\r\n                icon: (config['icon'] || 'info'),\r\n                title: (config['title'] || ''),\r\n                content: (config['content'] || ''),\r\n                buttons: [\r\n                    {\r\n                        text: '确定',\r\n                        ok: config['callback']\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    })();\r\n\r\n    // 关闭弹层不是隐藏\r\n    var closeModalLayer = (function () {\r\n        return function (id, fn) {\r\n            $(id).modal('hide').on('hide.ui.modal', function () {\r\n                $(this).remove();\r\n                typeof fn === 'function' && fn();\r\n            })\r\n        }\r\n    })();\r\n\r\n\r\n    // 外部\r\n    jQuery.successModalLayer = successModalLayer;\r\n    jQuery.confirmModalLayer = confirmModalLayer;\r\n    jQuery.alertModalLayer = alertModalLayer;\r\n    jQuery.closeModalLayer = closeModalLayer;\r\n\r\n\r\n    // ---------------\r\n    // --- 扩展 支持iframe\r\n\r\n    /**\r\n     * 扩展modal,iframe modal\r\n     * 简单指\r\n     * require ui.js(modal.js)\r\n     */\r\n    ~(function ($) {\r\n\r\n        var APILIST = {};\r\n\r\n        /**\r\n         * iframe\r\n         * @param selector\r\n         */\r\n        function dialogApi(selector, opt, next) {\r\n            this.selector = selector;\r\n            this.next = next;\r\n            this.opt = opt;\r\n            this.dialog = this.get(selector);\r\n\r\n            this.showModal(opt);\r\n\r\n        }\r\n\r\n        /**\r\n         * modal\r\n         */\r\n        dialogApi.prototype.showModal = function (opt) {\r\n            var that = this;\r\n\r\n            // 设置默认为hide\r\n            opt.show = false;\r\n            opt.content = '';\r\n\r\n            opt.callback = function () {\r\n                that.dialog = $(that.selector);\r\n                that.$dom = $(this);\r\n                if (opt && opt['url']) {\r\n                    that.originalUrl = opt.url;\r\n                    that.init();\r\n\r\n                    typeof that.next == \"function\" && that.next.call(that, that.$dom);\r\n                }\r\n            }\r\n\r\n            that.dialog.modal(opt);\r\n        }\r\n\r\n        /**\r\n         * 初始化iframe对象\r\n         */\r\n        dialogApi.prototype.init = function (url) {\r\n            var $body = this.$dom.find('.modal-body');\r\n            this.$title = this.$dom.find('.modal-title');\r\n            this.$iframe = $('<iframe />');\r\n            this.$iframe.attr({\r\n                src: (url || this.originalUrl),\r\n                //name: api.id,\r\n                width: (this.opt.width || '100%'),\r\n                height: (this.opt.height || '100%'),\r\n                allowtransparency: 'yes',\r\n                frameborder: 'no',\r\n                scrolling: 'no'\r\n            }).on('load', $.proxy(this.adjustHeight, this));\r\n\r\n            $body.empty().append(this.$iframe);\r\n            //this.show();\r\n        }\r\n\r\n        // 重新设置 title,content\r\n        dialogApi.prototype.setProp = function (config) {\r\n            (config['title'] && this.$title.html(config['title']));\r\n            (config['url'] && (this.$iframe[0].src = config['url']));\r\n        }\r\n\r\n        dialogApi.prototype.setUrl = function (url) {\r\n            //this.$iframe && this.$iframe.attr('src', url);\r\n            this.init(url);\r\n            return true;\r\n        }\r\n\r\n        /**\r\n         * iframe自适应高度\r\n         */\r\n        dialogApi.prototype.adjustHeight = function () {\r\n            var test, h\r\n\r\n            // BUG: IE自动累加高度\r\n            // 设置为0重新调整\r\n            this.$iframe.css({height: '0px'})\r\n\r\n            try {\r\n                // 跨域测试\r\n                test = this.$iframe[0].contentWindow.frameElement;\r\n            } catch (e) {\r\n            }\r\n\r\n            if (test) {\r\n                h = this.$iframe.contents().height();\r\n                this.$iframe.css({height: h + 'px'})\r\n            }\r\n        }\r\n\r\n        /**\r\n         * iframe调用父窗口\r\n         * @param opt\r\n         */\r\n\r\n        /**\r\n         * 显示\r\n         */\r\n        dialogApi.prototype.show = function () {\r\n            this.dialog.modal('show');\r\n        }\r\n\r\n        /**\r\n         * 隐藏\r\n         */\r\n        dialogApi.prototype.hide = function () {\r\n            this.dialog.modal('hide');\r\n        }\r\n\r\n        /**\r\n         * 获取父窗口\r\n         * @param opt\r\n         */\r\n        dialogApi.get = dialogApi.prototype.get = function (id) {\r\n            // 从iframe中传入window\r\n            if (id && id.frameElement) {\r\n                var iframe = id.frameElement;\r\n                var api;\r\n                var modalList = $('.modal-background', id.parent.document);\r\n                modalList.each(function (i, item) {\r\n                    var ifr = $(item).find('iframe');\r\n                    if (ifr[0] === iframe) api = $(item);\r\n                });\r\n                return api;\r\n            } else {\r\n                return $(id);\r\n            }\r\n        }\r\n\r\n        dialogApi.close = function (id) {\r\n            var dialog = dialogApi.get(id);\r\n            $(dialog).find('.modal-close').trigger('click');\r\n            $(dialog).remove();\r\n        }\r\n\r\n        /**\r\n         * 重复了，暂无方法优化\r\n         * @param id\r\n         */\r\n        dialogApi.adjustHeight = function (id) {\r\n            var dialog = dialogApi.get(id);\r\n            var $iframe = $(dialog).find('iframe');\r\n            var test, h;\r\n\r\n            try {\r\n                // 跨域测试\r\n                test = $iframe[0].contentWindow.frameElement;\r\n            } catch (e) {\r\n            }\r\n\r\n            if (test) {\r\n                h = $iframe.contents().height();\r\n                $iframe.css({height: h + 'px'})\r\n            }\r\n        }\r\n\r\n        $.fn.iframeModal = function (opt, args) {\r\n            var that = $(this);\r\n            var selector = $(this).selector;\r\n\r\n            if ((this[0] === window || this[0] === parent) && opt == 'hide') {\r\n                dialogApi.close(window);\r\n                return;\r\n            }\r\n\r\n            if (this[0] === window && opt == 'adjustHeight') {\r\n                dialogApi.adjustHeight(window);\r\n                return;\r\n            }\r\n\r\n            var data = that.data('ui.iframeModal');\r\n            if (!data) {\r\n                data = new dialogApi(selector, opt, function (obj) {\r\n                    $(obj).data('ui.iframeModal', this);\r\n                })\r\n            } else {\r\n                if (opt && opt['url'] && opt['reset']) {\r\n                    data && data.setUrl(opt.url) && data.show();\r\n                } else {\r\n                    if ($.isPlainObject(opt)) {\r\n                        data.setProp(opt);\r\n                    }\r\n                    data && data.show();\r\n                }\r\n            }\r\n\r\n            // 调用关闭方法\r\n            if (typeof opt === 'string') {\r\n                data[opt] && data[opt](args)\r\n            }\r\n        };\r\n\r\n        $(function () {\r\n            $(document).on('click', '[data-toggle=\"iframeModal\"]', function (e) {\r\n                e.preventDefault();\r\n                var title = $(this).attr('data-title') || '提示';\r\n                var url = $(this).attr('data-url');\r\n\r\n                url && title && $('#iframe-modal').iframeModal({\r\n                    title: title,\r\n                    url: url\r\n                });\r\n            })\r\n        })\r\n    })(jQuery);\r\n\r\n})(jQuery);\r\n\n/*!\r\n * Notify 通知\r\n * tommyshao <jinhong.shao@frontpay.cn>\r\n * Reference uikit.notify.js\r\n * API:\r\n *      $.notify({\r\n *          message: '',\r\n *          status:['success', 'warning', 'danger'],\r\n *          group: false,\r\n *          pos: 'top-center',\r\n *          opacity: .85,\r\n *          timeout: 5000,\r\n *          onClose: function(){}\r\n *      });\r\n */\r\n\r\n+(function($) {\r\n\r\n    'use strict';\r\n\r\n    // 存放方位集合\r\n    var containers = {};\r\n    //  通知集合\r\n    var messages = {};\r\n    // 接口，扩展$.notify\r\n    var notify = function (options) {\r\n        if (typeof options === 'string') {\r\n            options = {message: options};\r\n        }\r\n\r\n        if (arguments[1]) {\r\n            options = $.extend(options, typeof arguments[1] === 'string' ? {status: arguments[1]} : arguments[1]);\r\n        }\r\n\r\n        return (new Notify(options)).show();\r\n    };\r\n    // 关闭所有接口\r\n    var closeAll = function (group, instantly) {\r\n        var id;\r\n\r\n        if (group) {\r\n            for (id in messages) {\r\n                if (group === messages[id].group) messages[id].close(instantly)\r\n            }\r\n        } else {\r\n            for (id in messages) {\r\n                messages[id].close(instantly)\r\n            }\r\n        }\r\n    };\r\n\r\n    // 构造函数\r\n    // ===============\r\n    var Notify = function (options) {\r\n\r\n        this.timeout = false;\r\n        this.currentStatus = \"\";\r\n        this.group = false;\r\n        this.options = $.extend({}, Notify.DEFAULTS, options);\r\n\r\n        // uuid 设置唯一id\r\n        this.uuid = 'Notify_' + Math.random().toString(36).substr(2);\r\n\r\n        // 创建元素\r\n        this.$el = $([\r\n            '<div class=\"notify-message\">',\r\n            '<a class=\"notify-close\">&times;</a>',\r\n            '<div></div>',\r\n            '</div>'\r\n        ].join('')).data('ui.notify', this);\r\n\r\n        // 设置内容\r\n        this.content(this.options.message);\r\n\r\n        // 设置状态\r\n        if (this.options.status) {\r\n            this.$el.addClass('notify-message-' + this.options.status);\r\n            this.currentStatus = this.options.status;\r\n        }\r\n\r\n        // 分组\r\n        this.group = this.options.group;\r\n\r\n        // 消息按uuid存放\r\n        messages[this.uuid] = this;\r\n\r\n        // 方位存放\r\n        if (!containers[this.options.pos]) {\r\n            containers[this.options.pos] = $('<div class=\"notify notify-' + this.options.pos + '\"></div>')\r\n                .appendTo($('body'))\r\n                .on('click', '.notify-message', function () {\r\n                    var message = $(this).data('ui.notify');\r\n                    message.$el.trigger('manualclose.ui.notify', [message]);\r\n                    message.close();\r\n                });\r\n        }\r\n    };\r\n\r\n    Notify.VERSION = '1.0.0';\r\n\r\n    Notify.DEFAULTS = {\r\n        message: \"\", // 提示内容\r\n        status: \"\",  // 状态，样式颜色\r\n        opacity: .85, // 层透明度\r\n        timeout: 5000, // 定时延迟消失\r\n        group: null,   // 是否分组\r\n        pos: \"top-center\", // 定位\r\n        onClose: function () {\r\n        }  // 关闭触发事件\r\n    };\r\n\r\n    // Public Method\r\n    // ===============\r\n    /* 显示 */\r\n    Notify.prototype.show = function () {\r\n        if (this.$el.is(':visible')) return;\r\n\r\n        var $this = this;\r\n\r\n        // 方位添加元素\r\n        containers[this.options.pos].show().prepend(this.$el);\r\n\r\n        var marginbottom = parseInt(this.$el.css('margin-bottom'), 10);\r\n\r\n        // 动画显示\r\n        this.$el.css({opacity: 0, \"margin-top\": -1 * this.$el.outerHeight(), \"margin-bottom\": 0})\r\n            .animate({opacity: this.options.opacity, \"margin-top\": 0, \"margin-bottom\": marginbottom}, function () {\r\n                if ($this.options.timeout) { // 延时关闭\r\n                    var closefn = function () {\r\n                        $this.close()\r\n                    };\r\n                    $this.timeout = setTimeout(closefn, $this.options.timeout);\r\n\r\n                    $this.$el.hover(\r\n                        function () {\r\n                            clearTimeout($this.timeout)\r\n                        },\r\n                        function () {\r\n                            $this.timeout = setTimeout(closefn, $this.options.timeout)\r\n                        }\r\n                    );\r\n                }\r\n            });\r\n\r\n        return this;\r\n    };\r\n\r\n    /* 关闭 */\r\n    Notify.prototype.close = function (instanly) {\r\n        var $this = this,\r\n            finalize = function () {\r\n                $this.$el.remove();\r\n\r\n                if (!containers[$this.options.pos].children().length) {\r\n                    containers[$this.options.pos].hide();\r\n                }\r\n\r\n                $this.options.onClose.apply($this, []);\r\n                $this.$el.trigger('close.ui.notify', [$this]);\r\n\r\n                delete messages[$this.uuid];\r\n            }\r\n\r\n        if (this.timeout) clearTimeout(this.timeout);\r\n\r\n        if (instanly) {\r\n            finalize();\r\n        } else {\r\n            this.$el.animate({opacity: 0, \"margin-top\": -1 * this.$el.outerHeight(), \"margin-bottom\": 0}, function () {\r\n                finalize();\r\n            })\r\n        }\r\n    };\r\n\r\n    /* 设置内容或获取 */\r\n    Notify.prototype.content = function (html) {\r\n        var container = this.$el.find('>div');\r\n\r\n        if (!html) {\r\n            return container.html();\r\n        }\r\n\r\n        container.html(html);\r\n\r\n        return this;\r\n    };\r\n\r\n    /* 设置状态及样式 */\r\n    Notify.prototype.status = function (status) {\r\n        if (!status) {\r\n            return this.currentStatus;\r\n        }\r\n\r\n        this.$el.removeClass('nofity-message-' + this.currentStatus).addClass('notify-message-' + status);\r\n\r\n        this.currentStatus = status;\r\n\r\n        return this;\r\n    };\r\n\r\n\r\n    // 插件定义\r\n    //======================\r\n    function Plugin(option) {\r\n        return $(this).on('click', function () {\r\n            option = typeof option === 'string' ? {message: option} : option;\r\n            var data = new Notify(option);\r\n            data.show();\r\n        });\r\n    }\r\n\r\n\r\n    // jQuery 插件扩展\r\n    $.notify = notify;\r\n    $.notify.closeAll = closeAll;\r\n    $.fn.notify = Plugin;\r\n    $.fn.notify.Constructor = Notify;\r\n\r\n})(jQuery);\r\n\n/*!\r\n * 分页|pagination\r\n * tommyshao <jinhong.shao@frontpay.cn>\r\n * Reference uikit.pagination.js\r\n * API:\r\n *      $(element).pagination({ onSelectPage: function(index, instance){});\r\n *\r\n *      $(element).on('ui.select.pagination', function(e, index, instance){\r\n            console.log(index)\r\n         })\r\n\r\n        $(element).pagination({ onSelectPage: function(index, instance){});\r\n\r\n        $(element).pagination('selectPage', 2, 100);\r\n */\r\n\r\n+(function ($) {\r\n    'use strict';\r\n\r\n    // 默认高亮类\r\n    var active = 'active';\r\n    // 分页总码数模板\r\n    var pageStr = '<p class=\"pull-left fs-12 lh-26\">共{$pages}页，{$items}条记录，每页显示{$itemsOnPage}条。</p>';\r\n\r\n\r\n    // 构造函数\r\n    // @param {object} element 容器dom元素\r\n    // @param {json}   options 配置参数面量\r\n    // ===============\r\n    var Pagination = function (element, options) {\r\n        // 分页主容器\r\n        this.$el = $(element);\r\n        // 初始化\r\n        this._init(options);\r\n    };\r\n\r\n    // 版本\r\n    Pagination.VERSION = '1.0.0';\r\n    // 分页默认参数\r\n    Pagination.DEFAULTS = {\r\n        //每页显示条数\r\n        pageSize: 10,\r\n        // 总记录数\r\n        items: 1,\r\n        // 每页记录数\r\n        itemsOnPage: 10,\r\n        // 总页数\r\n        pages: 0,\r\n        // 只显示页数区间\r\n        displayedPages: 8,\r\n        // 到末页显示多少页码\r\n        edges: 1,\r\n        // 当前页\r\n        currentPage: 0,\r\n        //是否可以改变 pageSize\r\n        showSizeChanger: true,\r\n        // 分页总码数字符, 默认不显示, show-是否显示, template 字符模板\r\n        pageStr: {\r\n            show: false,\r\n            template: ''\r\n        },\r\n        lblPrev: '\\u4e0a\\u4e00\\u9875', //上一页\r\n        lblNext: '\\u4e0b\\u4e00\\u9875', //下一页\r\n        // 选中触发事件\r\n        onSelectPage: function () {}\r\n    };\r\n\r\n    // 初始化\r\n    // =================\r\n    Pagination.prototype._init = function (options, inited) {\r\n        var $this = this;\r\n\r\n        this._setOption(options);\r\n\r\n        $this.itemsOnPage = this.options.itemsOnPage;\r\n        $this.pageSize = this.options.pageSize;\r\n        $this.items = this.options.items;\r\n        $this.current = this.options.currentPage;\r\n\r\n        // 总页数\r\n        $this.pages = $this.options.pages ? $this.options.pages : Math.ceil($this.items / this.itemsOnPage) ? Math.ceil($this.items / $this.itemsOnPage) : 1;\r\n\r\n        // 当前页，从0开始\r\n        $this.currentPage = $this.options.currentPage - 1;\r\n        // 页数区间的一半\r\n        $this.halfDisplayed = $this.options.displayedPages / 2;\r\n\r\n        // dom 渲染\r\n        $this._render();\r\n        //新增加改变每页显示条目数。author ethan\r\n        $this._renderPageSize();\r\n        // 绑定点击切换页码\r\n        !!!inited && $this.$el.on('click', 'a[data-page]', function (e) {\r\n            e.preventDefault();\r\n            $this.selectPage($(this).data('page')); //新增pageSize\r\n        });\r\n    };\r\n\r\n    Pagination.prototype.init = function (options) {\r\n        this._init(options, true);\r\n    };\r\n\r\n    // 私有方法\r\n    // 设置配置\r\n    Pagination.prototype._setOption = function (options) {\r\n        this.options = $.extend({}, Pagination.DEFAULTS, options);\r\n    };\r\n\r\n    // 切换页码\r\n    // 新增pageSize\r\n    Pagination.prototype.selectPage = function (pageIndex, pages) {\r\n        void 0\r\n        void 0\r\n        void 0\r\n        // 切换到设置页\r\n        this.currentPage = pageIndex - 1;\r\n        this.current = pageIndex;\r\n        // 重新渲染dom\r\n        this.render(pages);\r\n\r\n        // 触发切换选择函数\r\n        this.options.onSelectPage(pageIndex, this, this.pageSize);\r\n        // 触发api接口\r\n        this.$el.trigger('select.ui.pagination', [pageIndex, this, this.pageSize]);\r\n    };\r\n\r\n    Pagination.prototype._render = function () {\r\n        var o = this.options,\r\n            interval = this._getInterval(),\r\n            i;\r\n        // 清空dom\r\n        this.$el.empty().prevAll().remove();\r\n        if (this.pages <= 1) return;\r\n\r\n        // 上一页,false时不显示，当前页-1，text为显示文字，true为自定义label\r\n        //console.log('currentPage:'+ o.currentPage)\r\n        if (o.lblPrev && this.currentPage - 1 >= 0) this._append(this.currentPage - 1, {\r\n            text: o.lblPrev\r\n        }, true);\r\n\r\n\r\n        // 左边首页显示边缘页数\r\n        if (interval.start > 0 && o.edges > 0) { // 显示末页\r\n            var end = Math.min(o.edges, interval.start);\r\n            for (i = 0; i < end; i++) this._append(i);\r\n\r\n            if (o.edges < interval.start && (interval.start - o.edges != 1)) {\r\n                this.$el.append('<li><span>...</span></li>')\r\n            } else if (interval.start - o.edges == 1) {\r\n                this._append(o.edges);\r\n            }\r\n        }\r\n\r\n        // 显示 (当前页-4, 当前页， 当前页+4)\r\n        for (i = interval.start; i < interval.end; i++) this._append(i);\r\n\r\n        // 右边末页显示边缘页数\r\n        if (interval.end < this.pages && o.edges > 0) {\r\n            if (this.pages - o.edges > interval.end && (this.pages - o.edges - interval.end != 1)) {\r\n                this.$el.append('<li><span>...</span></li>')\r\n            } else if (this.pages - o.edges - interval.end == 1) {\r\n                this._append(interval.end++);\r\n            }\r\n\r\n            var begin = Math.max(this.pages - o.edges, interval.end);\r\n\r\n            for (i = begin; i < this.pages; i++) this._append(i);\r\n        }\r\n\r\n        // 下一页,false时不显示，当前页+1，text为显示文字，true为自定义label\r\n        //console.log(this.currentPage, this.pages)\r\n        if (o.lblNext && this.currentPage < this.pages - 1) this._append(this.currentPage + 1, {\r\n            text: o.lblNext\r\n        }, true);\r\n\r\n        this.renderPageStr();\r\n\r\n    };\r\n\r\n    //新增加改变每页显示条目数。author ethan\r\n    Pagination.prototype._renderPageSize = function () {\r\n        if (this.options.showSizeChanger && this.options.showSizeChanger) {\r\n            var that = this;\r\n            var id = \"PageSize-selector-id-\" + Math.ceil(Math.random() * 100000 + 100000);\r\n            var select =\r\n                '<div class=\"form-control\" style=\"display: inline-block; width: auto;vertical-align: top;padding: 0;margin-left: 10px;border:none;\">' +\r\n                '<select id=\"' + id + '\" style=\"height: 25px;border-radius:3px;color:#999\">' +\r\n                '<option value=\"10\">每页 10 条</option>' +\r\n                '<option value=\"20\">每页 20 条</option>' +\r\n                '<option value=\"30\">每页 30 条</option>' +\r\n                '<option value=\"100\">每页 100 条</option>' +\r\n                '</select>' +\r\n                '</div>';\r\n            that.$el.after(select);\r\n            // 绑定点击切换页码\r\n            $('#' + id).on('change', function (e) {\r\n                e.preventDefault();\r\n                that.itemsOnPage = this.value;\r\n                that.pageSize = this.value;\r\n                // 总页数\r\n                that.pages = Math.ceil(that.items / this.value) > 0 ? Math.ceil(that.items / this.value) : 1;\r\n                void 0;\r\n                void 0;\r\n                that.selectPage(1, null, this.value); //后端需求跳回第1页\r\n            });\r\n        }\r\n    }\r\n\r\n    // 渲染总页码\r\n    Pagination.prototype.renderPageStr = function () {\r\n        if (this.options.pageStr && this.options.pageStr.show) {\r\n            var that = this;\r\n            var oPageStr = that.$el.prevAll();\r\n            var template = this.options.pageStr.template || pageStr;\r\n\r\n            template = template.replace(/{\\$(\\w*)}/gi, function (matches, key, index) {\r\n                return that[key] ? that[key] : 0;\r\n            })\r\n\r\n            oPageStr.length && oPageStr.remove();\r\n\r\n            that.$el.before($(template));\r\n        }\r\n    }\r\n\r\n    // 重新渲染,外部接口\r\n    Pagination.prototype.render = function (pages) {\r\n        this.pages = pages ? pages : this.pages;\r\n        this._render();\r\n    };\r\n\r\n    // 获取显示页码范围\r\n    Pagination.prototype._getInterval = function () {\r\n        return {\r\n            start: Math.ceil(\r\n                // 当前页是否大于显示范围的一半\r\n                this.currentPage > this.halfDisplayed ?\r\n                Math.max(\r\n                    // 从当前页-显示一半范围开始\r\n                    Math.min(this.currentPage - this.halfDisplayed, (this.pages - this.options.displayedPages))\r\n                    // 当前页小于一半且总页数小于显示范围，从第一页开始\r\n                    , 0)\r\n                // 从第一页开始\r\n                :\r\n                0),\r\n            end: Math.ceil(\r\n                // 当前页是否大于显示范围的一半\r\n                this.currentPage > this.halfDisplayed\r\n                // 当前页+显示范围的一半\r\n                ?\r\n                Math.min(this.currentPage + this.halfDisplayed, this.pages)\r\n                // 结束为最多显示，末页\r\n                :\r\n                Math.min(this.options.displayedPages, this.pages))\r\n        }\r\n    };\r\n\r\n    // 重新组织dom结构\r\n    // pageIndex 渲染页码\r\n    // opts 文本配置\r\n    // islb 是否上一页下一页，是永不加active\r\n    Pagination.prototype._append = function (pageIndex, opts, islb) {\r\n        var $this = this,\r\n            item, options;\r\n\r\n        // 判断首页，末页，常规页\r\n        pageIndex = pageIndex < 0 ? 0 : (pageIndex < this.pages ? pageIndex : this.pages - 1);\r\n        options = $.extend({\r\n            text: pageIndex + 1\r\n        }, opts);\r\n\r\n        // console.log(pageIndex, this.currentPage, islb)\r\n\r\n        // 判断当前页与非当前页\r\n        item = (pageIndex == this.currentPage) ?\r\n            // 当前页， 上一页下一页不加active类\r\n            '<li ' + (islb ? '' : 'class=\"' + active + '\"') + '><a href=\"javascript:void(0);\">' + (options.text) + '</a></li>'\r\n            // 分当前页标识为可点击\r\n            :\r\n            '<li><a href=\"#page-' + (pageIndex + 1) + '\" data-page=\"' + (pageIndex + 1) + '\">' + options.text + '</a></li>';\r\n\r\n        //console.log(item);\r\n\r\n        $this.$el.append(item);\r\n    };\r\n\r\n    // 插件定义\r\n    //======================\r\n    function Plugin(options) {\r\n        // 获取传入参数，可能不止options一个参数\r\n        var args = arguments;\r\n        // jquery 链式\r\n        return $(this).each(function () {\r\n            var $this = $(this);\r\n            if ($this.hasClass('no-js')) return;\r\n            var data = $this.data('ui.pagination');\r\n\r\n            // 创建一个新实例\r\n            if (!data) $this.data('ui.pagination', (data = new Pagination($this, $.extend({}, $this.data(), options))));\r\n\r\n            if (typeof options == 'string') { // 调用接口方法,第二个参数为方法传入参数\r\n                data[options].apply(data, [].slice.call(args, 1));\r\n            }\r\n        })\r\n    }\r\n\r\n    // jQuery 插件扩展\r\n    $.fn.pagination = Plugin;\r\n    $.fn.pagination.Constructor = Pagination;\r\n\r\n    // 元素插件绑定\r\n    // ====================\r\n    $(function () {\r\n        $('[ui-pagination],.pagination').pagination();\r\n    })\r\n\r\n})(jQuery);\r\n\n//     placeholder 占位符\r\n//     tommyshao <jinhong.shao@frontpay.cn>\r\n\r\n// API:\r\n// ------\r\n// $(element).placeholder();\r\n\r\n+(function($) {\r\n    'use strict';\r\n\r\n    var toggle = 'input[placeholder]';\r\n\r\n    var input = document.createElement('input');\r\n    var isSupport = 'placeholder' in input;\r\n\r\n    // 构造函数\r\n    // ===============\r\n    var Placeholder = function (element) {\r\n        var $this = this;\r\n        $this.$el = $(element);\r\n        this.init();\r\n    };\r\n\r\n    Placeholder.VERSION = '1.0.0';\r\n\r\n    Placeholder.prototype.init = function () {\r\n        if (isSupport) return;\r\n        var $this = this;\r\n        this.$placeholder = $this.$el.data('placeholder');\r\n        if (!isSupport && !this.$placeholder) {\r\n            var text = $this.$el.attr('placeholder');\r\n            $this.$placeholder = $('<label class=\"form-placeholder\" />').html(text);\r\n            $this.$el.data('placeholder', $this.$placeholder).before($this.$placeholder);\r\n        }\r\n\r\n        $this.$el.on('focus', $.proxy(this.focus, this));\r\n        $this.$el.on('blur', $.proxy(this.blur, this));\r\n        $this.$placeholder.on('click', $.proxy(this.focus, this));\r\n\r\n        // 默认隐藏placeholder\r\n        this.blur();\r\n    };\r\n\r\n    Placeholder.prototype.focus = function () {\r\n        this.$placeholder.hide();\r\n    };\r\n\r\n    Placeholder.prototype.blur = function () {\r\n        this.$placeholder[this.$el.val() === '' ? 'show' : 'hide']();\r\n    };\r\n\r\n\r\n    // 插件定义\r\n    //======================\r\n    function Plugin() {\r\n        return $(this).each(function () {\r\n            var $this = $(this);\r\n            var data = $this.data('ui.placeholder');\r\n            if (!data) $this.data('ui.placeholder', (data = new Placeholder(this)));\r\n        })\r\n    }\r\n\r\n\r\n    // jQuery 插件扩展\r\n    $.fn.placeholder = Plugin;\r\n    $.fn.placeholder.Constructor = Placeholder;\r\n\r\n    // 元素插件绑定\r\n    // ====================\r\n    $(function () {\r\n        $(toggle).placeholder()\r\n    });\r\n\r\n\r\n})(jQuery);\r\n\n/*!\r\n * slider 图片轮播\r\n * tommyshao <jinhong.shao@frontpay.cn>\r\n * REFFRENCE: http://unslider.com\r\n * API:\r\n *      $(element).slider();\r\n */\r\n\r\n;(function ($, f) {\r\n\r\n\t'use strict';\r\n\r\n\tvar toggle = '[data-toggle=\"slider\"]';\r\n\t//  If there's no jQuery, Unslider can't work, so kill the operation.\r\n\tif(typeof $ === 'undefined') return f;\r\n\r\n\tvar Unslider = function() {\r\n\t\t//  Set up our elements\r\n\t\tthis.el = f;\r\n\t\tthis.items = f;\r\n\r\n\t\t//  Dimensions\r\n\t\tthis.sizes = [];\r\n\t\tthis.max = [0,0];\r\n\r\n\t\t//  Current inded\r\n\t\tthis.current = 0;\r\n\r\n\t\t//  Start/stop timer\r\n\t\tthis.interval = f;\r\n\r\n\t\t//  Set some options\r\n\t\tthis.opts = {\r\n\t\t\tspeed: 500,\r\n\t\t\tdelay: f, // 3000, f for no autoplay\r\n\t\t\tcomplete: f, // when a slide's finished\r\n\t\t\tkeys: f, // keyboard shortcuts - disable if it breaks things\r\n\t\t\tdots: f, // display 鈥⑩€⑩€⑩€鈥� pagination\r\n\t\t\tfluid: !f, // is it a percentage width?,\r\n\t\t\tprev: f,\r\n\t\t\tnext: f,\r\n\t\t\tarrows: f\r\n\t\t};\r\n\r\n\t\t//  Create a deep clone for methods where context changes\r\n\t\tvar _ = this;\r\n\r\n\t\tthis.init = function(el, opts) {\r\n\t\t\tthis.el = el;\r\n\t\t\tthis.ul = el.children('ul');\r\n\t\t\tthis.max = [(el.outerWidth() || el.parent().outerWidth()), (el.outerHeight() || el.parent().outerHeight())];\r\n\t\t\tthis.items = this.ul.children('li').each(this.calculate);\r\n\r\n\t\t\t//  Check whether we're passing any options in to Unslider\r\n\t\t\tthis.opts = $.extend(this.opts, opts);\r\n\r\n\t\t\t//  Set up the Unslider\r\n\t\t\tthis.setup();\r\n\r\n\t\t\treturn this;\r\n\t\t};\r\n\r\n\t\t//  Get the width for an element\r\n\t\t//  Pass a jQuery element as the context with .call(), and the index as a parameter: Unslider.calculate.call($('li:first'), 0)\r\n\t\tthis.calculate = function(index) {\r\n\t\t\tvar me = $(this),\r\n\t\t\t\t\twidth = me.outerWidth(), height = me.outerHeight();\r\n\r\n\t\t\t//  Add it to the sizes list\r\n\t\t\t_.sizes[index] = [width, height];\r\n\t\t\t//  Set the max values\r\n\t\t\tif(width > _.max[0]) _.max[0] = width;\r\n\t\t\tif(height > _.max[1]) _.max[1] = height;\r\n\t\t};\r\n\r\n\t\t//  Work out what methods need calling\r\n\t\tthis.setup = function() {\r\n\t\t\tvar initEvent = $.Event('init.ui.slider', {relatedTarget: this.el });\r\n\t\t\t//  Set the main element\r\n\t\t\tthis.el.css({\r\n\t\t\t\toverflow: 'hidden',\r\n\t\t\t\twidth: _.max[0],\r\n\t\t\t\theight: this.items.first().outerHeight()\r\n\t\t\t});\r\n\r\n\t\t\t// console.log(_.max[0]);\r\n\r\n\t\t\t//  Set the relative widths\r\n\t\t\tthis.ul.css({width: (this.items.length * 100) + '%', position: 'relative'});\r\n\t\t\tthis.items.css('width', (100 / this.items.length) + '%');\r\n\r\n\t\t\tif(this.opts.delay !== f) {\r\n\t\t\t\tthis.start();\r\n\t\t\t\tthis.el.hover(this.stop, this.start);\r\n\t\t\t}\r\n\r\n\t\t\t//  Custom keyboard support\r\n\t\t\tthis.opts.keys && $(document).keydown(this.keys);\r\n\r\n\t\t\t//  Dot pagination\r\n\t\t\tthis.opts.dots && this.dots();\r\n\r\n\t\t\t//  Little patch for fluid-width sliders. Screw those guys.\r\n\t\t\tif(this.opts.fluid) {\r\n\t\t\t\tvar resize = function() {\r\n\t\t\t\t\t_.el.css('width', Math.min(Math.round((_.el.width() / _.el.parent().width()) * 100), 100) + '%');\r\n\t\t\t\t};\r\n\r\n\t\t\t\tresize();\r\n\t\t\t\t$(window).off('resize.ui.slider').on('resize.ui.slider', resize);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.opts.arrows) {\r\n\t\t\t\tthis.el.parent().append('<p class=\"arrows\"><span class=\"prev\">'+ (this.opts.prevText || 'prev') +'</span><span class=\"next\">'+ (this.opts.nextText || 'next') +'</span></p>')\r\n\t\t\t\t\t\t.find('.arrows span').off('click').on('click', function() {\r\n\t\t\t\t\t$.isFunction(_[this.className]) && _[this.className]();\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tif(this.opts.prev) $(this.opts.prev).off('click').on('click', $.proxy(this.prev, this));\r\n\t\t\tif(this.opts.next) $(this.opts.next).off('click').on('click', $.proxy(this.next, this));\r\n\r\n\t\t\t//  Swipe support\r\n\t\t\tif($.event.swipe) {\r\n\t\t\t\tthis.el.off('swipeleft').on('swipeleft', _.prev).off('swiperight').on('swiperight', _.next);\r\n\t\t\t}\r\n\r\n\t\t\tthis.el.trigger(initEvent)\r\n\t\t};\r\n\r\n\t\t//  Move Unslider to a slide index\r\n\t\tthis.move = function(index, cb) {\r\n\t\t\t//  If it's out of bounds, go to the first slide\r\n\t\t\tif(!this.items.eq(index).length) index = 0;\r\n\t\t\tif(index < 0) index = (this.items.length - 1);\r\n\r\n\t\t\tvar target = this.items.eq(index);\r\n\t\t\tvar obj = {height: target.outerHeight()};\r\n\t\t\tvar speed = cb ? 5 : this.opts.speed;\r\n\r\n\t\t\tvar moveEvent = $.Event('move.ui.slider', { relatedTarget: target, curIndex: index });\r\n\r\n\t\t\tif(!this.ul.is(':animated')) {\r\n\t\t\t\t//  Handle those pesky dots\r\n\t\t\t\t_.el.find('.dot:eq(' + index + ')').addClass('active').siblings().removeClass('active');\r\n\r\n\t\t\t\tthis.el.animate(obj, speed).trigger(moveEvent) && this.ul.animate($.extend({left: '-' + index + '00%'}, obj), speed, function(data) {\r\n\t\t\t\t\t_.current = index;\r\n\t\t\t\t\t$.isFunction(_.opts.complete) && !cb && _.opts.complete(_.el);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//  Autoplay functionality\r\n\t\tthis.start = function() {\r\n\t\t\t_.interval = setInterval(function() {\r\n\t\t\t\t_.move(_.current + 1);\r\n\t\t\t}, _.opts.delay);\r\n\t\t};\r\n\r\n\t\t//  Stop autoplay\r\n\t\tthis.stop = function() {\r\n\t\t\t_.interval = clearInterval(_.interval);\r\n\t\t\treturn _;\r\n\t\t};\r\n\r\n\t\t//  Keypresses\r\n\t\tthis.keys = function(e) {\r\n\t\t\tvar key = e.which;\r\n\t\t\tvar map = {\r\n\t\t\t\t//  Prev/next\r\n\t\t\t\t37: _.prev,\r\n\t\t\t\t39: _.next,\r\n\r\n\t\t\t\t//  Esc\r\n\t\t\t\t27: _.stop\r\n\t\t\t};\r\n\r\n\t\t\tif($.isFunction(map[key])) {\r\n\t\t\t\tmap[key]();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//  Arrow navigation\r\n\t\tthis.next = function(e) { e && e.preventDefault(); return _.stop().move(_.current + 1) };\r\n\t\tthis.prev = function(e) {  e && e.preventDefault(); return _.stop().move(_.current - 1) };\r\n\r\n\t\tthis.dots = function() {\r\n\t\t\t//  Create the HTML\r\n\t\t\tvar html = '<ol class=\"dots\">';\r\n\t\t\t$.each(this.items, function(index) { html += '<li class=\"dot' + (index < 1 ? ' active' : '') + '\">' + (index + 1) + '</li>'; });\r\n\t\t\thtml += '</ol>';\r\n\r\n\t\t\t//  Add it to the Unslider\r\n\t\t\tthis.el.addClass('has-dots').append(html).find('.dot').off('click').on('click', function() {\r\n\t\t\t\t_.move($(this).index());\r\n\t\t\t});\r\n\t\t};\r\n\t};\r\n\r\n\t// 插件定义\r\n\t//======================\r\n\tfunction Plugin(o, s) {\r\n\t\tvar len = this.length;\r\n\r\n\t\t//  Enable multiple-slider support\r\n\t\treturn this.each(function(index) {\r\n\t\t\t//  Cache a copy of $(this), so it\r\n\t\t\tvar me = $(this);\r\n\t\t\tvar config = me.data();\r\n\t\t\tvar instance = me.data('ui.slider');\r\n\r\n\t\t\tif(!instance) {\r\n\t\t\t\to = $.extend({}, o, config);\r\n\t\t\t\tinstance = (new Unslider).init(me, o);\r\n\t\t\t\t//  Invoke an Unslider instance\r\n\t\t\t\tme.data('ui.slider', instance);\r\n\t\t\t}\r\n\t\t\ts = $.extend({}, s, config);\r\n\t\t\tif(typeof o === 'string') instance[o] && instance[o](me, s);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t// jQuery 插件扩展\r\n\t$.fn.slider = Plugin;\r\n\t$.fn.slider.Constructor = Unslider;\r\n\r\n\t// 元素插件绑定\r\n\t// ====================\r\n\t$(function(){ $(toggle).slider() });\r\n\r\n})(jQuery);\r\n\n/*!\r\n * smooth-scroll 平滑滚动\r\n * tommyshao <jinhong.shao@frontpay.cn>\r\n * Reference uikit.smoothscroll.js\r\n * API:\r\n *      $(element).placeholder();\r\n */\r\n\r\n+(function($) {\r\n\r\n    'use strict';\r\n\r\n    if (!$.easing.easeOutExpo) $.easing.easeOutExpo = function (x, t, b, c, d) {\r\n        return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\r\n    };\r\n\r\n    // 构造函数\r\n    // ---------\r\n    var SmoothScroll = function (element, options) {\r\n        this.$el = $(element);\r\n        this.options = options;\r\n        this.init();\r\n    };\r\n\r\n    SmoothScroll.VERSION = '1.0.0';\r\n\r\n    /**\r\n     * 默认配置参数\r\n     * @param duration 动画时间\r\n     * @param transition 动画类型\r\n     * @param offset 距离目标位置\r\n     * @param complete 到达位置时完成执行\r\n     * @type {{duration: number, transition: string, offset: number, complete: (*|number|noop|Function)}}\r\n     */\r\n    SmoothScroll.DEFAULTS = {\r\n        duration: 500,\r\n        transition: 'easeOutExpo',\r\n        offset: 0,\r\n        complete: $.noop\r\n    };\r\n\r\n    /**\r\n     * init 初始化\r\n     */\r\n    SmoothScroll.prototype.init = function () {\r\n        this.$el.on('click.ui.smoothScroll', this.scroll(this.$el, this.options));\r\n    };\r\n\r\n\r\n    /**\r\n     * 滚条\r\n     * @param options\r\n     * @returns {Function}\r\n     */\r\n    SmoothScroll.prototype.scroll = function (elem, options) {\r\n        return function (e) {\r\n            e.preventDefault();\r\n            scrollToElement(elem, $(this.hash).length ? $(this.hash) : $(\"body\"), options);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 完成触发\r\n     */\r\n    function emit(elem) {\r\n        return function () {\r\n            var e = $.Event('done.ui.smoothscroll', {relatedTarget: elem});\r\n            elem.trigger(e);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 滚动条跳转到某元素\r\n     * @param elem 目的元素\r\n     * @param options 配置参数\r\n     */\r\n    function scrollToElement(elem, targetElement, options) {\r\n        options = $.extend({}, SmoothScroll.DEFAULTS, options);\r\n\r\n        var target = targetElement.offset().top - options.offset,\r\n            docH = $(document).height(),\r\n            winH = $(window).height();\r\n\r\n        if ((target + winH) > docH) {\r\n            target = docH - winH;\r\n        }\r\n\r\n        $('html,body')\r\n            .stop()\r\n            .animate({scrollTop: target}, options.duration, options.transition)\r\n            .promise()\r\n            .done([options.complete, emit(elem)]);\r\n    }\r\n\r\n\r\n    // 插件定义\r\n    // ---------\r\n    function Plugin(options) {\r\n        return $(this).each(function () {\r\n            var $this = $(this);\r\n            var data = $this.data('ui.smoothScroll');\r\n            if (!data) {\r\n                $this.data('ui.smoothScroll', (new SmoothScroll(this, $.extend({}, $this.data(), options))));\r\n            } else {\r\n                $this.trigger('click.ui.smoothScroll');\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    // jQuery 插件扩展\r\n    $.fn.smoothScroll = Plugin;\r\n    $.fn.smoothScroll.Constructor = SmoothScroll;\r\n\r\n    $(function () {\r\n        $('[data-toggle=\"smooth-scroll\"]').smoothScroll()\r\n    })\r\n\r\n})(jQuery);\r\n\n//     switcher 脟脨禄禄脝梅\r\n//     tommyshao <jinhong.shao@frontpay.cn>\r\n\r\n// API:\r\n// ------\r\n// <div data-toggle=\"switcher\" [data-except=\"true\"|data-item=\"a\"|data-active=\"current\"]/>\r\n// $(element).switcher({except:true, item: 'a', active: 'current'});\r\n// $(element).on('select.ui.switcher', function(e){ e.relatedTarget; });\r\n\r\n+(function($) {\r\n\r\n    'use strict';\r\n\r\n    var toggle = '[data-toggle=\"switcher\"]';\r\n\r\n    // 构造函数\r\n    // ----------\r\n    var Switcher = function (element, option) {\r\n        var $this = this;\r\n        this.$el = $(element);\r\n        this.option = $.extend({}, Switcher.DEFAULTS, option, this.$el.data());\r\n        this.$el.on('click.ui.switcher', this.option.item, function (e) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            $this.select($(this));\r\n        });\r\n    };\r\n\r\n    // 版本号\r\n    // ------\r\n    // 1.0.0\r\n    Switcher.VERSION = '1.0.0';\r\n\r\n    // 默认配置参数\r\n    // ----------\r\n    // * `item`\r\n    // * `active`\r\n    // * `except`\r\n    // * `keep`\r\n    Switcher.DEFAULTS = {\r\n        item: 'li',\r\n        active: 'active',\r\n        except: false,\r\n        keep: false\r\n    };\r\n\r\n    // 选中\r\n    // -----\r\n    Switcher.prototype.select = function ($target) {\r\n        var o = this.option, e = $.Event('select.ui.switcher', {relatedTarget: $target});\r\n        if (o.keep && $target.hasClass(o.active)) return;\r\n        $target.toggleClass(o.active).trigger(e);\r\n        if (!o.except) $target.siblings(o.item).removeClass(o.active);\r\n    };\r\n\r\n\r\n    // 插件接口\r\n    // --------\r\n    function Plugin(option) {\r\n        return $(this).each(function () {\r\n            var $this = $(this);\r\n            var data = $this.data('ui.switcher');\r\n\r\n            if (!data) $this.data('ui.switcher', (data = new Switcher(this, option)));\r\n            if (typeof option == 'string') data[option]();\r\n        })\r\n    }\r\n\r\n\r\n    // jQuery 虏氓录镁脌漏脮鹿\r\n    $.fn.switcher = Plugin;\r\n    $.fn.switcher.Constructor = Switcher;\r\n\r\n    // 全局绑定\r\n    // -----------\r\n    $(function () {\r\n        $(toggle).switcher()\r\n    });\r\n\r\n})(jQuery);\r\n\n/*!\r\n * TAB 切换\r\n * tommyshao <jinhong.shao@frontpay.cn>\r\n * Reference bootstrap.tab.js\r\n * API:\r\n *      $(element).on('closed.ui.alert', function(e, obj){});\r\n */\r\n\r\n+(function($) {\r\n    'use strict';\r\n\r\n    var tab = '[data-toggle=\"tab\"],.tabs-btn';\r\n\r\n    // 构造函数\r\n    // ----------\r\n    var Tab = function (element) {\r\n        this.$el = $(element);\r\n    };\r\n\r\n    Tab.VERSION = '1.0.0';\r\n\r\n    // 动画过渡时间\r\n    Tab.TRANSITION_DURATION = 150;\r\n\r\n    // 关闭\r\n    // ---------\r\n    Tab.prototype.show = function () {\r\n        var $this = this.$el;\r\n        var $ul = $this.closest('.tabs');\r\n        var selector = $this.data('target');\r\n\r\n        if (!selector) { // a标签\r\n            selector = $this.attr('href')\r\n            selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\r\n        }\r\n\r\n        if ($this.hasClass('active')) return;\r\n\r\n        var $previous = $ul.find('.active a');\r\n        var hideEvent = $.Event('hide.ui.tab', {\r\n            relatedTarget: $this[0]\r\n        });\r\n        var showEvent = $.Event('show.ui.tab', {\r\n            relatedTarget: $previous[0]\r\n        });\r\n\r\n        $previous.trigger(hideEvent);\r\n        $this.trigger(showEvent);\r\n\r\n        if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return;\r\n\r\n        var $target = $(selector);\r\n\r\n        this.activate($this.closest('li'), $ul);\r\n        this.activate($target, $target.parent(), function () {\r\n            $previous.trigger({\r\n                type: 'hidden.ui.tab',\r\n                relatedTarget: $this[0]\r\n            });\r\n            $this.trigger({\r\n                type: 'shown.ui.tab',\r\n                relatedTarget: $previous[0]\r\n            })\r\n        })\r\n    };\r\n\r\n    Tab.prototype.activate = function (element, container, callback) {\r\n        var $active = container.find('> .active');\r\n        var transition = callback\r\n            && $.support.transition\r\n            && (($active.length && $active.hasClass('fade')) || !!container.find('> .fade').length)\r\n\r\n        function next() {\r\n            $active.removeClass('active').find(tab).attr('aria-expanded', false);\r\n\r\n            element.addClass('active').find(tab).attr('aria-expanded', true);\r\n\r\n            if (transition) {\r\n                element[0].offsetWidth;\r\n                element.addClass('in');\r\n            } else {\r\n                element.removeClass('fade');\r\n            }\r\n\r\n            callback && callback();\r\n        }\r\n\r\n        $active.length && transition ?\r\n            $active.one('uiTransitionEnd', next).emulateTransitionEnd(Tab.TRANSITION_DURATION)\r\n            :\r\n            next();\r\n        $active.removeClass('in');\r\n    };\r\n\r\n\r\n    // 插件定义\r\n    // ----------\r\n    function Plugin(option) {\r\n        return $(this).each(function () {\r\n            var $this = $(this);\r\n            var data = $this.data('ui.tab');\r\n\r\n            if (!data) $this.data('ui.tab', (data = new Tab(this)));\r\n            if (typeof option == 'string') data[option] && data[option]();\r\n        })\r\n    }\r\n\r\n\r\n    // jQuery 插件扩展\r\n    $.fn.tab = Plugin;\r\n    $.fn.tab.Constructor = Tab;\r\n\r\n    // 元素插件绑定\r\n    // -------------\r\n    var clickHandler = function (e) {\r\n        if (!$(e.target).hasClass('tab-disabled')) {\r\n            e.preventDefault();\r\n            Plugin.call($(this), 'show')\r\n        }\r\n    };\r\n\r\n    $(function () {\r\n        // $(document).on('click.ui.tab', tab, clickHandler)\r\n        $(document).on('click.ui.tab', function (e) {\r\n            var that = e.target;\r\n            $(that).is(tab) && clickHandler.call(that, e)\r\n        })\r\n    })\r\n\r\n})(jQuery);\r\n\n//     tip提示\r\n//     tommyshao <jinhong.shao@frontpay.cn>\r\n//     Reference uikit.tooltips.js\r\n\r\n// API:\r\n// -----\r\n// $(element).tooltips(option);\r\n\r\n+(function($) {\r\n    'use strict';\r\n\r\n    var toggle = '[data-toggle=\"tooltips\"]';\r\n\r\n    // 构造函数\r\n    // ---------\r\n    var Tooltips = function (el, option) {\r\n        this.$el = $(el);\r\n        this.options = $.extend({}, Tooltips.DEFAULTS, this.$el.data(), option && typeof option == \"object\");\r\n        this.$tooltip = null;\r\n        this.content = '';\r\n        this.tooltipdelay = null;\r\n        this.checkdelay = null;\r\n        this.init();\r\n    };\r\n\r\n    Tooltips.VERSION = '1.0.0';\r\n\r\n    // 动画过渡时间\r\n    Tooltips.TRANSITION_DURATION = 150;\r\n\r\n    Tooltips.DEFAULTS = {\r\n        \"offset\": 9,\r\n        \"pos\": \"top\",\r\n        \"animation\": true,\r\n        \"delay\": 0,\r\n        \"cls\": \"\",\r\n        \"active\": \"active\",\r\n        \"content\": function (elem, title) {\r\n            title = elem.attr('title');\r\n            if (title) {\r\n                elem.data('cached-title', title).removeAttr('title');\r\n            }\r\n            return elem.data('cached-title');\r\n        }\r\n    };\r\n\r\n    // Public Method\r\n    // --------------\r\n    Tooltips.prototype.init = function () {\r\n        var $this = this;\r\n\r\n        if (!$this.$tooltip) {\r\n            $this.$tooltip = $('<div class=\"tooltips\"><div class=\"tooltips-inner\"></div><span class=\"tips-arrow-border\"></span><span class=\"tips-arrow\"></span></div>').appendTo('body');\r\n        }\r\n\r\n        $this.$el.on({\r\n            focus: function () {\r\n                $this.show()\r\n            },\r\n            blur: function () {\r\n                $this.hide()\r\n            },\r\n            mouseenter: function () {\r\n                $this.show()\r\n            },\r\n            mouseleave: function () {\r\n                $this.hide()\r\n            }\r\n        });\r\n    };\r\n\r\n    Tooltips.prototype.show = function () {\r\n        this.content = typeof(this.options.content) === \"function\" ? this.options.content(this.$el) : this.options.content;\r\n\r\n        if (this.tooltipdelay) clearTimeout(this.tooltipdelay);\r\n        if (this.checkdelay) clearTimeout(this.checkdelay);\r\n\r\n        if (!this.content.length) return;\r\n\r\n        this.$tooltip.stop().css({\"top\": -2000, \"visibility\": \"hidden\"}).removeClass(this.options.active).show();\r\n        this.$tooltip.find(\".tooltips-inner\").html(this.content);\r\n\r\n        var $this = this,\r\n            pos = $.extend({}, this.$el.offset(), {width: this.$el[0].offsetWidth, height: this.$el[0].offsetHeight}),\r\n            width = this.$tooltip[0].offsetWidth,\r\n            height = this.$tooltip[0].offsetHeight,\r\n            offset = typeof(this.options.offset) === \"function\" ? this.options.offset.call(this.$el) : this.options.offset,\r\n            position = typeof (this.options.pos) === \"function\" ? this.options.pos.call(this.$el) : this.options.pos,\r\n            tmppos = position.split('-'),\r\n            tcss = {\r\n                \"display\": \"none\",\r\n                \"visibility\": \"visible\",\r\n                \"top\": (pos.top + pos.height + height),\r\n                \"left\": pos.left\r\n            };\r\n\r\n        var variants = {\r\n            \"bottom\": {top: pos.top + pos.height + offset, left: pos.left + pos.width / 2 - width / 2},\r\n            \"top\": {top: pos.top - height - offset, left: pos.left + pos.width / 2 - width / 2},\r\n            \"left\": {top: pos.top + pos.height / 2 - height / 2, left: pos.left - width - offset},\r\n            \"right\": {top: pos.top + pos.height / 2 - height / 2, left: pos.left + pos.width + offset}\r\n        };\r\n\r\n        $.extend(tcss, variants[tmppos[0]]);\r\n\r\n        if (tmppos.length == 2) tcss.left = (tmppos[1] == \"left\") ? pos.left : pos.left + pos.width - width;\r\n\r\n        var boundary = this.checkBoundary(tcss.left, tcss.top, width, height);\r\n\r\n        if (boundary) {\r\n            switch (boundary) {\r\n                case \"x\":\r\n\r\n                    if (tmppos.length == 2) {\r\n                        position = tmppos[0] + '-' + (tcss.left < 0 ? 'left' : 'right');\r\n                    } else {\r\n                        position = tcss.left < 0 ? 'right' : 'left';\r\n                    }\r\n\r\n                    break;\r\n                case \"y\":\r\n\r\n                    if (tmppos.length == 2) {\r\n                        position = (tcss.top < 0 ? \"bottom\" : \"top\") + \"-\" + tmppos[1];\r\n                    } else {\r\n                        position = (tcss.top < 0 ? \"bottom\" : \"top\");\r\n                    }\r\n\r\n                    break;\r\n\r\n                case \"xy\":\r\n\r\n                    if (tmppos.length == 2) {\r\n                        position = (tcss.top < 0 ? \"bottom\" : \"top\") + \"-\" + (tcss.left < 0 ? \"left\" : \"right\");\r\n                    } else {\r\n                        position = tcss.left < 0 ? \"right\" : \"left\";\r\n                    }\r\n\r\n                    break;\r\n            }\r\n\r\n            tmppos = position.split('-');\r\n\r\n            $.extend(tcss, variants[tmppos[0]]);\r\n\r\n            if (tmppos.length == 2) tcss.left = (tmppos[1] == \"left\") ? pos.left : pos.left + pos.width - width;\r\n        }\r\n\r\n\r\n        tcss.left -= $(\"body\").position().left;\r\n\r\n        this.tooltipdelay = setTimeout(function () {\r\n            $this.$tooltip.css(tcss).attr(\"class\", ['tooltips', 'tooltips-' + position, $this.options.cls].join(' '));\r\n\r\n            if ($this.options.animation) {\r\n                $this.$tooltip.css({\r\n                    opacity: 0,\r\n                    display: \"block\"\r\n                }).addClass($this.options.active).animate({opacity: 1}, parseInt($this.options.animation, 10) || 400);\r\n            } else {\r\n                $this.$tooltip.show().addClass($this.options.active);\r\n            }\r\n\r\n            $this.tooltipdelay = false;\r\n\r\n            $this.checkdelay = setInterval(function () {\r\n                if (!$this.$el.is(':visible')) $this.hide();\r\n            }, 150);\r\n\r\n        }, parseInt(this.options.delay, 10) || 0);\r\n\r\n    };\r\n\r\n    Tooltips.prototype.hide = function () {\r\n        if (this.$el.is('input') && this.$el[0] === document.activeElement) return;\r\n\r\n        if (this.tooltipdelay) clearTimeout(this.tooltipdelay);\r\n        if (this.checkdelay) clearTimeout(this.checkdelay);\r\n\r\n        this.$tooltip.stop();\r\n\r\n        if (this.options.animation) {\r\n            var $this = this;\r\n\r\n            this.$tooltip.fadeOut(parseInt(this.options.animation, 10) || 400, function () {\r\n                $this.$tooltip.removeClass($this.options.active);\r\n            })\r\n        } else {\r\n            this.$tooltip.hide().removeClass(this.options.active)\r\n        }\r\n\r\n    };\r\n\r\n    Tooltips.prototype.checkBoundary = function (left, top, width, height) {\r\n        var axis = \"\";\r\n\r\n        if (left < 0 || (left - $(document).scrollLeft() + width > $(window).width())) {\r\n            axis += \"x\";\r\n        }\r\n\r\n        if (top < 0 || (top - $(document).scrollTop() + height) > $(window).height()) {\r\n            axis += \"y\";\r\n        }\r\n\r\n        return axis;\r\n    };\r\n\r\n\r\n    // 插件定义\r\n    // ----------\r\n    function Plugin(option) {\r\n        return $(this).each(function () {\r\n            var $this = $(this);\r\n            var data = $this.data('ui.tooltips');\r\n            if (!data) $this.data('ui.tooltips', (data = new Tooltips(this, option)));\r\n            if (typeof option == 'string') data[option]();\r\n        })\r\n    }\r\n\r\n\r\n    // jQuery 插件扩展\r\n    // -------------\r\n    $.fn.tooltips = Plugin;\r\n    $.fn.tooltips.Constructor = Tooltips;\r\n\r\n    // 元素插件绑定\r\n    // ----------\r\n    var handler = function () {\r\n        $(this).tooltips('show');\r\n    };\r\n\r\n    $(function () {\r\n        //$(document).on('mouseenter.tooltip.ui focus tooltip.ui', toggle, handler)\r\n        //$(toggle).tooltips();\r\n        $(document).on('mouseover.tooltip.ui focus.tooltip.ui', function (e) {\r\n            var $this = $(e.target);\r\n            $this.is(toggle) && handler.call($this);\r\n        })\r\n    })\r\n})(jQuery);\r\n\n//     动画支持判断扩展\r\n//     tommyshao <jinhong.shao@frontpay.cn>\r\n//     Reference bootstrap.transition.js\r\n//     http://getbootstrap.com/javascript/#transitions\r\n\r\n// API:\r\n// -----\r\n// $.support.transition\r\n// $(element).one('uiTransitionEnd', fn).emulateTransitionEnd(duration)\r\n\r\n\r\n+(function($) {\r\n    'use strict';\r\n\r\n    // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\r\n    // --------------------------------------------\r\n\r\n    function transitionEnd() {\r\n        var el = document.createElement('ui')\r\n\r\n        var transEndEventNames = {\r\n            WebkitTransition: 'webkitTransitionEnd',\r\n            MozTransition: 'transitionend',\r\n            OTransition: 'oTransitionEnd otransitionend',\r\n            transition: 'transitionend'\r\n        }\r\n\r\n        for (var name in transEndEventNames) {\r\n            if (el.style[name] !== undefined) {\r\n                return {end: transEndEventNames[name]}\r\n            }\r\n        }\r\n\r\n        return false // explicit for ie8 (  ._.)\r\n    }\r\n\r\n    // http://blog.alexmaccaw.com/css-transitions\r\n    $.fn.emulateTransitionEnd = function (duration) {\r\n        var called = false\r\n        var $el = this\r\n        $(this).one('uiTransitionEnd', function () {\r\n            called = true\r\n        })\r\n        var callback = function () {\r\n            if (!called) $($el).trigger($.support.transition.end)\r\n        }\r\n        setTimeout(callback, duration)\r\n        return this\r\n    }\r\n\r\n    $(function () {\r\n        $.support.transition = transitionEnd()\r\n\r\n        if (!$.support.transition) return\r\n\r\n        $.event.special.uiTransitionEnd = {\r\n            bindType: $.support.transition.end,\r\n            delegateType: $.support.transition.end,\r\n            handle: function (e) {\r\n                if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n            }\r\n        }\r\n    })\r\n\r\n})(jQuery);\r\n\nreturn Ui;\n}));\n","//     警告框\r\n//     tommyshao <jinhong.shao@frontpay.cn>\r\n//     Reference bootstrap.alert.js\r\n//     API:\r\n//     $(element).on('closed.ui.alert', function(e, obj){});\r\n\r\n+(function($) {\r\n    'use strict';\r\n\r\n    var dismiss = '[data-dismiss=\"alert\"]';\r\n    var closeBtn = 'em';\r\n\r\n    // 构造函数\r\n    // ------\r\n    var Alert = function (el, callback) {\r\n        var that = this;\r\n        if (typeof callback === 'function') {\r\n            $(el).on('click', closeBtn, function () {\r\n                var $close = $(this);\r\n                callback(function () {\r\n                    that.close.call($close)\r\n                });\r\n            });\r\n        } else {\r\n            $(el).on('click', closeBtn, this.close);\r\n        }\r\n    };\r\n\r\n    Alert.VERSION = '1.0.0';\r\n\r\n    // 动画过渡时间\r\n    Alert.TRANSITION_DURATION = 150;\r\n\r\n    // 关闭\r\n    // -----\r\n    Alert.prototype.close = function (e) {\r\n        var $this = $(this);\r\n        var selector = $(this).attr('data-target');\r\n\r\n        if (!selector) { // a[href=#test]关闭 id为test的alert\r\n            selector = $this.attr('href');\r\n            selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, ''); // strip for ie7\r\n        }\r\n\r\n        var $parent = $(selector);\r\n\r\n        if (e) e.preventDefault();\r\n\r\n        if (!$parent.length) {\r\n            $parent = $this.closest('.alert');\r\n        }\r\n\r\n        $parent.trigger(e = $.Event('close.ui.alert'));\r\n\r\n        if (e.isDefaultPrevented()) return;\r\n\r\n        $parent.removeClass('in');\r\n\r\n        function removeElement() {\r\n            var ev = $.Event('closed.ui.alert', {relatedTarget: $parent});\r\n            $parent.detach().remove();\r\n            $this.trigger(ev);\r\n        }\r\n\r\n        if ($.support.transition && $parent.hasClass('fade')) { // css3\r\n            $parent.one('uiTransitionEnd', removeElement)\r\n                .emulateTransitionEnd(Alert.TRANSITION_DURATION)\r\n        } else {\r\n            $parent.fadeOut(Alert.TRANSITION_DURATION, removeElement)\r\n        }\r\n    };\r\n\r\n\r\n    // 插件定义\r\n    // -------\r\n    function Plugin(option) {\r\n        return $(this).each(function () {\r\n            var $this = $(this);\r\n            var data = $this.data('ui.alert');\r\n\r\n            if (!data) $this.data('ui.alert', (data = new Alert(this, option)));\r\n            if (typeof option == 'string') data[option].call($(this));\r\n        })\r\n    }\r\n\r\n\r\n    // jQuery 插件扩展\r\n    // --------------\r\n    $.fn.alert = Plugin;\r\n    $.fn.alert.Constructor = Alert;\r\n\r\n    // 元素插件绑定\r\n    // -----------\r\n    $(function () {\r\n        $(document).on('click.ui.alert', function (e) {\r\n            var that = e.target;\r\n            $(that).is(dismiss) && Alert.prototype.close.call(that, e);\r\n        })\r\n    })\r\n})(jQuery);\r\n","//     @appName: checkAll 全选\r\n//     @version: v1.0.0\r\n//     @author: TommyShao\r\n//     @Created 2015/12/22\r\n//     @description:\r\n//     @useage:\r\n\r\n// **用法**\r\n// ```\r\n//      <input type=\"checkbox\" data-toggle=\"checkAll\" data-target=\"selector\" />\r\n//      $(element).on('checked.ui.checkAll', function(e){ e.relatedTarget; });\r\n//      $(element).on('reversed.ui.checkAll', function(e){ e.relatedTarget; });\r\n// ```\r\n\r\n+(function($) {\r\n    'use strict';\r\n\r\n    // 全局绑定选择器\r\n    var toggle = '[data-toggle=\"checkAll\"]';\r\n\r\n    // 构造函数\r\n    // -------\r\n    // * `element` dom元素对象\r\n\r\n    var CheckAll = function (element) {\r\n        var $this = this;\r\n        $this.$el = $(element);\r\n        $this.$target = $($this.$el.data('target'));\r\n        $this.isReverse = $this.$el.data('reverse');\r\n\r\n        // 监听 `click` 点击事件\r\n        // 直接执行实例方法\r\n        // * `reverse` 反选功能\r\n        // * `activate` 全选\r\n        $this.$el.on('click', $.proxy($this.isReverse ? this.reverse : this.activate, this));\r\n    };\r\n\r\n    // 插件版本号\r\n    // --------\r\n    // 1.0.0\r\n    CheckAll.VERSION = '1.0.0';\r\n\r\n    // 全选功能\r\n    // --------\r\n    // Function activate\r\n    CheckAll.prototype.activate = function () {\r\n        // 当前dom元素是否勾选\r\n        var isCheck = this.$el.is(':checked');\r\n        // 创建选中事件\r\n        // `relatedTarget` 绑定为当前dom元素\r\n        var e = $.Event('checked.ui.checkAll', {relatedTarget: this.$el});\r\n        // 设置所有目标元素属性为选中\r\n        this.$target.prop('checked', isCheck);\r\n        // 触发用户自定义选中事件\r\n        this.$el.trigger(e);\r\n    };\r\n\r\n    // 反选功能\r\n    // -------\r\n    CheckAll.prototype.reverse = function () {\r\n        // 定义反选事件类型\r\n        var e = $.Event('reversed.ui.checkAll', {relatedTarget: this.$el});\r\n        // 遍历所有目标元素，将他们选中属性反转\r\n        this.$target.map(function () {\r\n            return $(this).prop('checked', !this.checked)\r\n        });\r\n        // 触发反选事件api\r\n        this.$el.trigger(e);\r\n    };\r\n\r\n\r\n    // 插件定义\r\n    // -------\r\n    function Plugin(option) {\r\n        return $(this).each(function () {\r\n            var $this = $(this);\r\n            var data = $this.data('ui.checkAll');\r\n\r\n            if (!data) $this.data('ui.checkAll', (data = new CheckAll(this)));\r\n            if (typeof option == 'string') data[option]();\r\n        })\r\n    }\r\n\r\n\r\n    // jQuery 插件扩展\r\n    // -------------\r\n    $.fn.checkAll = Plugin;\r\n    $.fn.checkAll.Constructor = CheckAll;\r\n\r\n    // 全局绑定插件\r\n    // -------------\r\n    $(function () {\r\n        $(toggle).checkAll()\r\n    });\r\n})(jQuery);\r\n","//     菜单下拉|select\r\n//     tommyshao <jinhong.shao@frontpay.cn>\r\n//     Reference bootstrap.dropdown.js\r\n\r\n// API\r\n// -----\r\n// $(element).on('selected.ui.dropdown', function(e, obj){});\r\n\r\n+(function($) {\r\n    'use strict';\r\n\r\n    // 默认高亮类\r\n    var active = 'active';\r\n    // 绑定默认选择器\r\n    var wrap = '.form-control-dropdown';\r\n    var toggle = '[data-toggle=\"dropdown\"],.form-control-dropdown-value';\r\n    var toggleBtn = '.form-control-dropdown-btn, [data-toggle=\"dropdown-btn\"]';\r\n    var toggleIBtn = '.form-control-dropdown-btn > i, [data-toggle=\"dropdown-btn\"] > i';\r\n    var ul = '.form-control-dropdown-menu';\r\n    var list = '.form-control-dropdown-menu li, [role=\"list\"] li';\r\n\r\n    // 构造函数\r\n    // -------\r\n    var Dropdown = function (el) {\r\n        $(el).on('click.ui.dropdown', this.toggle);\r\n\r\n        if (/input/i.test(el.tagName)) {\r\n            $(el).on('keyup.ui.dropFilter', this.filter)\r\n\r\n            //.on('focusin.ui.dropFilter', this.focusIn)\r\n        }\r\n\r\n\r\n        var $target = getParent(el);\r\n        $target.on('click.ui.dropSelect', list, this.selected($target))\r\n    };\r\n\r\n    // 版本\r\n    // ----------\r\n    // 1.0.0\r\n\r\n    Dropdown.VERSION = '1.0.0';\r\n\r\n    // 鼠标点击\r\n    // ---------\r\n    Dropdown.prototype.toggle = function (e) {\r\n        var $this = $(this);\r\n\r\n        if ($this.is('.disabled,:disabled')) return;\r\n\r\n        dropMenus($this);\r\n\r\n        return false\r\n    };\r\n\r\n    // 键盘按键 focus\r\n    // -------------\r\n    //Dropdown.prototype.CURRENT_ITEM = -1;\r\n    Dropdown.prototype.keydown = function (e) {\r\n        //console.log(e.which)\r\n        if (e.which === 27) { // esc\r\n            clearMenus(e);\r\n            return;\r\n        }\r\n        if (!/(38|40|27|32|13|46|8)/.test(e.which)) return;\r\n\r\n        var $this = $(this);\r\n        var currentItem = $this.data('currentItem') === undefined ? -1 : $this.data('currentItem');\r\n\r\n        //e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        if ($this.is('.disabled, :disabled')) return;\r\n\r\n        var $target = getParent($this);\r\n        active = $this.data('active') || active;\r\n\r\n        var isActive = $target.hasClass(active);\r\n\r\n        //console.log(e.which)\r\n        if ((!isActive && e.which != 27) || (isActive && e.which == 27)) {\r\n            //console.log(e.which);\r\n            if (e.which == 27) $target.find(toggle).trigger('focus');\r\n            return $this.trigger('click');\r\n        }\r\n\r\n        var $items = $target.find(list).filter(':visible');\r\n\r\n        if (!$items.length) return;\r\n\r\n        if (e.which == 13 && $items.filter('.hover').length) { // enter\r\n            $items.filter('.hover').trigger('click.ui.dropSelect');\r\n            return;\r\n        }\r\n\r\n        var index = $items.index(e.target) > -1 ? $items.index(e.target) : currentItem;\r\n\r\n\r\n        if (e.which == 38 && index >= 0)  index--;  // up\r\n        if (e.which == 40 && index < $items.length) index++; // down\r\n        //if (!~index) index = 0;\r\n        //console.log(index);\r\n        if (index < 0) index = $items.length - 1;\r\n        if (index >= $items.length) index = 0;\r\n\r\n        scrollTop($items, index);\r\n\r\n        $this.data('currentItem', index);\r\n\r\n        $items.removeClass('hover').eq(index).addClass('hover').trigger('focus')\r\n    };\r\n\r\n    // 下拉菜单选中\r\n    // ---------\r\n    Dropdown.prototype.selected = function (el) {\r\n        var $target = el.find(toggle);\r\n        return function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            var isInput = /input/i.test($target[0].tagName);\r\n            var option = $.trim($(this)[isInput ? 'text' : 'html']());\r\n            $target[isInput ? 'val' : 'html'](option).trigger('selected.ui.dropdown', this).trigger('blur');\r\n            clearMenus();\r\n            return false;\r\n        }\r\n    };\r\n\r\n    // input输入过滤\r\n    // -----------\r\n    Dropdown.prototype.filter = function (e) {\r\n        if (!/input/i.test(e.target.tagName)) return;\r\n\r\n        var $this = $(this);\r\n        var inputText = $.trim($this.val());\r\n        var $list = getList($this);\r\n        if (inputText === '') {\r\n            $list.show();\r\n            return;\r\n        }\r\n\r\n        if ($list.length) {\r\n            $list.map(function () {\r\n                var text = $(this).text();\r\n                if (text.indexOf(inputText) > -1) {\r\n                    return $(this).show();\r\n                } else {\r\n                    return $(this).hide();\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    Dropdown.prototype.focusIn = function (e) {\r\n        var $this = $(this);\r\n        dropMenus($this, true)\r\n        //Dropdown.prototype.filter.call(this, e);\r\n    };\r\n\r\n    // 显示当前展开dropdown\r\n    // -------------------\r\n\r\n    function dropMenus($this, always) {\r\n        var $target = getParent($this);\r\n        active = $this.data('active') || active;\r\n\r\n        var isActive = $target.hasClass(active);\r\n\r\n        always === undefined && clearMenus(underfined,1);\r\n\r\n        if (!isActive) {\r\n            $target.addClass(active);\r\n            $this.attr('aria-expanded', true).trigger('show.ui.dropdown', this)\r\n        }\r\n    }\r\n\r\n    // 清除页面所有dropdown\r\n    // ------------------\r\n    function clearMenus(e, auto) {\r\n        $(toggle).each(function () {\r\n            var $this = $(this);\r\n            var $target = getParent($this);\r\n            var $input = $target.find(toggle);\r\n            var isAuto = $this.attr('data-auto');\r\n            active = $this.data('active') || active;\r\n\r\n            if (!$target.hasClass(active)) return;\r\n            if (e && e.isDefaultPrevented()) return;\r\n\r\n            // 隐藏之前自动赋值\r\n            // console.log(isAuto)\r\n            auto && isAuto && autoFill($this, $input);\r\n\r\n            $target.removeClass(active).find(list).removeClass('hover').show();\r\n            $this.attr('aria-expanded', 'false').trigger('hide.ui.dropdown', this).data('currentItem', -1);\r\n\r\n            $input.length && $input.trigger('blur');\r\n\r\n        })\r\n    }\r\n\r\n    function hideAllMenus(e) {\r\n        clearMenus(e, 1)\r\n    }\r\n\r\n    // 默认选中\r\n    // -----------\r\n    function autoFill(element, input) {\r\n        var $Li = getList(element), $vLi, isMatch = 0, txt = '', value = $.trim(input.val());\r\n\r\n        $vLi = $Li.filter(function () {\r\n            if ($(this).is(':visible')) {\r\n                if (isMatch === 0) {\r\n                    txt = $.trim($(this).text());\r\n                    isMatch = txt == value ? 1 : 0;\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n\r\n        if (!isMatch) {\r\n            if ($vLi.length === 0) {\r\n                $Li.eq(0).trigger('click')\r\n            } else {\r\n                $vLi.eq(0).trigger('click.ui.dropSelect')\r\n            }\r\n        }\r\n    }\r\n\r\n    // 匹配\r\n    // -----------\r\n    function chkMatch() {\r\n        var $this = $(this),\r\n            placeholder = $this.attr('placeholder'),\r\n            value = $.trim($this.val()),\r\n            $items = getList($this);\r\n\r\n        if (value === '' || value === placeholder) {\r\n            return;\r\n        }\r\n\r\n        $items.hide()\r\n            .filter(function () {\r\n                var txt = $.trim($(this).text()) || '';\r\n\r\n                if (txt == value) {\r\n                    $(this).addClass('hover');\r\n                }\r\n\r\n                return txt.indexOf(value) > -1;\r\n            })\r\n            .show();\r\n    }\r\n\r\n\r\n    // 获取响应的元素\r\n    // --------------\r\n    function getParent(el) {\r\n        var $parent = $(el).data('target') || $(el).parent();\r\n        return $parent;\r\n    }\r\n\r\n    // 获取列表项\r\n    // -----------\r\n    function getList(el) {\r\n        var $parent = getParent(el);\r\n        return $parent.find(list);\r\n    }\r\n\r\n    // 滚动条自动跳到某位置\r\n    // -----------------\r\n    function scrollTop(el, i) {\r\n        var $parent = el.parent();\r\n        var top = el.eq(i).position().top;\r\n        $parent.scrollTop(top);\r\n    }\r\n\r\n    // 插件定义\r\n    // ------------\r\n    function Plugin(option) {\r\n        var args = [].slice.call(arguments, 1);\r\n        return $(this).each(function () {\r\n            var $this = $(this);\r\n            var data = $this.data('ui.dropdown');\r\n\r\n            if (!data) $this.data('ui.dropdown', (data = new Dropdown(this)));\r\n            if (typeof option == 'string') data[option].apply(this, args);\r\n        })\r\n    }\r\n\r\n    // jQuery 插件扩展\r\n    // --------------\r\n    $.fn.dropdown = Plugin;\r\n    $.fn.dropdown.Constructor = Dropdown;\r\n\r\n    // 元素插件绑定\r\n    // --------------\r\n    $(function () {\r\n        $(toggle).dropdown();\r\n        $(document)\r\n        // 点击页面其他地方收起\r\n            .on('click.ui.dropdown', hideAllMenus)\r\n            // 按钮触发\r\n            .on('click.ui.dropdown-btn', function (e) {\r\n                var that = e.target;\r\n                if ($(that).is(toggleBtn) || $(that).is(toggleIBtn)) {\r\n                    var $wrap = $(that).closest(wrap);\r\n                    var $target = $wrap.find(toggle);\r\n                    //console.log($wrap);\r\n                    //$target.length && $target.dropdown('toggle');\r\n                    dropMenus($target)\r\n                    //console.log($target);\r\n                    //$target.dropdown('selected', $target[0]);\r\n                    //$target.trigger('toggle')\r\n                    //Dropdown.prototype.selected($target)();\r\n                    return false;\r\n                }\r\n\r\n            })\r\n            // .on('click.ui.dropdown', ul, function(e){\r\n            .on('click.ui.dropdown', function (e) {\r\n                var that = e.target;\r\n                if ($(that).is(ul)) {\r\n                    e.stopPropagation();\r\n                    return false;\r\n                }\r\n\r\n            })\r\n            // .on('click.ui.dropdown', list, function(e){\r\n            //     var $toggle = $(e.target).closest(wrap);\r\n            //     console.log($toggle);\r\n            //     var $target = getParent($toggle.find(ul));\r\n            //     $target.trigger('click.ui.dropSelect');\r\n            //     e.stopPropagation();\r\n            //     return false;\r\n            // })\r\n            // focus\r\n            // .on('focus.ui.dropdown', toggle, chkMatch)\r\n            .on('focus.ui.dropdown', function (e) {\r\n                var that = e.target;\r\n                $(that).is(toggle) && chkMatch(that, e);\r\n            })\r\n            // .on('keydown.ui.dropdown', toggle, Dropdown.prototype.keydown);\r\n            .on('keydown.ui.dropdown', function (e) {\r\n                var that = e.target;\r\n                $(that).is(toggle) && Dropdown.prototype.keydown.call(that, e);\r\n            });\r\n    })\r\n})(jQuery);\r\n","/*!\r\n * 弹层\r\n * tommyshao <jinhong.shao@frontpay.cn>\r\n * Reference bootstrap.modal.js\r\n * API:\r\n *      // 监听打开\r\n *      $(element).on('show.ui.modal', function(e, obj){});\r\n *      $(element).on('shown.ui.modal', function(e, obj){});\r\n *\r\n *      // 监听关闭\r\n *      $(element).on('hide.ui.modal', function(){});\r\n *      $(element).on('hidden.ui.modal', function(){});\r\n\r\n        // 绑定一个弹窗\r\n *      $(element).modal();\r\n *\r\n *      // 自定义弹窗\r\n *      $(id).modal({title: '提示', content: 'abc'});\r\n        $(id).modal('setContent', 'cdfg');\r\n\r\n        // loading\r\n */\r\n\r\n/**\r\n * log:\r\n * 1. 加属性`tabindex=-1`解决聚焦问题\r\n * 2. 增加方法\r\n *   $.successModalLayer({id:string, title: string, content: string, link: string, callback: function})\r\n     $.confirmModalLayer({id: string, title: string, content: string, callback: function})\r\n     $.alertModalLayer({id: string, icon: string, title: string, content: string})\r\n     $.closeModalLayer(id)\r\n * 3. 增加支持 iframe\r\n */\r\n\r\n+(function($) {\r\n    'use strict';\r\n\r\n    // 构造函数\r\n    // --------\r\n    var Modal = function (element, options) {\r\n        this.$el = $(element);\r\n        this.options = options;\r\n        this.$body = $(document.body);\r\n        //this.$container = this.$el.parents('.modal-background');\r\n        this.$dialog = this.$el.find('.modal-wrap');\r\n        this.$backdrop = null;\r\n        this.isShown = null;\r\n        this.originalBodyPad = null;\r\n        this.scrollbarWidth = 0;\r\n\r\n        if (this.options.remote) {\r\n            this.$el\r\n                .find('.modal-body')\r\n                .load(this.options.remote, $.proxy(function () {\r\n                    this.$element.trigger('loaded.ui.modal');\r\n                }, this))\r\n        }\r\n    };\r\n\r\n    Modal.VERSION = '1.0.0';\r\n\r\n    // 动画过渡时间\r\n    Modal.TRANSITION_DURATION = 150;\r\n\r\n    Modal.DEFAULTS = {\r\n        backdrop: true,\r\n        keyboard: true,\r\n        show: true\r\n    };\r\n\r\n    // 自定义弹框模板\r\n    Modal.TEMPLATE = [\r\n        '<div class=\"modal-background fade\" id=\"{{mid}}\">',\r\n        '<div class=\"modal-layer\">',\r\n        '<div class=\"modal-position\">',\r\n        '<div class=\"modal-wrap\">',\r\n        '<div class=\"modal-head\">',\r\n        '<span class=\"modal-title\">{{title}}</span>',\r\n        '<button class=\"modal-close\">',\r\n        '<i></i>',\r\n        '</button>',\r\n        '</div>',\r\n        '<div class=\"modal-body\">',\r\n        '{{content}}',\r\n        '</div>',\r\n        '</div>',\r\n        '</div>',\r\n        '</div>',\r\n        '</div>'\r\n    ].join('');\r\n\r\n    Modal.CreateModal = function (option) {\r\n        var $body = $(document.body), element;\r\n        if (option && typeof option == \"object\") {\r\n            element = Modal.TEMPLATE.replace(/{{(\\w*)}}/gi, function (match, key) {\r\n                if (option[key] && typeof option[key] == \"string\") return /^(\\.|#)\\w*/gi.test(option[key]) ? $(option[key]).html() : option[key];\r\n                // dom元素\r\n                if (option[key] && option[key].length && option.length > 0) return option[key].html();\r\n            });\r\n\r\n            element = $(element).hide().appendTo($body)\r\n        }\r\n        return element;\r\n    };\r\n\r\n    // 打开\r\n    Modal.prototype.toggle = function (_relatedTarget) {\r\n        return this.isShown ? this.hide() : this.show(_relatedTarget);\r\n    };\r\n\r\n\r\n    // 显示\r\n    Modal.prototype.show = function (_relatedTarget) {\r\n        var that = this;\r\n        var e = $.Event('show.ui.modal', {relatedTarget: _relatedTarget});\r\n\r\n        //this.$el.trigger(e);\r\n\r\n        if (this.isShown || e.isDefaultPrevented()) return;\r\n\r\n        this.isShown = true;\r\n        this.checkScrollbar();\r\n        this.setScrollbar();\r\n        this.$body.addClass('modal-open');\r\n\r\n        this.escape();\r\n        this.resize();\r\n\r\n        this.$el.on('click.dismiss.ui.modal', '[data-dismiss=\"modal\"],.modal-close', $.proxy(this.hide, this));\r\n\r\n\r\n        var transition = $.support.transition && that.$el.hasClass('fade');\r\n        that.$el.show().scrollTop(0).attr('tabindex', -1);\r\n\r\n        that.adjustDialog();\r\n\r\n        if (transition) {\r\n            that.$el[0].offsetWidth;\r\n        }\r\n\r\n        that.enforceFocus();\r\n\r\n        //var e = $.Event('shown.ui.modal', {relatedTarget: _relatedTarget});\r\n\r\n        if (transition) {\r\n            that.$el.addClass('in').attr('aria-hidden', false);\r\n            that.$dialog.one('uiTransitionEnd', function () {\r\n                that.$el.trigger('focus').trigger(e)\r\n            }).emulateTransitionEnd(Modal.TRANSITION_DURATION)\r\n        } else {\r\n            that.$el.hide().addClass('in').attr('aria-hidden', false).fadeIn(Modal.TRANSITION_DURATION, function () {\r\n                $(this).trigger('focus').trigger(e);\r\n            }).attr('aria-hidden', false);\r\n        }\r\n    };\r\n\r\n    // 隐藏\r\n    Modal.prototype.hide = function (e) {\r\n        if (e) e.preventDefault();\r\n\r\n        var $this = this;\r\n\r\n        if (!this.$el.is(':visible') && !this.isShown) return;\r\n\r\n        this.isShown = false;\r\n\r\n        this.escape();\r\n        this.resize();\r\n\r\n        $(document).off('focusin.ui.modal').off('keydown.ui.modal');\r\n\r\n        this.$el.removeClass('in').attr('aria-hidden', true).off('click.dismiss.ui.modal').off('mouseup.dismiss.ui.modal');\r\n\r\n        this.$dialog.off('mousedown.dismiss.ui.modal');\r\n\r\n        $.support.transition && this.$el.hasClass('fade') ?\r\n            this.$el.one('uiTransitionEnd', $.proxy(this.hideModal, this)).emulateTransitionEnd(Modal.TRANSITION_DURATION)\r\n            : (function () {\r\n            $this.$el.fadeOut(Modal.TRANSITION_DURATION, function () {\r\n                $this.hideModal()\r\n            })\r\n        })();\r\n    };\r\n\r\n    Modal.prototype.close = function (id) {\r\n        $(id).data('ui.modal').hide();\r\n    };\r\n\r\n    // esc关闭\r\n    Modal.prototype.escape = function () {\r\n        if (this.isShown && this.options.keyboard) {\r\n            this.$el.on('keydown.dismiss.ui.modal', $.proxy(function (e) {\r\n                e.which == 27 && this.hide()\r\n            }, this))\r\n        } else if (!this.isShown) {\r\n            this.$el.off('keydown.dismiss.ui.modal');\r\n        }\r\n    };\r\n\r\n    Modal.prototype.hideModal = function () {\r\n        var that = this;\r\n        var e = $.Event('hide.ui.modal', {relatedTarget: that.$el});\r\n        that.$el.hide();\r\n        that.$body.removeClass('modal-open');\r\n        that.resetAdjustments();\r\n        that.resetScrollbar();\r\n        that.$el.trigger(e);\r\n    };\r\n    // 重新缩放\r\n    Modal.prototype.resize = function () {\r\n    };\r\n    // 调整弹框位置\r\n    Modal.prototype.handleUpdate = function () {\r\n        this.adjustDialog();\r\n    };\r\n    Modal.prototype.adjustDialog = function () {\r\n        return;\r\n        var modalIsOverflowing = this.$el[0].scrollHeight > document.documentElement.clientHeight;\r\n\r\n        this.$el.css({\r\n            paddingLeft: !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\r\n            paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\r\n        })\r\n    };\r\n    Modal.prototype.resetAdjustments = function () {\r\n        this.$el.css({\r\n            paddingLeft: '',\r\n            paddingRight: ''\r\n        })\r\n    };\r\n    // 获取焦点\r\n    Modal.prototype.enforceFocus = function () {\r\n        $(document)\r\n            .off('focusin.ui.modal')\r\n            .on('focusin.ui.modal', $.proxy(function (e) {\r\n                if (this.$el[0] !== e.target && !this.$el.has(e.target).length) {\r\n                    this.$el.trigger('focus');\r\n                }\r\n            }, this))\r\n    };\r\n\r\n    // 滚动条\r\n    Modal.prototype.checkScrollbar = function () {\r\n        var fullWindowWidth = window.innerWidth; //$(window).width();\r\n        if (!fullWindowWidth) {\r\n            var documentElementRect = document.documentElement.getBoundingClientRect();\r\n            fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\r\n        }\r\n\r\n        this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;\r\n        this.scrollbarWidth = this.measureScrollbar();\r\n    };\r\n\r\n    Modal.prototype.setScrollbar = function () {\r\n        var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10);\r\n        this.originalBodyPad = document.body.style.paddingRight || '';\r\n        if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth);\r\n    };\r\n\r\n    Modal.prototype.resetScrollbar = function () {\r\n        this.$body.css('padding-right', this.originalBodyPad);\r\n    };\r\n\r\n    Modal.prototype.measureScrollbar = function () {\r\n        var scrollDiv = document.createElement('div');\r\n        scrollDiv.className = 'modal-scrollbar-measure';\r\n        this.$body.append(scrollDiv);\r\n        var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\r\n        this.$body[0].removeChild(scrollDiv);\r\n        return scrollbarWidth;\r\n    };\r\n\r\n    // 扩展方法\r\n    Modal.prototype.setContent = function (content) {\r\n        var $content = this.$el.find('.modal-body');\r\n        $content.length && $content.html(content || '');\r\n    };\r\n\r\n    // 设置标题\r\n    Modal.prototype.setTitle = function (title) {\r\n        var $title = this.$el.find('.modal-title');\r\n        $title.length && $title.html(title || '')\r\n    };\r\n\r\n    // 设置对话框title\r\n    /*Modal.prototype.layerUpdate = function(option){\r\n     var $el = this.$el, $obj;\r\n     for(var o in option) {\r\n     if ( o != 'buttons') {\r\n     $obj = $el.find('[role=\"'+ o +'\"]');\r\n     if(o == 'icon') {\r\n     $obj.attr('class', 'notice-wrap '+ option[o] +' in-modal');\r\n     } else {\r\n     $el.find('[role=\"'+ o +'\"]').html(option[o])\r\n     }\r\n     }\r\n     }\r\n     }*/\r\n\r\n\r\n    // 插件定义\r\n    //======================\r\n    function Plugin(option, _relatedTarget) {\r\n        if (!$(this).length && option && /^#(\\w*)/gi.test($(this).selector)) { // js创建\r\n            var data, fnName; //option = typeof option === 'string' ? {title: '\\u6807\\u9898', content: ''} : option;  //, uid = Math.random().toString(36).substring(2);\r\n            //option.id = 'modal-'+uid;\r\n            if (typeof option === 'string') {\r\n                fnName = option;\r\n                option = {title: '\\u6807\\u9898', content: ''};\r\n            }\r\n            option.mid = $(this).selector.replace(/^#/g, '');\r\n            var $this = Modal.CreateModal(option);\r\n            $this.data('mid', option.mid);\r\n            var options = $.extend({}, Modal.DEFAULTS, typeof option == 'object' && option);\r\n            $this.data('ui.modal', (data = new Modal($this, options)));\r\n\r\n            if (fnName && typeof data[fnName] === 'function') {\r\n                data[fnName](_relatedTarget);\r\n            }\r\n\r\n            if (option['callback']) option['callback'].call($this);\r\n\r\n            //return data.show(_relatedTarget);\r\n            data.show(_relatedTarget);\r\n            return $(this);\r\n        } else { // 模板\r\n            return $(this).each(function () {\r\n                var $this = $(this);\r\n                var data = $this.data('ui.modal');\r\n                var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option);\r\n                if (!data) $this.data('ui.modal', (data = new Modal(this, options)));\r\n                if (typeof option == 'string') {\r\n                    data[option](_relatedTarget);\r\n                } else if (options.show) {\r\n                    // 重新设置标题\r\n                    if (options.title) data.setTitle(options.title);\r\n                    // 重新设置内容\r\n                    if (options.content) data.setContent(options.content);\r\n\r\n                    data.show(_relatedTarget);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    // jQuery 插件扩展\r\n    jQuery.fn.modal = Plugin;\r\n    jQuery.fn.modal.Constructor = Modal;\r\n\r\n    //-------------------------\r\n    //--- 扩展 ----------------\r\n    //-------------------------\r\n    // ajaxLoading\r\n    jQuery.fn.showLoading = function (title, content) {\r\n        var $this, title = title || '处理中...', content = content || '请不要关闭浏览器，系统正在处理';\r\n        if ($(this).length) {\r\n            if (title) $(this).find('.modal-body h3').html(title);\r\n            if (content) $(this).find('.loading-content').html(content);\r\n\r\n            return $(this).modal('show');\r\n        } else {\r\n            var template = ['<div class=\"notice-wrap waiting in-modal\">',\r\n                '<div class=\"notice-box\">',\r\n                '<span class=\"notice-img\"></span>',\r\n                '<h3>' + title + '</h3>',\r\n                '<div class=\"loading-content\">' + content + '</div>',\r\n                '</div>',\r\n                '</div>'].join('');\r\n            return $(this).modal({\r\n                title: '提示', content: template, callback: function () {\r\n                    $(this).find('.modal-close').hide();\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    jQuery.fn.hideLoading = function () {\r\n        return $(this).length && $(this).modal('hide');\r\n    }\r\n\r\n    jQuery.showLoading = function (title, content) {\r\n        var id = '#ui-loading';\r\n        return $(id).showLoading(title, content);\r\n    }\r\n    jQuery.hideLoading = function () {\r\n        var id = '#ui-loading';\r\n        return $(id).hideLoading();\r\n    }\r\n\r\n\r\n    // --------\r\n    // 自定义弹层\r\n    // --------\r\n\r\n    // alert,error,success\r\n    jQuery.fn.modalLayer = function (option) {\r\n        var defaults = {\r\n            icon: 'success',\r\n            title: '成功',\r\n            content: '',\r\n            close: true, // 默认 true 可以关闭，false -不显示 x 关闭按钮 function关闭函数\r\n            buttons: [\r\n                {\r\n                    text: '确定',\r\n                    href: false,\r\n                    style: 'btn primary',\r\n                    target: false,\r\n                    ok: $.noop\r\n                }\r\n            ]\r\n        };\r\n\r\n\r\n        var $that = $(this), opt;\r\n\r\n        /*if($that.length) {\r\n         var Instance = $that.data('ui.modal'), dfOption = $that.data('options');\r\n         opt = $.extend(defaults, dfOption, option)\r\n         // 重新设置title，content，icon\r\n         Instance && typeof opt === \"object\" && Instance.layerUpdate(opt);\r\n         $that.modal('show');\r\n         } else { */\r\n        /*\r\n         * log: 隐藏即关闭\r\n         * 2015-10-16\r\n         */\r\n        // 初始化\r\n        opt = $.extend({}, defaults, option);\r\n        var template = ['<div class=\"notice-wrap ' + opt.icon + ' in-modal\" role=\"icon\">',\r\n            '<div class=\"modalLayer notice-box\">',\r\n            '<span class=\"notice-img\"></span>',\r\n            '<h3 role=\"title\" class=\"modalLayer-title ' + ($.trim(opt.content) == '' ? 'fn-mt-20' : '') + '\">' + opt.title + '</h3>',\r\n            '<div class=\"modalLayer-content\" role=\"content\">' + opt.content + '</div>',\r\n            '</div>',\r\n            '</div>',\r\n            '<div class=\"in-modal-btns text-align-center\">',\r\n            '</div>'];\r\n        // 拼接按钮html结构\r\n        var btnHtml = [], btns = opt.buttons;\r\n        for (var i = 0; i < btns.length; i++) {\r\n            if (btns[i].href) {\r\n                btnHtml.push('<a href=\"' + btns[i].href + '\" ' + (btns[i].target ? 'target=\"' + btns[i].target + '\"' : '') + ' class=\"' + (btns[i].style || 'btn primary') + '\" data-index=\"' + i + '\">' + btns[i].text + '</a>');\r\n            } else {\r\n                btnHtml.push('<button type=\"button\" class=\"' + (btns[i].style || 'btn primary') + '\" data-index=\"' + i + '\">' + btns[i].text + '</button>');\r\n            }\r\n        }\r\n\r\n        // 添加自定义按钮html\r\n        template.splice(-1, 0, btnHtml.join(''));\r\n\r\n        // 自定义对话弹层实例\r\n        $that = $(this).modal({\r\n            title: '提示', content: template.join(''), callback: function (obj) {\r\n                // 按钮点击触发配置回调函数，没有配置则默认关闭层\r\n                $(this).on('click', '.in-modal-btns .btn', function () {\r\n                        // 获取当前按钮位置, e 获取用户决定按钮是否可以关闭层，回调函数return false则不关闭层\r\n                        var index = $(this).data('index'), e = true;\r\n                        // 监测用户是否配置回调函数\r\n                        if (opt.buttons.length && opt.buttons[index] && opt.buttons[index]['ok']) {\r\n                            // ok为函数才执行\r\n                            if (opt.buttons[index]['ok'] && typeof  opt.buttons[index]['ok'] === \"function\") {\r\n                                // 获取用户是否关闭层指令，默认关闭\r\n                                e = opt.buttons[index]['ok'].call(null, $(this), index) === false ? false : true;\r\n                            }\r\n                        }\r\n\r\n                        $($that.selector).data('options', opt);\r\n                        // 指令为true时关闭层\r\n                        e && $($that.selector).modal('hide')\r\n                    })\r\n                    .on('hide.ui.modal', function () {  // 调用隐藏的时候删除dom\r\n                        $(this).remove();\r\n                    });\r\n\r\n                // 不显示关闭\r\n                if (!opt.close) $($that.selector).find('.modal-close').hide();\r\n                // 关闭回调\r\n                if ($.isFunction(opt.close)) {\r\n                    $(this).on('hide.ui.modal', opt.close)\r\n                }\r\n            }\r\n        });\r\n        /*  } */\r\n    };\r\n\r\n\r\n    // 元素插件绑定\r\n    // ====================\r\n    var Handler = function () {\r\n        var $this = $(this);\r\n        var href = $(this).attr('href');\r\n        var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, '')));\r\n        var option = $target.data('ui.modal') ? 'toggle' : $.extend({remote: !/#/.test(href) && href}, $target.data(), $this.data());\r\n\r\n        // 实例化\r\n        Plugin.call($target, option, this);\r\n    };\r\n    var initModal = function () {\r\n        $(document).on('click.ui.modal', '[data-toggle=\"modal\"]', function (e) {\r\n            var that = e.target;\r\n            $(that).is('[data-toggle=\"modal\"]') && Handler.call(that, e);\r\n        });\r\n\r\n        // 全局绑定，默认不显示\r\n        //$('.modal-background:not(\".display-none\")').modal();\r\n    };\r\n\r\n    $(initModal);\r\n\r\n\r\n    // --------\r\n    // 扩展成功失败弹窗\r\n    /**\r\n     * 依赖 /js/ui/modal.js\r\n     * @param {string} icon 图标样式\r\n     * @param {string} title 提示标题\r\n     * @param {string|html} 提示内容\r\n     * @param {array} buttons 按钮定义\r\n     */\r\n    // 成功弹层\r\n    var successModalLayer = (function () {\r\n        return function (config) {\r\n            var id = config['id'] ? config['id'] : '#j-modal-status';\r\n            // 使用modalLayer api\r\n            $(id).modalLayer({\r\n                icon: 'success',\r\n                title: (config['title'] || ''),\r\n                content: (config['content'] || ''),\r\n                buttons: [\r\n                    {\r\n                        text: '确认',\r\n                        ok: function () {\r\n                            if (config && typeof config['link'] == 'string') {\r\n                                location.href = config['link'];\r\n                            }\r\n                            if (config && typeof config['callback'] == 'function') {\r\n                                config['callback']();\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    })();\r\n\r\n    // 确认询问弹层\r\n    var confirmModalLayer = (function () {\r\n        return function (config) {\r\n            var id = config['id'] ? config['id'] : '#confirmModalLayer';\r\n            $(id).modalLayer({\r\n                icon: 'info',\r\n                title: (config['title'] || ''),\r\n                content: (config['content'] || ''),\r\n                buttons: [\r\n                    {\r\n                        text: '确定',\r\n                        ok: config['callback']\r\n                    },\r\n                    {\r\n                        text: '取消',\r\n                        href: 'javascript:void(0);',\r\n                        style: 'btn links fn-ml-10'\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    })();\r\n\r\n    // 警告弹层\r\n    var alertModalLayer = (function () {\r\n        return function (config) {\r\n            var id = config['id'] ? config['id'] : '#alertModalLayer';\r\n            $(id).modalLayer({\r\n                icon: (config['icon'] || 'info'),\r\n                title: (config['title'] || ''),\r\n                content: (config['content'] || ''),\r\n                buttons: [\r\n                    {\r\n                        text: '确定',\r\n                        ok: config['callback']\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    })();\r\n\r\n    // 关闭弹层不是隐藏\r\n    var closeModalLayer = (function () {\r\n        return function (id, fn) {\r\n            $(id).modal('hide').on('hide.ui.modal', function () {\r\n                $(this).remove();\r\n                typeof fn === 'function' && fn();\r\n            })\r\n        }\r\n    })();\r\n\r\n\r\n    // 外部\r\n    jQuery.successModalLayer = successModalLayer;\r\n    jQuery.confirmModalLayer = confirmModalLayer;\r\n    jQuery.alertModalLayer = alertModalLayer;\r\n    jQuery.closeModalLayer = closeModalLayer;\r\n\r\n\r\n    // ---------------\r\n    // --- 扩展 支持iframe\r\n\r\n    /**\r\n     * 扩展modal,iframe modal\r\n     * 简单指\r\n     * require ui.js(modal.js)\r\n     */\r\n    ~(function ($) {\r\n\r\n        var APILIST = {};\r\n\r\n        /**\r\n         * iframe\r\n         * @param selector\r\n         */\r\n        function dialogApi(selector, opt, next) {\r\n            this.selector = selector;\r\n            this.next = next;\r\n            this.opt = opt;\r\n            this.dialog = this.get(selector);\r\n\r\n            this.showModal(opt);\r\n\r\n        }\r\n\r\n        /**\r\n         * modal\r\n         */\r\n        dialogApi.prototype.showModal = function (opt) {\r\n            var that = this;\r\n\r\n            // 设置默认为hide\r\n            opt.show = false;\r\n            opt.content = '';\r\n\r\n            opt.callback = function () {\r\n                that.dialog = $(that.selector);\r\n                that.$dom = $(this);\r\n                if (opt && opt['url']) {\r\n                    that.originalUrl = opt.url;\r\n                    that.init();\r\n\r\n                    typeof that.next == \"function\" && that.next.call(that, that.$dom);\r\n                }\r\n            }\r\n\r\n            that.dialog.modal(opt);\r\n        }\r\n\r\n        /**\r\n         * 初始化iframe对象\r\n         */\r\n        dialogApi.prototype.init = function (url) {\r\n            var $body = this.$dom.find('.modal-body');\r\n            this.$title = this.$dom.find('.modal-title');\r\n            this.$iframe = $('<iframe />');\r\n            this.$iframe.attr({\r\n                src: (url || this.originalUrl),\r\n                //name: api.id,\r\n                width: (this.opt.width || '100%'),\r\n                height: (this.opt.height || '100%'),\r\n                allowtransparency: 'yes',\r\n                frameborder: 'no',\r\n                scrolling: 'no'\r\n            }).on('load', $.proxy(this.adjustHeight, this));\r\n\r\n            $body.empty().append(this.$iframe);\r\n            //this.show();\r\n        }\r\n\r\n        // 重新设置 title,content\r\n        dialogApi.prototype.setProp = function (config) {\r\n            (config['title'] && this.$title.html(config['title']));\r\n            (config['url'] && (this.$iframe[0].src = config['url']));\r\n        }\r\n\r\n        dialogApi.prototype.setUrl = function (url) {\r\n            //this.$iframe && this.$iframe.attr('src', url);\r\n            this.init(url);\r\n            return true;\r\n        }\r\n\r\n        /**\r\n         * iframe自适应高度\r\n         */\r\n        dialogApi.prototype.adjustHeight = function () {\r\n            var test, h\r\n\r\n            // BUG: IE自动累加高度\r\n            // 设置为0重新调整\r\n            this.$iframe.css({height: '0px'})\r\n\r\n            try {\r\n                // 跨域测试\r\n                test = this.$iframe[0].contentWindow.frameElement;\r\n            } catch (e) {\r\n            }\r\n\r\n            if (test) {\r\n                h = this.$iframe.contents().height();\r\n                this.$iframe.css({height: h + 'px'})\r\n            }\r\n        }\r\n\r\n        /**\r\n         * iframe调用父窗口\r\n         * @param opt\r\n         */\r\n\r\n        /**\r\n         * 显示\r\n         */\r\n        dialogApi.prototype.show = function () {\r\n            this.dialog.modal('show');\r\n        }\r\n\r\n        /**\r\n         * 隐藏\r\n         */\r\n        dialogApi.prototype.hide = function () {\r\n            this.dialog.modal('hide');\r\n        }\r\n\r\n        /**\r\n         * 获取父窗口\r\n         * @param opt\r\n         */\r\n        dialogApi.get = dialogApi.prototype.get = function (id) {\r\n            // 从iframe中传入window\r\n            if (id && id.frameElement) {\r\n                var iframe = id.frameElement;\r\n                var api;\r\n                var modalList = $('.modal-background', id.parent.document);\r\n                modalList.each(function (i, item) {\r\n                    var ifr = $(item).find('iframe');\r\n                    if (ifr[0] === iframe) api = $(item);\r\n                });\r\n                return api;\r\n            } else {\r\n                return $(id);\r\n            }\r\n        }\r\n\r\n        dialogApi.close = function (id) {\r\n            var dialog = dialogApi.get(id);\r\n            $(dialog).find('.modal-close').trigger('click');\r\n            $(dialog).remove();\r\n        }\r\n\r\n        /**\r\n         * 重复了，暂无方法优化\r\n         * @param id\r\n         */\r\n        dialogApi.adjustHeight = function (id) {\r\n            var dialog = dialogApi.get(id);\r\n            var $iframe = $(dialog).find('iframe');\r\n            var test, h;\r\n\r\n            try {\r\n                // 跨域测试\r\n                test = $iframe[0].contentWindow.frameElement;\r\n            } catch (e) {\r\n            }\r\n\r\n            if (test) {\r\n                h = $iframe.contents().height();\r\n                $iframe.css({height: h + 'px'})\r\n            }\r\n        }\r\n\r\n        $.fn.iframeModal = function (opt, args) {\r\n            var that = $(this);\r\n            var selector = $(this).selector;\r\n\r\n            if ((this[0] === window || this[0] === parent) && opt == 'hide') {\r\n                dialogApi.close(window);\r\n                return;\r\n            }\r\n\r\n            if (this[0] === window && opt == 'adjustHeight') {\r\n                dialogApi.adjustHeight(window);\r\n                return;\r\n            }\r\n\r\n            var data = that.data('ui.iframeModal');\r\n            if (!data) {\r\n                data = new dialogApi(selector, opt, function (obj) {\r\n                    $(obj).data('ui.iframeModal', this);\r\n                })\r\n            } else {\r\n                if (opt && opt['url'] && opt['reset']) {\r\n                    data && data.setUrl(opt.url) && data.show();\r\n                } else {\r\n                    if ($.isPlainObject(opt)) {\r\n                        data.setProp(opt);\r\n                    }\r\n                    data && data.show();\r\n                }\r\n            }\r\n\r\n            // 调用关闭方法\r\n            if (typeof opt === 'string') {\r\n                data[opt] && data[opt](args)\r\n            }\r\n        };\r\n\r\n        $(function () {\r\n            $(document).on('click', '[data-toggle=\"iframeModal\"]', function (e) {\r\n                e.preventDefault();\r\n                var title = $(this).attr('data-title') || '提示';\r\n                var url = $(this).attr('data-url');\r\n\r\n                url && title && $('#iframe-modal').iframeModal({\r\n                    title: title,\r\n                    url: url\r\n                });\r\n            })\r\n        })\r\n    })(jQuery);\r\n\r\n})(jQuery);\r\n","/*!\r\n * Notify 通知\r\n * tommyshao <jinhong.shao@frontpay.cn>\r\n * Reference uikit.notify.js\r\n * API:\r\n *      $.notify({\r\n *          message: '',\r\n *          status:['success', 'warning', 'danger'],\r\n *          group: false,\r\n *          pos: 'top-center',\r\n *          opacity: .85,\r\n *          timeout: 5000,\r\n *          onClose: function(){}\r\n *      });\r\n */\r\n\r\n+(function($) {\r\n\r\n    'use strict';\r\n\r\n    // 存放方位集合\r\n    var containers = {};\r\n    //  通知集合\r\n    var messages = {};\r\n    // 接口，扩展$.notify\r\n    var notify = function (options) {\r\n        if (typeof options === 'string') {\r\n            options = {message: options};\r\n        }\r\n\r\n        if (arguments[1]) {\r\n            options = $.extend(options, typeof arguments[1] === 'string' ? {status: arguments[1]} : arguments[1]);\r\n        }\r\n\r\n        return (new Notify(options)).show();\r\n    };\r\n    // 关闭所有接口\r\n    var closeAll = function (group, instantly) {\r\n        var id;\r\n\r\n        if (group) {\r\n            for (id in messages) {\r\n                if (group === messages[id].group) messages[id].close(instantly)\r\n            }\r\n        } else {\r\n            for (id in messages) {\r\n                messages[id].close(instantly)\r\n            }\r\n        }\r\n    };\r\n\r\n    // 构造函数\r\n    // ===============\r\n    var Notify = function (options) {\r\n\r\n        this.timeout = false;\r\n        this.currentStatus = \"\";\r\n        this.group = false;\r\n        this.options = $.extend({}, Notify.DEFAULTS, options);\r\n\r\n        // uuid 设置唯一id\r\n        this.uuid = 'Notify_' + Math.random().toString(36).substr(2);\r\n\r\n        // 创建元素\r\n        this.$el = $([\r\n            '<div class=\"notify-message\">',\r\n            '<a class=\"notify-close\">&times;</a>',\r\n            '<div></div>',\r\n            '</div>'\r\n        ].join('')).data('ui.notify', this);\r\n\r\n        // 设置内容\r\n        this.content(this.options.message);\r\n\r\n        // 设置状态\r\n        if (this.options.status) {\r\n            this.$el.addClass('notify-message-' + this.options.status);\r\n            this.currentStatus = this.options.status;\r\n        }\r\n\r\n        // 分组\r\n        this.group = this.options.group;\r\n\r\n        // 消息按uuid存放\r\n        messages[this.uuid] = this;\r\n\r\n        // 方位存放\r\n        if (!containers[this.options.pos]) {\r\n            containers[this.options.pos] = $('<div class=\"notify notify-' + this.options.pos + '\"></div>')\r\n                .appendTo($('body'))\r\n                .on('click', '.notify-message', function () {\r\n                    var message = $(this).data('ui.notify');\r\n                    message.$el.trigger('manualclose.ui.notify', [message]);\r\n                    message.close();\r\n                });\r\n        }\r\n    };\r\n\r\n    Notify.VERSION = '1.0.0';\r\n\r\n    Notify.DEFAULTS = {\r\n        message: \"\", // 提示内容\r\n        status: \"\",  // 状态，样式颜色\r\n        opacity: .85, // 层透明度\r\n        timeout: 5000, // 定时延迟消失\r\n        group: null,   // 是否分组\r\n        pos: \"top-center\", // 定位\r\n        onClose: function () {\r\n        }  // 关闭触发事件\r\n    };\r\n\r\n    // Public Method\r\n    // ===============\r\n    /* 显示 */\r\n    Notify.prototype.show = function () {\r\n        if (this.$el.is(':visible')) return;\r\n\r\n        var $this = this;\r\n\r\n        // 方位添加元素\r\n        containers[this.options.pos].show().prepend(this.$el);\r\n\r\n        var marginbottom = parseInt(this.$el.css('margin-bottom'), 10);\r\n\r\n        // 动画显示\r\n        this.$el.css({opacity: 0, \"margin-top\": -1 * this.$el.outerHeight(), \"margin-bottom\": 0})\r\n            .animate({opacity: this.options.opacity, \"margin-top\": 0, \"margin-bottom\": marginbottom}, function () {\r\n                if ($this.options.timeout) { // 延时关闭\r\n                    var closefn = function () {\r\n                        $this.close()\r\n                    };\r\n                    $this.timeout = setTimeout(closefn, $this.options.timeout);\r\n\r\n                    $this.$el.hover(\r\n                        function () {\r\n                            clearTimeout($this.timeout)\r\n                        },\r\n                        function () {\r\n                            $this.timeout = setTimeout(closefn, $this.options.timeout)\r\n                        }\r\n                    );\r\n                }\r\n            });\r\n\r\n        return this;\r\n    };\r\n\r\n    /* 关闭 */\r\n    Notify.prototype.close = function (instanly) {\r\n        var $this = this,\r\n            finalize = function () {\r\n                $this.$el.remove();\r\n\r\n                if (!containers[$this.options.pos].children().length) {\r\n                    containers[$this.options.pos].hide();\r\n                }\r\n\r\n                $this.options.onClose.apply($this, []);\r\n                $this.$el.trigger('close.ui.notify', [$this]);\r\n\r\n                delete messages[$this.uuid];\r\n            }\r\n\r\n        if (this.timeout) clearTimeout(this.timeout);\r\n\r\n        if (instanly) {\r\n            finalize();\r\n        } else {\r\n            this.$el.animate({opacity: 0, \"margin-top\": -1 * this.$el.outerHeight(), \"margin-bottom\": 0}, function () {\r\n                finalize();\r\n            })\r\n        }\r\n    };\r\n\r\n    /* 设置内容或获取 */\r\n    Notify.prototype.content = function (html) {\r\n        var container = this.$el.find('>div');\r\n\r\n        if (!html) {\r\n            return container.html();\r\n        }\r\n\r\n        container.html(html);\r\n\r\n        return this;\r\n    };\r\n\r\n    /* 设置状态及样式 */\r\n    Notify.prototype.status = function (status) {\r\n        if (!status) {\r\n            return this.currentStatus;\r\n        }\r\n\r\n        this.$el.removeClass('nofity-message-' + this.currentStatus).addClass('notify-message-' + status);\r\n\r\n        this.currentStatus = status;\r\n\r\n        return this;\r\n    };\r\n\r\n\r\n    // 插件定义\r\n    //======================\r\n    function Plugin(option) {\r\n        return $(this).on('click', function () {\r\n            option = typeof option === 'string' ? {message: option} : option;\r\n            var data = new Notify(option);\r\n            data.show();\r\n        });\r\n    }\r\n\r\n\r\n    // jQuery 插件扩展\r\n    $.notify = notify;\r\n    $.notify.closeAll = closeAll;\r\n    $.fn.notify = Plugin;\r\n    $.fn.notify.Constructor = Notify;\r\n\r\n})(jQuery);\r\n","/*!\r\n * 分页|pagination\r\n * tommyshao <jinhong.shao@frontpay.cn>\r\n * Reference uikit.pagination.js\r\n * API:\r\n *      $(element).pagination({ onSelectPage: function(index, instance){});\r\n *\r\n *      $(element).on('ui.select.pagination', function(e, index, instance){\r\n            console.log(index)\r\n         })\r\n\r\n        $(element).pagination({ onSelectPage: function(index, instance){});\r\n\r\n        $(element).pagination('selectPage', 2, 100);\r\n */\r\n\r\n+(function ($) {\r\n    'use strict';\r\n\r\n    // 默认高亮类\r\n    var active = 'active';\r\n    // 分页总码数模板\r\n    var pageStr = '<p class=\"pull-left fs-12 lh-26\">共{$pages}页，{$items}条记录，每页显示{$itemsOnPage}条。</p>';\r\n\r\n\r\n    // 构造函数\r\n    // @param {object} element 容器dom元素\r\n    // @param {json}   options 配置参数面量\r\n    // ===============\r\n    var Pagination = function (element, options) {\r\n        // 分页主容器\r\n        this.$el = $(element);\r\n        // 初始化\r\n        this._init(options);\r\n    };\r\n\r\n    // 版本\r\n    Pagination.VERSION = '1.0.0';\r\n    // 分页默认参数\r\n    Pagination.DEFAULTS = {\r\n        //每页显示条数\r\n        pageSize: 10,\r\n        // 总记录数\r\n        items: 1,\r\n        // 每页记录数\r\n        itemsOnPage: 10,\r\n        // 总页数\r\n        pages: 0,\r\n        // 只显示页数区间\r\n        displayedPages: 8,\r\n        // 到末页显示多少页码\r\n        edges: 1,\r\n        // 当前页\r\n        currentPage: 0,\r\n        //是否可以改变 pageSize\r\n        showSizeChanger: true,\r\n        // 分页总码数字符, 默认不显示, show-是否显示, template 字符模板\r\n        pageStr: {\r\n            show: false,\r\n            template: ''\r\n        },\r\n        lblPrev: '\\u4e0a\\u4e00\\u9875', //上一页\r\n        lblNext: '\\u4e0b\\u4e00\\u9875', //下一页\r\n        // 选中触发事件\r\n        onSelectPage: function () {}\r\n    };\r\n\r\n    // 初始化\r\n    // =================\r\n    Pagination.prototype._init = function (options, inited) {\r\n        var $this = this;\r\n\r\n        this._setOption(options);\r\n\r\n        $this.itemsOnPage = this.options.itemsOnPage;\r\n        $this.pageSize = this.options.pageSize;\r\n        $this.items = this.options.items;\r\n        $this.current = this.options.currentPage;\r\n\r\n        // 总页数\r\n        $this.pages = $this.options.pages ? $this.options.pages : Math.ceil($this.items / this.itemsOnPage) ? Math.ceil($this.items / $this.itemsOnPage) : 1;\r\n\r\n        // 当前页，从0开始\r\n        $this.currentPage = $this.options.currentPage - 1;\r\n        // 页数区间的一半\r\n        $this.halfDisplayed = $this.options.displayedPages / 2;\r\n\r\n        // dom 渲染\r\n        $this._render();\r\n        //新增加改变每页显示条目数。author ethan\r\n        $this._renderPageSize();\r\n        // 绑定点击切换页码\r\n        !!!inited && $this.$el.on('click', 'a[data-page]', function (e) {\r\n            e.preventDefault();\r\n            $this.selectPage($(this).data('page')); //新增pageSize\r\n        });\r\n    };\r\n\r\n    Pagination.prototype.init = function (options) {\r\n        this._init(options, true);\r\n    };\r\n\r\n    // 私有方法\r\n    // 设置配置\r\n    Pagination.prototype._setOption = function (options) {\r\n        this.options = $.extend({}, Pagination.DEFAULTS, options);\r\n    };\r\n\r\n    // 切换页码\r\n    // 新增pageSize\r\n    Pagination.prototype.selectPage = function (pageIndex, pages) {\r\n        console.log(pageIndex)\r\n        console.log(pages)\r\n        console.log(this.pageSize)\r\n        // 切换到设置页\r\n        this.currentPage = pageIndex - 1;\r\n        this.current = pageIndex;\r\n        // 重新渲染dom\r\n        this.render(pages);\r\n\r\n        // 触发切换选择函数\r\n        this.options.onSelectPage(pageIndex, this, this.pageSize);\r\n        // 触发api接口\r\n        this.$el.trigger('select.ui.pagination', [pageIndex, this, this.pageSize]);\r\n    };\r\n\r\n    Pagination.prototype._render = function () {\r\n        var o = this.options,\r\n            interval = this._getInterval(),\r\n            i;\r\n        // 清空dom\r\n        this.$el.empty().prevAll().remove();\r\n        if (this.pages <= 1) return;\r\n\r\n        // 上一页,false时不显示，当前页-1，text为显示文字，true为自定义label\r\n        //console.log('currentPage:'+ o.currentPage)\r\n        if (o.lblPrev && this.currentPage - 1 >= 0) this._append(this.currentPage - 1, {\r\n            text: o.lblPrev\r\n        }, true);\r\n\r\n\r\n        // 左边首页显示边缘页数\r\n        if (interval.start > 0 && o.edges > 0) { // 显示末页\r\n            var end = Math.min(o.edges, interval.start);\r\n            for (i = 0; i < end; i++) this._append(i);\r\n\r\n            if (o.edges < interval.start && (interval.start - o.edges != 1)) {\r\n                this.$el.append('<li><span>...</span></li>')\r\n            } else if (interval.start - o.edges == 1) {\r\n                this._append(o.edges);\r\n            }\r\n        }\r\n\r\n        // 显示 (当前页-4, 当前页， 当前页+4)\r\n        for (i = interval.start; i < interval.end; i++) this._append(i);\r\n\r\n        // 右边末页显示边缘页数\r\n        if (interval.end < this.pages && o.edges > 0) {\r\n            if (this.pages - o.edges > interval.end && (this.pages - o.edges - interval.end != 1)) {\r\n                this.$el.append('<li><span>...</span></li>')\r\n            } else if (this.pages - o.edges - interval.end == 1) {\r\n                this._append(interval.end++);\r\n            }\r\n\r\n            var begin = Math.max(this.pages - o.edges, interval.end);\r\n\r\n            for (i = begin; i < this.pages; i++) this._append(i);\r\n        }\r\n\r\n        // 下一页,false时不显示，当前页+1，text为显示文字，true为自定义label\r\n        //console.log(this.currentPage, this.pages)\r\n        if (o.lblNext && this.currentPage < this.pages - 1) this._append(this.currentPage + 1, {\r\n            text: o.lblNext\r\n        }, true);\r\n\r\n        this.renderPageStr();\r\n\r\n    };\r\n\r\n    //新增加改变每页显示条目数。author ethan\r\n    Pagination.prototype._renderPageSize = function () {\r\n        if (this.options.showSizeChanger && this.options.showSizeChanger) {\r\n            var that = this;\r\n            var id = \"PageSize-selector-id-\" + Math.ceil(Math.random() * 100000 + 100000);\r\n            var select =\r\n                '<div class=\"form-control\" style=\"display: inline-block; width: auto;vertical-align: top;padding: 0;margin-left: 10px;border:none;\">' +\r\n                '<select id=\"' + id + '\" style=\"height: 25px;border-radius:3px;color:#999\">' +\r\n                '<option value=\"10\">每页 10 条</option>' +\r\n                '<option value=\"20\">每页 20 条</option>' +\r\n                '<option value=\"30\">每页 30 条</option>' +\r\n                '<option value=\"100\">每页 100 条</option>' +\r\n                '</select>' +\r\n                '</div>';\r\n            that.$el.after(select);\r\n            // 绑定点击切换页码\r\n            $('#' + id).on('change', function (e) {\r\n                e.preventDefault();\r\n                that.itemsOnPage = this.value;\r\n                that.pageSize = this.value;\r\n                // 总页数\r\n                that.pages = Math.ceil(that.items / this.value) > 0 ? Math.ceil(that.items / this.value) : 1;\r\n                console.log('-->', Math.ceil(that.items / this.value));\r\n                console.log('-->', that.pages);\r\n                that.selectPage(1, null, this.value); //后端需求跳回第1页\r\n            });\r\n        }\r\n    }\r\n\r\n    // 渲染总页码\r\n    Pagination.prototype.renderPageStr = function () {\r\n        if (this.options.pageStr && this.options.pageStr.show) {\r\n            var that = this;\r\n            var oPageStr = that.$el.prevAll();\r\n            var template = this.options.pageStr.template || pageStr;\r\n\r\n            template = template.replace(/{\\$(\\w*)}/gi, function (matches, key, index) {\r\n                return that[key] ? that[key] : 0;\r\n            })\r\n\r\n            oPageStr.length && oPageStr.remove();\r\n\r\n            that.$el.before($(template));\r\n        }\r\n    }\r\n\r\n    // 重新渲染,外部接口\r\n    Pagination.prototype.render = function (pages) {\r\n        this.pages = pages ? pages : this.pages;\r\n        this._render();\r\n    };\r\n\r\n    // 获取显示页码范围\r\n    Pagination.prototype._getInterval = function () {\r\n        return {\r\n            start: Math.ceil(\r\n                // 当前页是否大于显示范围的一半\r\n                this.currentPage > this.halfDisplayed ?\r\n                Math.max(\r\n                    // 从当前页-显示一半范围开始\r\n                    Math.min(this.currentPage - this.halfDisplayed, (this.pages - this.options.displayedPages))\r\n                    // 当前页小于一半且总页数小于显示范围，从第一页开始\r\n                    , 0)\r\n                // 从第一页开始\r\n                :\r\n                0),\r\n            end: Math.ceil(\r\n                // 当前页是否大于显示范围的一半\r\n                this.currentPage > this.halfDisplayed\r\n                // 当前页+显示范围的一半\r\n                ?\r\n                Math.min(this.currentPage + this.halfDisplayed, this.pages)\r\n                // 结束为最多显示，末页\r\n                :\r\n                Math.min(this.options.displayedPages, this.pages))\r\n        }\r\n    };\r\n\r\n    // 重新组织dom结构\r\n    // pageIndex 渲染页码\r\n    // opts 文本配置\r\n    // islb 是否上一页下一页，是永不加active\r\n    Pagination.prototype._append = function (pageIndex, opts, islb) {\r\n        var $this = this,\r\n            item, options;\r\n\r\n        // 判断首页，末页，常规页\r\n        pageIndex = pageIndex < 0 ? 0 : (pageIndex < this.pages ? pageIndex : this.pages - 1);\r\n        options = $.extend({\r\n            text: pageIndex + 1\r\n        }, opts);\r\n\r\n        // console.log(pageIndex, this.currentPage, islb)\r\n\r\n        // 判断当前页与非当前页\r\n        item = (pageIndex == this.currentPage) ?\r\n            // 当前页， 上一页下一页不加active类\r\n            '<li ' + (islb ? '' : 'class=\"' + active + '\"') + '><a href=\"javascript:void(0);\">' + (options.text) + '</a></li>'\r\n            // 分当前页标识为可点击\r\n            :\r\n            '<li><a href=\"#page-' + (pageIndex + 1) + '\" data-page=\"' + (pageIndex + 1) + '\">' + options.text + '</a></li>';\r\n\r\n        //console.log(item);\r\n\r\n        $this.$el.append(item);\r\n    };\r\n\r\n    // 插件定义\r\n    //======================\r\n    function Plugin(options) {\r\n        // 获取传入参数，可能不止options一个参数\r\n        var args = arguments;\r\n        // jquery 链式\r\n        return $(this).each(function () {\r\n            var $this = $(this);\r\n            if ($this.hasClass('no-js')) return;\r\n            var data = $this.data('ui.pagination');\r\n\r\n            // 创建一个新实例\r\n            if (!data) $this.data('ui.pagination', (data = new Pagination($this, $.extend({}, $this.data(), options))));\r\n\r\n            if (typeof options == 'string') { // 调用接口方法,第二个参数为方法传入参数\r\n                data[options].apply(data, [].slice.call(args, 1));\r\n            }\r\n        })\r\n    }\r\n\r\n    // jQuery 插件扩展\r\n    $.fn.pagination = Plugin;\r\n    $.fn.pagination.Constructor = Pagination;\r\n\r\n    // 元素插件绑定\r\n    // ====================\r\n    $(function () {\r\n        $('[ui-pagination],.pagination').pagination();\r\n    })\r\n\r\n})(jQuery);\r\n","//     placeholder 占位符\r\n//     tommyshao <jinhong.shao@frontpay.cn>\r\n\r\n// API:\r\n// ------\r\n// $(element).placeholder();\r\n\r\n+(function($) {\r\n    'use strict';\r\n\r\n    var toggle = 'input[placeholder]';\r\n\r\n    var input = document.createElement('input');\r\n    var isSupport = 'placeholder' in input;\r\n\r\n    // 构造函数\r\n    // ===============\r\n    var Placeholder = function (element) {\r\n        var $this = this;\r\n        $this.$el = $(element);\r\n        this.init();\r\n    };\r\n\r\n    Placeholder.VERSION = '1.0.0';\r\n\r\n    Placeholder.prototype.init = function () {\r\n        if (isSupport) return;\r\n        var $this = this;\r\n        this.$placeholder = $this.$el.data('placeholder');\r\n        if (!isSupport && !this.$placeholder) {\r\n            var text = $this.$el.attr('placeholder');\r\n            $this.$placeholder = $('<label class=\"form-placeholder\" />').html(text);\r\n            $this.$el.data('placeholder', $this.$placeholder).before($this.$placeholder);\r\n        }\r\n\r\n        $this.$el.on('focus', $.proxy(this.focus, this));\r\n        $this.$el.on('blur', $.proxy(this.blur, this));\r\n        $this.$placeholder.on('click', $.proxy(this.focus, this));\r\n\r\n        // 默认隐藏placeholder\r\n        this.blur();\r\n    };\r\n\r\n    Placeholder.prototype.focus = function () {\r\n        this.$placeholder.hide();\r\n    };\r\n\r\n    Placeholder.prototype.blur = function () {\r\n        this.$placeholder[this.$el.val() === '' ? 'show' : 'hide']();\r\n    };\r\n\r\n\r\n    // 插件定义\r\n    //======================\r\n    function Plugin() {\r\n        return $(this).each(function () {\r\n            var $this = $(this);\r\n            var data = $this.data('ui.placeholder');\r\n            if (!data) $this.data('ui.placeholder', (data = new Placeholder(this)));\r\n        })\r\n    }\r\n\r\n\r\n    // jQuery 插件扩展\r\n    $.fn.placeholder = Plugin;\r\n    $.fn.placeholder.Constructor = Placeholder;\r\n\r\n    // 元素插件绑定\r\n    // ====================\r\n    $(function () {\r\n        $(toggle).placeholder()\r\n    });\r\n\r\n\r\n})(jQuery);\r\n","/*!\r\n * slider 图片轮播\r\n * tommyshao <jinhong.shao@frontpay.cn>\r\n * REFFRENCE: http://unslider.com\r\n * API:\r\n *      $(element).slider();\r\n */\r\n\r\n;(function ($, f) {\r\n\r\n\t'use strict';\r\n\r\n\tvar toggle = '[data-toggle=\"slider\"]';\r\n\t//  If there's no jQuery, Unslider can't work, so kill the operation.\r\n\tif(typeof $ === 'undefined') return f;\r\n\r\n\tvar Unslider = function() {\r\n\t\t//  Set up our elements\r\n\t\tthis.el = f;\r\n\t\tthis.items = f;\r\n\r\n\t\t//  Dimensions\r\n\t\tthis.sizes = [];\r\n\t\tthis.max = [0,0];\r\n\r\n\t\t//  Current inded\r\n\t\tthis.current = 0;\r\n\r\n\t\t//  Start/stop timer\r\n\t\tthis.interval = f;\r\n\r\n\t\t//  Set some options\r\n\t\tthis.opts = {\r\n\t\t\tspeed: 500,\r\n\t\t\tdelay: f, // 3000, f for no autoplay\r\n\t\t\tcomplete: f, // when a slide's finished\r\n\t\t\tkeys: f, // keyboard shortcuts - disable if it breaks things\r\n\t\t\tdots: f, // display 鈥⑩€⑩€⑩€鈥� pagination\r\n\t\t\tfluid: !f, // is it a percentage width?,\r\n\t\t\tprev: f,\r\n\t\t\tnext: f,\r\n\t\t\tarrows: f\r\n\t\t};\r\n\r\n\t\t//  Create a deep clone for methods where context changes\r\n\t\tvar _ = this;\r\n\r\n\t\tthis.init = function(el, opts) {\r\n\t\t\tthis.el = el;\r\n\t\t\tthis.ul = el.children('ul');\r\n\t\t\tthis.max = [(el.outerWidth() || el.parent().outerWidth()), (el.outerHeight() || el.parent().outerHeight())];\r\n\t\t\tthis.items = this.ul.children('li').each(this.calculate);\r\n\r\n\t\t\t//  Check whether we're passing any options in to Unslider\r\n\t\t\tthis.opts = $.extend(this.opts, opts);\r\n\r\n\t\t\t//  Set up the Unslider\r\n\t\t\tthis.setup();\r\n\r\n\t\t\treturn this;\r\n\t\t};\r\n\r\n\t\t//  Get the width for an element\r\n\t\t//  Pass a jQuery element as the context with .call(), and the index as a parameter: Unslider.calculate.call($('li:first'), 0)\r\n\t\tthis.calculate = function(index) {\r\n\t\t\tvar me = $(this),\r\n\t\t\t\t\twidth = me.outerWidth(), height = me.outerHeight();\r\n\r\n\t\t\t//  Add it to the sizes list\r\n\t\t\t_.sizes[index] = [width, height];\r\n\t\t\t//  Set the max values\r\n\t\t\tif(width > _.max[0]) _.max[0] = width;\r\n\t\t\tif(height > _.max[1]) _.max[1] = height;\r\n\t\t};\r\n\r\n\t\t//  Work out what methods need calling\r\n\t\tthis.setup = function() {\r\n\t\t\tvar initEvent = $.Event('init.ui.slider', {relatedTarget: this.el });\r\n\t\t\t//  Set the main element\r\n\t\t\tthis.el.css({\r\n\t\t\t\toverflow: 'hidden',\r\n\t\t\t\twidth: _.max[0],\r\n\t\t\t\theight: this.items.first().outerHeight()\r\n\t\t\t});\r\n\r\n\t\t\t// console.log(_.max[0]);\r\n\r\n\t\t\t//  Set the relative widths\r\n\t\t\tthis.ul.css({width: (this.items.length * 100) + '%', position: 'relative'});\r\n\t\t\tthis.items.css('width', (100 / this.items.length) + '%');\r\n\r\n\t\t\tif(this.opts.delay !== f) {\r\n\t\t\t\tthis.start();\r\n\t\t\t\tthis.el.hover(this.stop, this.start);\r\n\t\t\t}\r\n\r\n\t\t\t//  Custom keyboard support\r\n\t\t\tthis.opts.keys && $(document).keydown(this.keys);\r\n\r\n\t\t\t//  Dot pagination\r\n\t\t\tthis.opts.dots && this.dots();\r\n\r\n\t\t\t//  Little patch for fluid-width sliders. Screw those guys.\r\n\t\t\tif(this.opts.fluid) {\r\n\t\t\t\tvar resize = function() {\r\n\t\t\t\t\t_.el.css('width', Math.min(Math.round((_.el.width() / _.el.parent().width()) * 100), 100) + '%');\r\n\t\t\t\t};\r\n\r\n\t\t\t\tresize();\r\n\t\t\t\t$(window).off('resize.ui.slider').on('resize.ui.slider', resize);\r\n\t\t\t}\r\n\r\n\t\t\tif(this.opts.arrows) {\r\n\t\t\t\tthis.el.parent().append('<p class=\"arrows\"><span class=\"prev\">'+ (this.opts.prevText || 'prev') +'</span><span class=\"next\">'+ (this.opts.nextText || 'next') +'</span></p>')\r\n\t\t\t\t\t\t.find('.arrows span').off('click').on('click', function() {\r\n\t\t\t\t\t$.isFunction(_[this.className]) && _[this.className]();\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tif(this.opts.prev) $(this.opts.prev).off('click').on('click', $.proxy(this.prev, this));\r\n\t\t\tif(this.opts.next) $(this.opts.next).off('click').on('click', $.proxy(this.next, this));\r\n\r\n\t\t\t//  Swipe support\r\n\t\t\tif($.event.swipe) {\r\n\t\t\t\tthis.el.off('swipeleft').on('swipeleft', _.prev).off('swiperight').on('swiperight', _.next);\r\n\t\t\t}\r\n\r\n\t\t\tthis.el.trigger(initEvent)\r\n\t\t};\r\n\r\n\t\t//  Move Unslider to a slide index\r\n\t\tthis.move = function(index, cb) {\r\n\t\t\t//  If it's out of bounds, go to the first slide\r\n\t\t\tif(!this.items.eq(index).length) index = 0;\r\n\t\t\tif(index < 0) index = (this.items.length - 1);\r\n\r\n\t\t\tvar target = this.items.eq(index);\r\n\t\t\tvar obj = {height: target.outerHeight()};\r\n\t\t\tvar speed = cb ? 5 : this.opts.speed;\r\n\r\n\t\t\tvar moveEvent = $.Event('move.ui.slider', { relatedTarget: target, curIndex: index });\r\n\r\n\t\t\tif(!this.ul.is(':animated')) {\r\n\t\t\t\t//  Handle those pesky dots\r\n\t\t\t\t_.el.find('.dot:eq(' + index + ')').addClass('active').siblings().removeClass('active');\r\n\r\n\t\t\t\tthis.el.animate(obj, speed).trigger(moveEvent) && this.ul.animate($.extend({left: '-' + index + '00%'}, obj), speed, function(data) {\r\n\t\t\t\t\t_.current = index;\r\n\t\t\t\t\t$.isFunction(_.opts.complete) && !cb && _.opts.complete(_.el);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//  Autoplay functionality\r\n\t\tthis.start = function() {\r\n\t\t\t_.interval = setInterval(function() {\r\n\t\t\t\t_.move(_.current + 1);\r\n\t\t\t}, _.opts.delay);\r\n\t\t};\r\n\r\n\t\t//  Stop autoplay\r\n\t\tthis.stop = function() {\r\n\t\t\t_.interval = clearInterval(_.interval);\r\n\t\t\treturn _;\r\n\t\t};\r\n\r\n\t\t//  Keypresses\r\n\t\tthis.keys = function(e) {\r\n\t\t\tvar key = e.which;\r\n\t\t\tvar map = {\r\n\t\t\t\t//  Prev/next\r\n\t\t\t\t37: _.prev,\r\n\t\t\t\t39: _.next,\r\n\r\n\t\t\t\t//  Esc\r\n\t\t\t\t27: _.stop\r\n\t\t\t};\r\n\r\n\t\t\tif($.isFunction(map[key])) {\r\n\t\t\t\tmap[key]();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//  Arrow navigation\r\n\t\tthis.next = function(e) { e && e.preventDefault(); return _.stop().move(_.current + 1) };\r\n\t\tthis.prev = function(e) {  e && e.preventDefault(); return _.stop().move(_.current - 1) };\r\n\r\n\t\tthis.dots = function() {\r\n\t\t\t//  Create the HTML\r\n\t\t\tvar html = '<ol class=\"dots\">';\r\n\t\t\t$.each(this.items, function(index) { html += '<li class=\"dot' + (index < 1 ? ' active' : '') + '\">' + (index + 1) + '</li>'; });\r\n\t\t\thtml += '</ol>';\r\n\r\n\t\t\t//  Add it to the Unslider\r\n\t\t\tthis.el.addClass('has-dots').append(html).find('.dot').off('click').on('click', function() {\r\n\t\t\t\t_.move($(this).index());\r\n\t\t\t});\r\n\t\t};\r\n\t};\r\n\r\n\t// 插件定义\r\n\t//======================\r\n\tfunction Plugin(o, s) {\r\n\t\tvar len = this.length;\r\n\r\n\t\t//  Enable multiple-slider support\r\n\t\treturn this.each(function(index) {\r\n\t\t\t//  Cache a copy of $(this), so it\r\n\t\t\tvar me = $(this);\r\n\t\t\tvar config = me.data();\r\n\t\t\tvar instance = me.data('ui.slider');\r\n\r\n\t\t\tif(!instance) {\r\n\t\t\t\to = $.extend({}, o, config);\r\n\t\t\t\tinstance = (new Unslider).init(me, o);\r\n\t\t\t\t//  Invoke an Unslider instance\r\n\t\t\t\tme.data('ui.slider', instance);\r\n\t\t\t}\r\n\t\t\ts = $.extend({}, s, config);\r\n\t\t\tif(typeof o === 'string') instance[o] && instance[o](me, s);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t// jQuery 插件扩展\r\n\t$.fn.slider = Plugin;\r\n\t$.fn.slider.Constructor = Unslider;\r\n\r\n\t// 元素插件绑定\r\n\t// ====================\r\n\t$(function(){ $(toggle).slider() });\r\n\r\n})(jQuery);\r\n","/*!\r\n * smooth-scroll 平滑滚动\r\n * tommyshao <jinhong.shao@frontpay.cn>\r\n * Reference uikit.smoothscroll.js\r\n * API:\r\n *      $(element).placeholder();\r\n */\r\n\r\n+(function($) {\r\n\r\n    'use strict';\r\n\r\n    if (!$.easing.easeOutExpo) $.easing.easeOutExpo = function (x, t, b, c, d) {\r\n        return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\r\n    };\r\n\r\n    // 构造函数\r\n    // ---------\r\n    var SmoothScroll = function (element, options) {\r\n        this.$el = $(element);\r\n        this.options = options;\r\n        this.init();\r\n    };\r\n\r\n    SmoothScroll.VERSION = '1.0.0';\r\n\r\n    /**\r\n     * 默认配置参数\r\n     * @param duration 动画时间\r\n     * @param transition 动画类型\r\n     * @param offset 距离目标位置\r\n     * @param complete 到达位置时完成执行\r\n     * @type {{duration: number, transition: string, offset: number, complete: (*|number|noop|Function)}}\r\n     */\r\n    SmoothScroll.DEFAULTS = {\r\n        duration: 500,\r\n        transition: 'easeOutExpo',\r\n        offset: 0,\r\n        complete: $.noop\r\n    };\r\n\r\n    /**\r\n     * init 初始化\r\n     */\r\n    SmoothScroll.prototype.init = function () {\r\n        this.$el.on('click.ui.smoothScroll', this.scroll(this.$el, this.options));\r\n    };\r\n\r\n\r\n    /**\r\n     * 滚条\r\n     * @param options\r\n     * @returns {Function}\r\n     */\r\n    SmoothScroll.prototype.scroll = function (elem, options) {\r\n        return function (e) {\r\n            e.preventDefault();\r\n            scrollToElement(elem, $(this.hash).length ? $(this.hash) : $(\"body\"), options);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 完成触发\r\n     */\r\n    function emit(elem) {\r\n        return function () {\r\n            var e = $.Event('done.ui.smoothscroll', {relatedTarget: elem});\r\n            elem.trigger(e);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 滚动条跳转到某元素\r\n     * @param elem 目的元素\r\n     * @param options 配置参数\r\n     */\r\n    function scrollToElement(elem, targetElement, options) {\r\n        options = $.extend({}, SmoothScroll.DEFAULTS, options);\r\n\r\n        var target = targetElement.offset().top - options.offset,\r\n            docH = $(document).height(),\r\n            winH = $(window).height();\r\n\r\n        if ((target + winH) > docH) {\r\n            target = docH - winH;\r\n        }\r\n\r\n        $('html,body')\r\n            .stop()\r\n            .animate({scrollTop: target}, options.duration, options.transition)\r\n            .promise()\r\n            .done([options.complete, emit(elem)]);\r\n    }\r\n\r\n\r\n    // 插件定义\r\n    // ---------\r\n    function Plugin(options) {\r\n        return $(this).each(function () {\r\n            var $this = $(this);\r\n            var data = $this.data('ui.smoothScroll');\r\n            if (!data) {\r\n                $this.data('ui.smoothScroll', (new SmoothScroll(this, $.extend({}, $this.data(), options))));\r\n            } else {\r\n                $this.trigger('click.ui.smoothScroll');\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    // jQuery 插件扩展\r\n    $.fn.smoothScroll = Plugin;\r\n    $.fn.smoothScroll.Constructor = SmoothScroll;\r\n\r\n    $(function () {\r\n        $('[data-toggle=\"smooth-scroll\"]').smoothScroll()\r\n    })\r\n\r\n})(jQuery);\r\n","//     switcher 脟脨禄禄脝梅\r\n//     tommyshao <jinhong.shao@frontpay.cn>\r\n\r\n// API:\r\n// ------\r\n// <div data-toggle=\"switcher\" [data-except=\"true\"|data-item=\"a\"|data-active=\"current\"]/>\r\n// $(element).switcher({except:true, item: 'a', active: 'current'});\r\n// $(element).on('select.ui.switcher', function(e){ e.relatedTarget; });\r\n\r\n+(function($) {\r\n\r\n    'use strict';\r\n\r\n    var toggle = '[data-toggle=\"switcher\"]';\r\n\r\n    // 构造函数\r\n    // ----------\r\n    var Switcher = function (element, option) {\r\n        var $this = this;\r\n        this.$el = $(element);\r\n        this.option = $.extend({}, Switcher.DEFAULTS, option, this.$el.data());\r\n        this.$el.on('click.ui.switcher', this.option.item, function (e) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            $this.select($(this));\r\n        });\r\n    };\r\n\r\n    // 版本号\r\n    // ------\r\n    // 1.0.0\r\n    Switcher.VERSION = '1.0.0';\r\n\r\n    // 默认配置参数\r\n    // ----------\r\n    // * `item`\r\n    // * `active`\r\n    // * `except`\r\n    // * `keep`\r\n    Switcher.DEFAULTS = {\r\n        item: 'li',\r\n        active: 'active',\r\n        except: false,\r\n        keep: false\r\n    };\r\n\r\n    // 选中\r\n    // -----\r\n    Switcher.prototype.select = function ($target) {\r\n        var o = this.option, e = $.Event('select.ui.switcher', {relatedTarget: $target});\r\n        if (o.keep && $target.hasClass(o.active)) return;\r\n        $target.toggleClass(o.active).trigger(e);\r\n        if (!o.except) $target.siblings(o.item).removeClass(o.active);\r\n    };\r\n\r\n\r\n    // 插件接口\r\n    // --------\r\n    function Plugin(option) {\r\n        return $(this).each(function () {\r\n            var $this = $(this);\r\n            var data = $this.data('ui.switcher');\r\n\r\n            if (!data) $this.data('ui.switcher', (data = new Switcher(this, option)));\r\n            if (typeof option == 'string') data[option]();\r\n        })\r\n    }\r\n\r\n\r\n    // jQuery 虏氓录镁脌漏脮鹿\r\n    $.fn.switcher = Plugin;\r\n    $.fn.switcher.Constructor = Switcher;\r\n\r\n    // 全局绑定\r\n    // -----------\r\n    $(function () {\r\n        $(toggle).switcher()\r\n    });\r\n\r\n})(jQuery);\r\n","/*!\r\n * TAB 切换\r\n * tommyshao <jinhong.shao@frontpay.cn>\r\n * Reference bootstrap.tab.js\r\n * API:\r\n *      $(element).on('closed.ui.alert', function(e, obj){});\r\n */\r\n\r\n+(function($) {\r\n    'use strict';\r\n\r\n    var tab = '[data-toggle=\"tab\"],.tabs-btn';\r\n\r\n    // 构造函数\r\n    // ----------\r\n    var Tab = function (element) {\r\n        this.$el = $(element);\r\n    };\r\n\r\n    Tab.VERSION = '1.0.0';\r\n\r\n    // 动画过渡时间\r\n    Tab.TRANSITION_DURATION = 150;\r\n\r\n    // 关闭\r\n    // ---------\r\n    Tab.prototype.show = function () {\r\n        var $this = this.$el;\r\n        var $ul = $this.closest('.tabs');\r\n        var selector = $this.data('target');\r\n\r\n        if (!selector) { // a标签\r\n            selector = $this.attr('href')\r\n            selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\r\n        }\r\n\r\n        if ($this.hasClass('active')) return;\r\n\r\n        var $previous = $ul.find('.active a');\r\n        var hideEvent = $.Event('hide.ui.tab', {\r\n            relatedTarget: $this[0]\r\n        });\r\n        var showEvent = $.Event('show.ui.tab', {\r\n            relatedTarget: $previous[0]\r\n        });\r\n\r\n        $previous.trigger(hideEvent);\r\n        $this.trigger(showEvent);\r\n\r\n        if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return;\r\n\r\n        var $target = $(selector);\r\n\r\n        this.activate($this.closest('li'), $ul);\r\n        this.activate($target, $target.parent(), function () {\r\n            $previous.trigger({\r\n                type: 'hidden.ui.tab',\r\n                relatedTarget: $this[0]\r\n            });\r\n            $this.trigger({\r\n                type: 'shown.ui.tab',\r\n                relatedTarget: $previous[0]\r\n            })\r\n        })\r\n    };\r\n\r\n    Tab.prototype.activate = function (element, container, callback) {\r\n        var $active = container.find('> .active');\r\n        var transition = callback\r\n            && $.support.transition\r\n            && (($active.length && $active.hasClass('fade')) || !!container.find('> .fade').length)\r\n\r\n        function next() {\r\n            $active.removeClass('active').find(tab).attr('aria-expanded', false);\r\n\r\n            element.addClass('active').find(tab).attr('aria-expanded', true);\r\n\r\n            if (transition) {\r\n                element[0].offsetWidth;\r\n                element.addClass('in');\r\n            } else {\r\n                element.removeClass('fade');\r\n            }\r\n\r\n            callback && callback();\r\n        }\r\n\r\n        $active.length && transition ?\r\n            $active.one('uiTransitionEnd', next).emulateTransitionEnd(Tab.TRANSITION_DURATION)\r\n            :\r\n            next();\r\n        $active.removeClass('in');\r\n    };\r\n\r\n\r\n    // 插件定义\r\n    // ----------\r\n    function Plugin(option) {\r\n        return $(this).each(function () {\r\n            var $this = $(this);\r\n            var data = $this.data('ui.tab');\r\n\r\n            if (!data) $this.data('ui.tab', (data = new Tab(this)));\r\n            if (typeof option == 'string') data[option] && data[option]();\r\n        })\r\n    }\r\n\r\n\r\n    // jQuery 插件扩展\r\n    $.fn.tab = Plugin;\r\n    $.fn.tab.Constructor = Tab;\r\n\r\n    // 元素插件绑定\r\n    // -------------\r\n    var clickHandler = function (e) {\r\n        if (!$(e.target).hasClass('tab-disabled')) {\r\n            e.preventDefault();\r\n            Plugin.call($(this), 'show')\r\n        }\r\n    };\r\n\r\n    $(function () {\r\n        // $(document).on('click.ui.tab', tab, clickHandler)\r\n        $(document).on('click.ui.tab', function (e) {\r\n            var that = e.target;\r\n            $(that).is(tab) && clickHandler.call(that, e)\r\n        })\r\n    })\r\n\r\n})(jQuery);\r\n","//     tip提示\r\n//     tommyshao <jinhong.shao@frontpay.cn>\r\n//     Reference uikit.tooltips.js\r\n\r\n// API:\r\n// -----\r\n// $(element).tooltips(option);\r\n\r\n+(function($) {\r\n    'use strict';\r\n\r\n    var toggle = '[data-toggle=\"tooltips\"]';\r\n\r\n    // 构造函数\r\n    // ---------\r\n    var Tooltips = function (el, option) {\r\n        this.$el = $(el);\r\n        this.options = $.extend({}, Tooltips.DEFAULTS, this.$el.data(), option && typeof option == \"object\");\r\n        this.$tooltip = null;\r\n        this.content = '';\r\n        this.tooltipdelay = null;\r\n        this.checkdelay = null;\r\n        this.init();\r\n    };\r\n\r\n    Tooltips.VERSION = '1.0.0';\r\n\r\n    // 动画过渡时间\r\n    Tooltips.TRANSITION_DURATION = 150;\r\n\r\n    Tooltips.DEFAULTS = {\r\n        \"offset\": 9,\r\n        \"pos\": \"top\",\r\n        \"animation\": true,\r\n        \"delay\": 0,\r\n        \"cls\": \"\",\r\n        \"active\": \"active\",\r\n        \"content\": function (elem, title) {\r\n            title = elem.attr('title');\r\n            if (title) {\r\n                elem.data('cached-title', title).removeAttr('title');\r\n            }\r\n            return elem.data('cached-title');\r\n        }\r\n    };\r\n\r\n    // Public Method\r\n    // --------------\r\n    Tooltips.prototype.init = function () {\r\n        var $this = this;\r\n\r\n        if (!$this.$tooltip) {\r\n            $this.$tooltip = $('<div class=\"tooltips\"><div class=\"tooltips-inner\"></div><span class=\"tips-arrow-border\"></span><span class=\"tips-arrow\"></span></div>').appendTo('body');\r\n        }\r\n\r\n        $this.$el.on({\r\n            focus: function () {\r\n                $this.show()\r\n            },\r\n            blur: function () {\r\n                $this.hide()\r\n            },\r\n            mouseenter: function () {\r\n                $this.show()\r\n            },\r\n            mouseleave: function () {\r\n                $this.hide()\r\n            }\r\n        });\r\n    };\r\n\r\n    Tooltips.prototype.show = function () {\r\n        this.content = typeof(this.options.content) === \"function\" ? this.options.content(this.$el) : this.options.content;\r\n\r\n        if (this.tooltipdelay) clearTimeout(this.tooltipdelay);\r\n        if (this.checkdelay) clearTimeout(this.checkdelay);\r\n\r\n        if (!this.content.length) return;\r\n\r\n        this.$tooltip.stop().css({\"top\": -2000, \"visibility\": \"hidden\"}).removeClass(this.options.active).show();\r\n        this.$tooltip.find(\".tooltips-inner\").html(this.content);\r\n\r\n        var $this = this,\r\n            pos = $.extend({}, this.$el.offset(), {width: this.$el[0].offsetWidth, height: this.$el[0].offsetHeight}),\r\n            width = this.$tooltip[0].offsetWidth,\r\n            height = this.$tooltip[0].offsetHeight,\r\n            offset = typeof(this.options.offset) === \"function\" ? this.options.offset.call(this.$el) : this.options.offset,\r\n            position = typeof (this.options.pos) === \"function\" ? this.options.pos.call(this.$el) : this.options.pos,\r\n            tmppos = position.split('-'),\r\n            tcss = {\r\n                \"display\": \"none\",\r\n                \"visibility\": \"visible\",\r\n                \"top\": (pos.top + pos.height + height),\r\n                \"left\": pos.left\r\n            };\r\n\r\n        var variants = {\r\n            \"bottom\": {top: pos.top + pos.height + offset, left: pos.left + pos.width / 2 - width / 2},\r\n            \"top\": {top: pos.top - height - offset, left: pos.left + pos.width / 2 - width / 2},\r\n            \"left\": {top: pos.top + pos.height / 2 - height / 2, left: pos.left - width - offset},\r\n            \"right\": {top: pos.top + pos.height / 2 - height / 2, left: pos.left + pos.width + offset}\r\n        };\r\n\r\n        $.extend(tcss, variants[tmppos[0]]);\r\n\r\n        if (tmppos.length == 2) tcss.left = (tmppos[1] == \"left\") ? pos.left : pos.left + pos.width - width;\r\n\r\n        var boundary = this.checkBoundary(tcss.left, tcss.top, width, height);\r\n\r\n        if (boundary) {\r\n            switch (boundary) {\r\n                case \"x\":\r\n\r\n                    if (tmppos.length == 2) {\r\n                        position = tmppos[0] + '-' + (tcss.left < 0 ? 'left' : 'right');\r\n                    } else {\r\n                        position = tcss.left < 0 ? 'right' : 'left';\r\n                    }\r\n\r\n                    break;\r\n                case \"y\":\r\n\r\n                    if (tmppos.length == 2) {\r\n                        position = (tcss.top < 0 ? \"bottom\" : \"top\") + \"-\" + tmppos[1];\r\n                    } else {\r\n                        position = (tcss.top < 0 ? \"bottom\" : \"top\");\r\n                    }\r\n\r\n                    break;\r\n\r\n                case \"xy\":\r\n\r\n                    if (tmppos.length == 2) {\r\n                        position = (tcss.top < 0 ? \"bottom\" : \"top\") + \"-\" + (tcss.left < 0 ? \"left\" : \"right\");\r\n                    } else {\r\n                        position = tcss.left < 0 ? \"right\" : \"left\";\r\n                    }\r\n\r\n                    break;\r\n            }\r\n\r\n            tmppos = position.split('-');\r\n\r\n            $.extend(tcss, variants[tmppos[0]]);\r\n\r\n            if (tmppos.length == 2) tcss.left = (tmppos[1] == \"left\") ? pos.left : pos.left + pos.width - width;\r\n        }\r\n\r\n\r\n        tcss.left -= $(\"body\").position().left;\r\n\r\n        this.tooltipdelay = setTimeout(function () {\r\n            $this.$tooltip.css(tcss).attr(\"class\", ['tooltips', 'tooltips-' + position, $this.options.cls].join(' '));\r\n\r\n            if ($this.options.animation) {\r\n                $this.$tooltip.css({\r\n                    opacity: 0,\r\n                    display: \"block\"\r\n                }).addClass($this.options.active).animate({opacity: 1}, parseInt($this.options.animation, 10) || 400);\r\n            } else {\r\n                $this.$tooltip.show().addClass($this.options.active);\r\n            }\r\n\r\n            $this.tooltipdelay = false;\r\n\r\n            $this.checkdelay = setInterval(function () {\r\n                if (!$this.$el.is(':visible')) $this.hide();\r\n            }, 150);\r\n\r\n        }, parseInt(this.options.delay, 10) || 0);\r\n\r\n    };\r\n\r\n    Tooltips.prototype.hide = function () {\r\n        if (this.$el.is('input') && this.$el[0] === document.activeElement) return;\r\n\r\n        if (this.tooltipdelay) clearTimeout(this.tooltipdelay);\r\n        if (this.checkdelay) clearTimeout(this.checkdelay);\r\n\r\n        this.$tooltip.stop();\r\n\r\n        if (this.options.animation) {\r\n            var $this = this;\r\n\r\n            this.$tooltip.fadeOut(parseInt(this.options.animation, 10) || 400, function () {\r\n                $this.$tooltip.removeClass($this.options.active);\r\n            })\r\n        } else {\r\n            this.$tooltip.hide().removeClass(this.options.active)\r\n        }\r\n\r\n    };\r\n\r\n    Tooltips.prototype.checkBoundary = function (left, top, width, height) {\r\n        var axis = \"\";\r\n\r\n        if (left < 0 || (left - $(document).scrollLeft() + width > $(window).width())) {\r\n            axis += \"x\";\r\n        }\r\n\r\n        if (top < 0 || (top - $(document).scrollTop() + height) > $(window).height()) {\r\n            axis += \"y\";\r\n        }\r\n\r\n        return axis;\r\n    };\r\n\r\n\r\n    // 插件定义\r\n    // ----------\r\n    function Plugin(option) {\r\n        return $(this).each(function () {\r\n            var $this = $(this);\r\n            var data = $this.data('ui.tooltips');\r\n            if (!data) $this.data('ui.tooltips', (data = new Tooltips(this, option)));\r\n            if (typeof option == 'string') data[option]();\r\n        })\r\n    }\r\n\r\n\r\n    // jQuery 插件扩展\r\n    // -------------\r\n    $.fn.tooltips = Plugin;\r\n    $.fn.tooltips.Constructor = Tooltips;\r\n\r\n    // 元素插件绑定\r\n    // ----------\r\n    var handler = function () {\r\n        $(this).tooltips('show');\r\n    };\r\n\r\n    $(function () {\r\n        //$(document).on('mouseenter.tooltip.ui focus tooltip.ui', toggle, handler)\r\n        //$(toggle).tooltips();\r\n        $(document).on('mouseover.tooltip.ui focus.tooltip.ui', function (e) {\r\n            var $this = $(e.target);\r\n            $this.is(toggle) && handler.call($this);\r\n        })\r\n    })\r\n})(jQuery);\r\n","//     动画支持判断扩展\r\n//     tommyshao <jinhong.shao@frontpay.cn>\r\n//     Reference bootstrap.transition.js\r\n//     http://getbootstrap.com/javascript/#transitions\r\n\r\n// API:\r\n// -----\r\n// $.support.transition\r\n// $(element).one('uiTransitionEnd', fn).emulateTransitionEnd(duration)\r\n\r\n\r\n+(function($) {\r\n    'use strict';\r\n\r\n    // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\r\n    // --------------------------------------------\r\n\r\n    function transitionEnd() {\r\n        var el = document.createElement('ui')\r\n\r\n        var transEndEventNames = {\r\n            WebkitTransition: 'webkitTransitionEnd',\r\n            MozTransition: 'transitionend',\r\n            OTransition: 'oTransitionEnd otransitionend',\r\n            transition: 'transitionend'\r\n        }\r\n\r\n        for (var name in transEndEventNames) {\r\n            if (el.style[name] !== undefined) {\r\n                return {end: transEndEventNames[name]}\r\n            }\r\n        }\r\n\r\n        return false // explicit for ie8 (  ._.)\r\n    }\r\n\r\n    // http://blog.alexmaccaw.com/css-transitions\r\n    $.fn.emulateTransitionEnd = function (duration) {\r\n        var called = false\r\n        var $el = this\r\n        $(this).one('uiTransitionEnd', function () {\r\n            called = true\r\n        })\r\n        var callback = function () {\r\n            if (!called) $($el).trigger($.support.transition.end)\r\n        }\r\n        setTimeout(callback, duration)\r\n        return this\r\n    }\r\n\r\n    $(function () {\r\n        $.support.transition = transitionEnd()\r\n\r\n        if (!$.support.transition) return\r\n\r\n        $.event.special.uiTransitionEnd = {\r\n            bindType: $.support.transition.end,\r\n            delegateType: $.support.transition.end,\r\n            handle: function (e) {\r\n                if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n            }\r\n        }\r\n    })\r\n\r\n})(jQuery);\r\n"],"sourceRoot":"/source/"}